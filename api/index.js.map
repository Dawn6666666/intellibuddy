{
  "version": 3,
  "sources": ["../backend/src/models/KnowledgePoint.ts", "../backend/src/models/StudySession.ts", "../backend/src/index.ts", "../backend/src/config/passport.ts", "../backend/src/models/User.ts", "../backend/src/routes/auth.ts", "../backend/src/middleware/logger.ts", "../backend/src/routes/progress.ts", "../backend/src/models/UserProgress.ts", "../backend/src/middleware/auth.ts", "../backend/src/routes/chat.ts", "../backend/src/models/Chat.ts", "../backend/src/routes/ai.ts", "../backend/src/services/ai-models/base.ts", "../backend/src/services/ai-models/kimi.ts", "../backend/src/services/ai-models/qianwen.ts", "../backend/src/services/ai-models/ernie.ts", "../backend/src/services/ai-models/zhipu.ts", "../backend/src/services/ai.ts", "../backend/src/routes/quiz.ts", "../backend/src/routes/assessment.ts", "../backend/src/models/Assessment.ts", "../backend/src/routes/learning-path.ts", "../backend/src/utils/pathRecommender.ts", "../backend/src/utils/intelligentPathRecommender.ts", "../backend/src/models/WrongQuestion.ts", "../backend/src/routes/wrong-questions.ts", "../backend/src/routes/study-time.ts", "../backend/src/routes/achievements.ts", "../backend/src/models/Achievement.ts", "../backend/src/services/achievementService.ts", "../backend/src/utils/response.ts", "../backend/src/routes/learning-report.ts", "../backend/src/routes/analytics.ts", "../backend/src/middleware/analytics.ts", "../backend/src/routes/users.ts", "../backend/src/routes/diagnostic.ts", "../backend/src/services/aiDiagnosticService.ts", "../backend/src/routes/ai-quiz-generator.ts", "../backend/src/services/aiQuizGenerator.ts", "../backend/src/routes/intelligent-path.ts", "../backend/src/routes/learning-companion.ts", "../backend/src/services/learningCompanionService.ts", "../backend/src/routes/feedback.ts", "../backend/src/models/Feedback.ts", "../backend/src/routes/class.ts", "../backend/src/models/Class.ts", "../backend/src/routes/assignment.ts", "../backend/src/models/Assignment.ts", "../backend/src/models/Notification.ts", "../backend/src/routes/analytics-advanced.ts", "../backend/src/routes/membership.ts", "../backend/src/models/Membership.ts", "../backend/src/models/Points.ts", "../backend/src/routes/points.ts", "../backend/src/routes/notification.ts", "../backend/src/routes/question.ts", "../backend/src/models/Question.ts", "../backend/src/routes/stats.ts", "../backend/src/routes/teacher-analytics.ts", "../backend/src/middleware/errorHandler.ts", "../backend/src/middleware/rateLimiter.ts", "../backend/src/utils/dbIndexes.ts"],
  "sourcesContent": ["// backend/src/models/KnowledgePoint.ts\nimport mongoose, { Schema, model, Document } from 'mongoose';\n\n// \u6D4B\u9A8C\u9898\u76EE\u63A5\u53E3\nexport interface IQuizQuestion {\n    question: string;\n    type: 'single' | 'multiple' | 'boolean';\n    options: string[];\n    correctAnswer: number | number[]; // \u5355\u9009\u4E3A\u6570\u5B57\uFF0C\u591A\u9009\u4E3A\u6570\u7EC4\n    explanation: string;\n}\n\n// \u56FE\u8C31\u4F4D\u7F6E\u63A5\u53E3\nexport interface IGraphPosition {\n    x: number;\n    y: number;\n}\n\n// \u5185\u5BB9\u6587\u4EF6\u63A5\u53E3\nexport interface IContentFile {\n    title: string;    // \u6587\u4EF6\u6807\u9898\n    content: string;  // Markdown\u5185\u5BB9\n}\n\n// \u76F4\u63A5\u5B9A\u4E49\u6700\u7EC8\u7684\u6587\u6863\u63A5\u53E3\uFF0C\u5305\u542B\u4E86\u6240\u6709\u9700\u8981\u7684\u5B57\u6BB5\nexport interface IKnowledgePoint extends Document {\n    id: string;\n    title: string;\n    subject: string;\n    contentSnippet: string;\n    content?: string; // \u5B8C\u6574\u7684Markdown\u5185\u5BB9\uFF08\u5411\u540E\u517C\u5BB9\uFF09\n    contentFiles?: IContentFile[]; // \u591A\u4E2AMarkdown\u6587\u4EF6\n    status: 'completed' | 'in_progress' | 'not_started';\n    prerequisites: string[];\n    quiz: IQuizQuestion[];\n    difficulty: number; // 1-5\u96BE\u5EA6\u7B49\u7EA7\n    estimatedTime: number; // \u9884\u8BA1\u5B66\u4E60\u65F6\u957F\uFF08\u5206\u949F\uFF09\n    graphPosition: IGraphPosition;\n}\n\n// Schema \u5B9A\u4E49\nconst QuizQuestionSchema = new Schema<IQuizQuestion>({\n    question: {type: String, required: true},\n    type: {type: String, required: true, enum: ['single', 'multiple', 'boolean']},\n    options: [{type: String}],\n    correctAnswer: {type: Schema.Types.Mixed, required: true},\n    explanation: {type: String, required: true},\n}, {_id: false});\n\nconst GraphPositionSchema = new Schema<IGraphPosition>({\n    x: {type: Number, required: true},\n    y: {type: Number, required: true},\n}, {_id: false});\n\nconst ContentFileSchema = new Schema<IContentFile>({\n    title: {type: String, required: true},\n    content: {type: String, required: true},\n}, {_id: false});\n\nconst KnowledgePointSchema = new Schema<IKnowledgePoint>({\n    id: {type: String, required: true, unique: true, index: true},\n    title: {type: String, required: true},\n    subject: {type: String, required: true, index: true}, // \u6DFB\u52A0\u7D22\u5F15\uFF0C\u65B9\u4FBF\u6309\u79D1\u76EE\u67E5\u8BE2\n    contentSnippet: {type: String, required: true},\n    content: {type: String, required: false}, // \u5B8C\u6574\u7684Markdown\u5185\u5BB9\uFF08\u5411\u540E\u517C\u5BB9\uFF09\n    contentFiles: {type: [ContentFileSchema], required: false}, // \u591A\u4E2AMarkdown\u6587\u4EF6\n    status: {type: String, required: true, enum: ['completed', 'in_progress', 'not_started']},\n    prerequisites: [{type: String}],\n    quiz: {type: [QuizQuestionSchema], default: []},\n    difficulty: {type: Number, required: true, min: 1, max: 5, default: 3},\n    estimatedTime: {type: Number, required: true, default: 30},\n    graphPosition: {type: GraphPositionSchema, required: true},\n}, {\n    // \u4F18\u5316\u9009\u9879\n    timestamps: false, // \u4E0D\u9700\u8981 createdAt \u548C updatedAt\n});\n\nconst KnowledgePoint = (mongoose.models.KnowledgePoint as mongoose.Model<IKnowledgePoint>) || model<IKnowledgePoint>('KnowledgePoint', KnowledgePointSchema);\n\nexport default KnowledgePoint;", "// backend/src/models/StudySession.ts\r\nimport mongoose, { Schema, model, Document, Types } from 'mongoose';\r\n\r\nexport interface IStudySession extends Document {\r\n    userId: Types.ObjectId;\r\n    pointId?: string;\r\n    pointTitle?: string;\r\n    subject?: string;\r\n    startTime: Date;\r\n    endTime?: Date;\r\n    duration: number; // \u79D2\r\n    active: boolean; // \u662F\u5426\u4E3A\u6D3B\u8DC3\u5B66\u4E60\uFF08\u975E\u6302\u673A\uFF09\r\n    activityCount: number; // \u6D3B\u52A8\u6B21\u6570\uFF08\u7528\u4E8E\u5224\u65AD\u662F\u5426\u6302\u673A\uFF09\r\n    createdAt?: Date; // Mongoose timestamps \u81EA\u52A8\u6DFB\u52A0\r\n    updatedAt?: Date; // Mongoose timestamps \u81EA\u52A8\u6DFB\u52A0\r\n}\r\n\r\nconst StudySessionSchema = new Schema<IStudySession>({\r\n    userId: { type: Schema.Types.ObjectId, ref: 'User', required: true, index: true },\r\n    pointId: { type: String, index: true },\r\n    pointTitle: { type: String },\r\n    subject: { type: String, index: true },\r\n    startTime: { type: Date, required: true, index: true },\r\n    endTime: { type: Date },\r\n    duration: { type: Number, default: 0 }, // \u79D2\r\n    active: { type: Boolean, default: true },\r\n    activityCount: { type: Number, default: 0 }\r\n}, {\r\n    timestamps: true,\r\n});\r\n\r\n// \u590D\u5408\u7D22\u5F15\uFF1A\u7528\u4E8E\u5FEB\u901F\u67E5\u8BE2\u7528\u6237\u7684\u5B66\u4E60\u8BB0\u5F55\r\nStudySessionSchema.index({ userId: 1, startTime: -1 });\r\nStudySessionSchema.index({ userId: 1, pointId: 1 });\r\n// \u4F18\u5316\u7EDF\u8BA1\u67E5\u8BE2\u7684\u590D\u5408\u7D22\u5F15\r\nStudySessionSchema.index({ userId: 1, endTime: 1 });\r\n\r\nconst StudySession = (mongoose.models.StudySession as mongoose.Model<IStudySession>) || model<IStudySession>('StudySession', StudySessionSchema);\r\n\r\nexport default StudySession;\r\n\r\n", "// backend/src/index.ts\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nimport express from 'express';\nimport cors from 'cors';\nimport compression from 'compression';\nimport mongoose from 'mongoose';\nimport passport from 'passport';\nimport jwt from 'jsonwebtoken';\nimport path from 'path';\n\nimport './config/passport';\n\nimport KnowledgePoint from './models/KnowledgePoint';\nimport authRoutes from './routes/auth';\nimport progressRoutes from './routes/progress';\nimport chatRoutes from './routes/chat';\nimport aiRoutes from './routes/ai';\nimport quizRoutes from './routes/quiz';\nimport assessmentRoutes from './routes/assessment';\nimport learningPathRoutes from './routes/learning-path';\nimport wrongQuestionsRoutes from './routes/wrong-questions';\nimport studyTimeRoutes from './routes/study-time';\nimport achievementsRoutes from './routes/achievements';\nimport learningReportRoutes from './routes/learning-report';\nimport analyticsRoutes from './routes/analytics';\nimport usersRoutes from './routes/users';\nimport diagnosticRoutes from './routes/diagnostic';\nimport aiQuizGeneratorRoutes from './routes/ai-quiz-generator';\nimport intelligentPathRoutes from './routes/intelligent-path';\nimport learningCompanionRoutes from './routes/learning-companion';\nimport feedbackRoutes from './routes/feedback';\nimport classRoutes from './routes/class';\nimport assignmentRoutes from './routes/assignment';\nimport analyticsAdvancedRoutes from './routes/analytics-advanced';\nimport membershipRoutes from './routes/membership';\nimport pointsRoutes from './routes/points';\nimport notificationRoutes from './routes/notification';\nimport questionRoutes from './routes/question';\nimport statsRoutes from './routes/stats';\nimport teacherAnalyticsRoutes from './routes/teacher-analytics';\nimport User, {IUser} from './models/User';\n\n// \u5BFC\u5165\u4E2D\u95F4\u4EF6\nimport { errorHandler, notFoundHandler } from './middleware/errorHandler';\nimport { globalRateLimitMiddleware, authRateLimitMiddleware, aiRateLimitMiddleware } from './middleware/rateLimiter';\nimport { analyticsMiddleware } from './middleware/analytics';\nimport { requestLogger } from './middleware/logger';\nimport { authMiddleware } from './middleware/auth';\nimport { createDatabaseIndexes } from './utils/dbIndexes';\n\nconst app = express();\nconst PORT = process.env.PORT || 5001;\n\nconst mongoUri = process.env.MONGO_URI;\nif (!mongoUri) {\n    console.error(\"\u9519\u8BEF: MONGO_URI \u672A\u5728 .env \u6587\u4EF6\u4E2D\u5B9A\u4E49\");\n    process.exit(1);\n}\n\n// MongoDB \u8FDE\u63A5\u914D\u7F6E - \u589E\u5F3A DNS \u548C\u8D85\u65F6\u8BBE\u7F6E\nconst mongooseOptions = {\n    serverSelectionTimeoutMS: 10000, // \u589E\u52A0\u670D\u52A1\u5668\u9009\u62E9\u8D85\u65F6\u65F6\u95F4\n    socketTimeoutMS: 45000, // Socket \u8D85\u65F6\u65F6\u95F4\n    family: 4, // \u5F3A\u5236\u4F7F\u7528 IPv4\uFF08\u67D0\u4E9B\u7F51\u7EDC\u73AF\u5883\u4E0B IPv6 \u53EF\u80FD\u6709\u95EE\u9898\uFF09\n};\n\nmongoose.connect(mongoUri, mongooseOptions)\n    .then(async () => {\n        console.log(\"\u2713 \u6210\u529F\u8FDE\u63A5\u5230 MongoDB\");\n        // \u521B\u5EFA\u6570\u636E\u5E93\u7D22\u5F15\u4EE5\u4F18\u5316\u67E5\u8BE2\u6027\u80FD\n        await createDatabaseIndexes();\n    })\n    .catch(err => {\n        console.error(\"\u2717 \u65E0\u6CD5\u8FDE\u63A5\u5230 MongoDB:\", err.message);\n        console.error(\"\\n\u53EF\u80FD\u7684\u89E3\u51B3\u65B9\u6848\uFF1A\");\n        console.error(\"1. \u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5\u548C\u9632\u706B\u5899\u8BBE\u7F6E\");\n        console.error(\"2. \u786E\u8BA4 MongoDB Atlas IP \u767D\u540D\u5355\u5DF2\u6DFB\u52A0 0.0.0.0/0\uFF08\u5141\u8BB8\u6240\u6709 IP\uFF09\");\n        console.error(\"3. \u5C1D\u8BD5\u4F7F\u7528\u6807\u51C6 MongoDB URI \u683C\u5F0F\uFF08\u800C\u975E mongodb+srv://\uFF09\");\n        console.error(\"4. \u5982\u679C\u5728\u4E2D\u56FD\u5927\u9646\uFF0C\u53EF\u80FD\u9700\u8981\u4F7F\u7528 VPN \u6216\u4EE3\u7406\");\n        console.error(\"5. \u68C0\u67E5 .env \u6587\u4EF6\u4E2D\u7684 MONGO_URI \u662F\u5426\u6B63\u786E\u914D\u7F6E\\n\");\n    });\n\n// --- CORS \u914D\u7F6E ---\nconst corsOptions = {\n    origin: process.env.ALLOWED_ORIGINS \n        ? process.env.ALLOWED_ORIGINS.split(',').map(origin => origin.trim())\n        : '*',\n    credentials: true,\n    optionsSuccessStatus: 200\n};\n\napp.use(cors(corsOptions));\n\n// --- \u54CD\u5E94\u538B\u7F29\uFF08gzip\uFF09---\napp.use(compression({\n    // \u53EA\u538B\u7F29\u5927\u4E8E 1KB \u7684\u54CD\u5E94\n    threshold: 1024,\n    // \u538B\u7F29\u7EA7\u522B\uFF080-9\uFF0C9\u4E3A\u6700\u9AD8\u538B\u7F29\u7387\u4F46\u6700\u6162\uFF09\n    level: 6,\n    // \u8FC7\u6EE4\u5668\uFF1A\u53EA\u538B\u7F29\u53EF\u538B\u7F29\u7684\u5185\u5BB9\n    filter: (req, res) => {\n        if (req.headers['x-no-compression']) {\n            return false;\n        }\n        return compression.filter(req, res);\n    }\n}));\n\napp.use(express.json({ limit: '10mb' }));\napp.use(passport.initialize());\n\n// \u63D0\u4F9B\u9759\u6001\u6587\u4EF6\u670D\u52A1\uFF08\u5934\u50CF\u4E0A\u4F20\uFF09\napp.use('/uploads', express.static(path.join(__dirname, '../uploads')));\n\n// \u4FE1\u4EFB\u4EE3\u7406\uFF08Vercel \u7B49\u4E91\u5E73\u53F0\u90E8\u7F72\u65F6\u9700\u8981\uFF09\nif (process.env.TRUST_PROXY === 'true') {\n    app.set('trust proxy', 1);\n}\n\n// --- \u65E5\u5FD7\u548C\u5206\u6790\u4E2D\u95F4\u4EF6 ---\napp.use(requestLogger);\napp.use(analyticsMiddleware);\n\n// --- \u5168\u5C40\u9650\u6D41\uFF08\u653E\u5728\u8DEF\u7531\u4E4B\u524D\uFF09---\napp.use(globalRateLimitMiddleware);\n\n// --- API \u8DEF\u7531 ---\n// \u5C06 /me \u63A5\u53E3\u5355\u72EC\u51FA\u6765\uFF0C\u4E0D\u4F7F\u7528 authRateLimitMiddleware\napp.get('/api/auth/me', authMiddleware, (req: express.Request, res: express.Response) => {\n  res.json((req as any).user);\n});\napp.use('/api/auth', authRateLimitMiddleware, authRoutes);\napp.use('/api/users', usersRoutes);\napp.use('/api/progress', progressRoutes);\napp.use('/api/chats', chatRoutes);\napp.use('/api/ai', aiRateLimitMiddleware, aiRoutes);\napp.use('/api/quiz', quizRoutes);\napp.use('/api/assessment', assessmentRoutes);\napp.use('/api/learning-path', learningPathRoutes);\napp.use('/api/wrong-questions', wrongQuestionsRoutes);\napp.use('/api/study-time', studyTimeRoutes);\napp.use('/api/achievements', achievementsRoutes);\napp.use('/api/learning-report', learningReportRoutes);\napp.use('/api/analytics', analyticsRoutes);\napp.use('/api/diagnostic', diagnosticRoutes);\napp.use('/api/ai-quiz', aiRateLimitMiddleware, aiQuizGeneratorRoutes);\napp.use('/api/intelligent-path', intelligentPathRoutes);\napp.use('/api/learning-companion', aiRateLimitMiddleware, learningCompanionRoutes);\napp.use('/api/feedback', feedbackRoutes);\napp.use('/api/class', classRoutes);\napp.use('/api/assignment', assignmentRoutes);\napp.use('/api/analytics-advanced', analyticsAdvancedRoutes);\napp.use('/api/membership', membershipRoutes);\napp.use('/api/points', pointsRoutes);\napp.use('/api/notification', notificationRoutes);\napp.use('/api/question', questionRoutes);\napp.use('/api/stats', statsRoutes);\napp.use('/api/teacher-analytics', teacherAnalyticsRoutes);\n\n// --- GitHub \u8BA4\u8BC1\u8DEF\u7531 ---\napp.get('/api/auth/github',\n    passport.authenticate('github', {scope: ['user:email'], session: false})\n);\n\napp.get('/api/auth/github/callback',\n    passport.authenticate('github', {failureRedirect: '/login', session: false}),\n    (req, res) => {\n        const user = req.user as IUser;\n        const token = jwt.sign({userId: user._id}, process.env.JWT_SECRET!, {expiresIn: '7d'});\n        // \u3010\u4FEE\u6539\u5904\u3011\u4ECE\u73AF\u5883\u53D8\u91CF\u8BFB\u53D6\u524D\u7AEF URL\n        const frontendUrl = process.env.FRONTEND_URL;\n        res.redirect(`${frontendUrl}/auth/callback?token=${token}`);\n    }\n);\n\n// --- QQ \u8BA4\u8BC1\u8DEF\u7531 ---\napp.get('/api/auth/qq',\n    passport.authenticate('qq', {session: false})\n);\n\napp.get('/api/auth/qq/callback',\n    passport.authenticate('qq', {failureRedirect: '/login', session: false}),\n    (req, res) => {\n        const user = req.user as IUser;\n        const token = jwt.sign({userId: user._id}, process.env.JWT_SECRET!, {expiresIn: '7d'});\n        // \u3010\u4FEE\u6539\u5904\u3011\u4ECE\u73AF\u5883\u53D8\u91CF\u8BFB\u53D6\u524D\u7AEF URL\n        const frontendUrl = process.env.FRONTEND_URL;\n        res.redirect(`${frontendUrl}/auth/callback?token=${token}`);\n    }\n);\n\n// --- \u5176\u4ED6\u8DEF\u7531 ---\napp.get('/api/knowledge-points', async (req, res) => {\n    try {\n        // \u53EA\u8FD4\u56DE\u5FC5\u8981\u7684\u5B57\u6BB5\uFF0C\u6392\u9664\u5927\u4F53\u79EF\u7684 content, contentFiles, quiz\n        // \u8FD9\u4E9B\u5B57\u6BB5\u53EA\u5728\u5355\u4E2A\u77E5\u8BC6\u70B9\u8BE6\u60C5\u65F6\u624D\u9700\u8981\n        const points = await KnowledgePoint.find({})\n            .select('-content -contentFiles -quiz')\n            .lean(); // \u4F7F\u7528 lean() \u8FD4\u56DE\u7EAF JavaScript \u5BF9\u8C61\uFF0C\u63D0\u5347\u6027\u80FD\n        res.json(points);\n    } catch (error) {\n        res.status(500).json({message: '\u83B7\u53D6\u77E5\u8BC6\u70B9\u65F6\u53D1\u751F\u9519\u8BEF'});\n    }\n});\n\n// \u83B7\u53D6\u5355\u4E2A\u77E5\u8BC6\u70B9\u7684\u5B8C\u6574\u8BE6\u60C5\uFF08\u5305\u542B content, contentFiles, quiz\uFF09\napp.get('/api/knowledge-points/:id', async (req, res) => {\n    try {\n        const {id} = req.params;\n        const point = await KnowledgePoint.findOne({id}).lean();\n        \n        if (!point) {\n            return res.status(404).json({message: '\u77E5\u8BC6\u70B9\u4E0D\u5B58\u5728'});\n        }\n        \n        res.json(point);\n    } catch (error) {\n        console.error('\u83B7\u53D6\u77E5\u8BC6\u70B9\u8BE6\u60C5\u5931\u8D25:', error);\n        res.status(500).json({message: '\u83B7\u53D6\u77E5\u8BC6\u70B9\u8BE6\u60C5\u65F6\u53D1\u751F\u9519\u8BEF'});\n    }\n});\n\napp.get('/', (req, res) => {\n    res.json({\n        success: true,\n        message: '\u667A\u5B66\u4F34\u540E\u7AEF\u670D\u52A1\u5DF2\u6210\u529F\u8FD0\u884C\uFF01',\n        version: '2.0.0',\n        timestamp: new Date().toISOString(),\n    });\n});\n\n// --- 404 \u5904\u7406 ---\napp.use(notFoundHandler);\n\n// --- \u5168\u5C40\u9519\u8BEF\u5904\u7406 ---\napp.use(errorHandler);\n\n// \u5BFC\u51FA app \u5B9E\u4F8B\uFF0C\u4F9B Vercel \u8C03\u7528\nexport default app;\n\n// \u53EA\u6709\u5728\u4E0D\u662F Vercel \u73AF\u5883\u65F6\u624D\u542F\u52A8\u672C\u5730\u670D\u52A1\u5668\nif (process.env.NODE_ENV !== 'production') {\n    app.listen(PORT, () => {\n        console.log(`[SUCCESS] \u672C\u5730\u5F00\u53D1\u670D\u52A1\u5668\u5DF2\u542F\u52A8\uFF0C\u6B63\u5728\u76D1\u542C http://localhost:${PORT}`);\n    });\n}\n", "// backend/src/config/passport.ts\r\nimport passport from 'passport';\r\nimport {Strategy as GitHubStrategy} from 'passport-github2';\r\nimport {Strategy as QQStrategy} from 'passport-qq';\r\nimport User from '../models/User';\r\n\r\n// \u4ECE\u73AF\u5883\u53D8\u91CF\u4E2D\u8BFB\u53D6\u540E\u7AEF\u7684\u516C\u5F00 URL\r\nlet backendUrl = process.env.BACKEND_URL || 'http://localhost:5001';\r\n\r\n// \u65B0\u589E\uFF1A\u79FB\u9664\u672B\u5C3E\u53EF\u80FD\u5B58\u5728\u7684\u591A\u4F59\u659C\u6760\uFF0C\u786E\u4FDD URL \u683C\u5F0F\u6B63\u786E\r\nif (backendUrl.endsWith('/')) {\r\n    backendUrl = backendUrl.slice(0, -1);\r\n}\r\n\r\n\r\n// GitHub \u7B56\u7565\r\nif (process.env.GITHUB_CLIENT_ID && process.env.GITHUB_CLIENT_SECRET) {\r\n    passport.use(new GitHubStrategy({\r\n            clientID: process.env.GITHUB_CLIENT_ID!,\r\n            clientSecret: process.env.GITHUB_CLIENT_SECRET!,\r\n            // \u8FD9\u91CC\u62FC\u63A5\u540E\u5C31\u4E0D\u4F1A\u6709\u53CC\u659C\u6760\u4E86\r\n            callbackURL: `${backendUrl}/api/auth/github/callback`,\r\n            scope: ['user:email'],\r\n        },\r\n        async (accessToken: string, refreshToken: string, profile: any, done: (error: any, user?: any) => void) => {\r\n            try {\r\n                const user = await User.findOne({githubId: profile.id});\r\n\r\n                if (user) {\r\n                    return done(null, user);\r\n                }\r\n\r\n                const newUser = new User({\r\n                    githubId: profile.id,\r\n                    username: profile.username,\r\n                    email: profile.emails?.[0]?.value || `github_${profile.id}@no-email.com`,\r\n                    avatarUrl: profile.photos?.[0]?.value,\r\n                });\r\n\r\n                await newUser.save();\r\n                done(null, newUser);\r\n\r\n            } catch (error) {\r\n                done(error);\r\n            }\r\n        }));\r\n} else {\r\n    console.warn('[passport] GitHubStrategy skipped: missing GITHUB_CLIENT_ID / GITHUB_CLIENT_SECRET');\r\n}\r\n\r\n\r\n// QQ \u7B56\u7565\r\nif (process.env.QQ_APP_ID && process.env.QQ_APP_KEY) {\r\n    passport.use(new QQStrategy({\r\n            clientID: process.env.QQ_APP_ID!,\r\n            clientSecret: process.env.QQ_APP_KEY!,\r\n            // \u8FD9\u91CC\u62FC\u63A5\u540E\u4E5F\u4E0D\u4F1A\u6709\u53CC\u659C\u6760\u4E86\r\n            callbackURL: `${backendUrl}/api/auth/qq/callback`,\r\n        },\r\n        async (accessToken: string, refreshToken: string, profile: any, done: (error: any, user?: any) => void) => {\r\n            try {\r\n                const openid = profile.id;\r\n                const user = await User.findOne({qqId: openid});\r\n\r\n                if (user) {\r\n                    return done(null, user);\r\n                }\r\n\r\n                const newUser = new User({\r\n                    qqId: openid,\r\n                    username: profile.nickname,\r\n                    email: `${openid}@qq.com`,\r\n                    avatarUrl: profile._json.figureurl_qq_2 || profile._json.figureurl_qq_1,\r\n                });\r\n\r\n                await newUser.save();\r\n                done(null, newUser);\r\n\r\n            } catch (error) {\r\n                done(error);\r\n            }\r\n        }));\r\n} else {\r\n    console.warn('[passport] QQStrategy skipped: missing QQ_APP_ID / QQ_APP_KEY');\r\n}\r\n\r\n// \u7528\u4E8E session \u7BA1\u7406\u7684\u51FD\u6570\r\npassport.serializeUser((user, done) => {\r\n    done(null, (user as any).id);\r\n});\r\n\r\npassport.deserializeUser(async (id, done) => {\r\n    try {\r\n        const user = await User.findById(id);\r\n        done(null, user);\r\n    } catch (error) {\r\n        done(error);\r\n    }\r\n});", "// backend/src/models/User.ts\r\nimport mongoose, { Schema, model, Document, Types } from 'mongoose';\r\n\r\nexport interface IUser extends Document {\r\n    _id: Types.ObjectId;\r\n    username: string;\r\n    email: string;\r\n    passwordHash?: string;\r\n    githubId?: string;\r\n    qqId?: string;         // \u65B0\u589E: QQ openid\r\n    avatarUrl?: string;\r\n    role?: 'student' | 'teacher' | 'admin';  // \u7528\u6237\u89D2\u8272\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>({\r\n    username: {type: String, required: true},\r\n    email: {type: String, required: true},\r\n    passwordHash: {type: String, required: false, select: false}, // \u9ED8\u8BA4\u4E0D\u67E5\u8BE2\u5BC6\u7801\r\n    githubId: { type: String },\r\n    qqId: { type: String },\r\n    avatarUrl: { type: String },\r\n    role: { type: String, enum: ['student', 'teacher', 'admin'], default: 'student' },\r\n}, {\r\n    timestamps: true\r\n});\r\n\r\n// \u4F18\u5316\uFF1A\u7EDF\u4E00\u5728\u8FD9\u91CC\u6DFB\u52A0\u7D22\u5F15\uFF0C\u907F\u514D\u91CD\u590D\u5B9A\u4E49\r\nUserSchema.index({ email: 1 }, { unique: true });\r\nUserSchema.index({ githubId: 1 }, { unique: true, sparse: true });\r\nUserSchema.index({ qqId: 1 }, { unique: true, sparse: true });\r\n\r\nconst User = (mongoose.models.User as mongoose.Model<IUser>) || model<IUser>('User', UserSchema);\r\n\r\nexport default User;", "// backend/src/routes/auth.ts\r\nimport {Router, Request, Response} from 'express';\r\nimport bcrypt from 'bcryptjs';\r\nimport jwt from 'jsonwebtoken';\r\nimport User from '../models/User';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { logger } from '../middleware/logger';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst router = Router();\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'a-very-secret-key';\r\n\r\nrouter.post('/register', async (req, res) => {\r\n    try {\r\n        const {username, email, password} = req.body;\r\n        \r\n        // \u9A8C\u8BC1\u5FC5\u586B\u9879\r\n        if (!username || !email || !password) {\r\n            return res.status(400).json({message: '\u8BF7\u586B\u5199\u6240\u6709\u5FC5\u586B\u9879'});\r\n        }\r\n        \r\n        // \u9A8C\u8BC1\u5BC6\u7801\u5F3A\u5EA6\r\n        if (password.length < 6) {\r\n            return res.status(400).json({message: '\u5BC6\u7801\u81F3\u5C11\u9700\u89816\u4F4D'});\r\n        }\r\n        \r\n        // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5DF2\u5B58\u5728\r\n        const existingUser = await User.findOne({email});\r\n        if (existingUser) {\r\n            return res.status(400).json({message: '\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C'});\r\n        }\r\n        \r\n        // \u4F18\u5316\uFF1A\u5C06salt\u8F6E\u6570\u4ECE10\u964D\u4F4E\u52308\uFF0C\u63D0\u5347\u6027\u80FD\uFF08\u4ECD\u7136\u5B89\u5168\uFF09\r\n        const salt = await bcrypt.genSalt(8);\r\n        const passwordHash = await bcrypt.hash(password, salt);\r\n        \r\n        const newUser = new User({username, email, passwordHash});\r\n        await newUser.save();\r\n        \r\n        const token = jwt.sign({userId: newUser._id}, JWT_SECRET, {expiresIn: '7d'});\r\n        \r\n        logger.info('\u7528\u6237\u6CE8\u518C\u6210\u529F', { \r\n            userId: newUser._id, \r\n            username: newUser.username,\r\n            email: newUser.email \r\n        });\r\n        \r\n        res.status(201).json({\r\n            token, \r\n            user: {\r\n                _id: newUser._id, \r\n                username: newUser.username, \r\n                email: newUser.email\r\n            }\r\n        });\r\n    } catch (error: any) {\r\n        logger.error('\u7528\u6237\u6CE8\u518C\u5931\u8D25', error, {\r\n            username: req.body.username,\r\n            email: req.body.email,\r\n            errorMessage: error.message\r\n        });\r\n        res.status(500).json({message: '\u670D\u52A1\u5668\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5'});\r\n    }\r\n});\r\n\r\nrouter.post('/login', async (req, res) => {\r\n    try {\r\n        const {email, password} = req.body;\r\n        \r\n        // \u9A8C\u8BC1\u5FC5\u586B\u9879\r\n        if (!email || !password) {\r\n            return res.status(400).json({message: '\u8BF7\u8F93\u5165\u90AE\u7BB1\u548C\u5BC6\u7801'});\r\n        }\r\n        \r\n        // \u67E5\u8BE2\u7528\u6237\uFF08\u4F18\u5316\uFF1A\u53EA\u9009\u62E9\u9700\u8981\u7684\u5B57\u6BB5\uFF09\r\n        const user = await User.findOne({email}).select('+passwordHash').lean();\r\n        \r\n        if (!user) {\r\n            return res.status(400).json({message: '\u90AE\u7BB1\u6216\u5BC6\u7801\u9519\u8BEF'});\r\n        }\r\n        \r\n        if (!user.passwordHash) {\r\n            return res.status(400).json({message: '\u8BE5\u8D26\u6237\u672A\u8BBE\u7F6E\u5BC6\u7801\uFF0C\u8BF7\u4F7F\u7528\u7B2C\u4E09\u65B9\u767B\u5F55'});\r\n        }\r\n        \r\n        // \u9A8C\u8BC1\u5BC6\u7801\r\n        const isMatch = await bcrypt.compare(password, user.passwordHash);\r\n        if (!isMatch) {\r\n            return res.status(400).json({message: '\u90AE\u7BB1\u6216\u5BC6\u7801\u9519\u8BEF'});\r\n        }\r\n        \r\n        // \u751F\u6210token\r\n        const token = jwt.sign({userId: user._id}, JWT_SECRET, {expiresIn: '7d'});\r\n        \r\n        logger.info('\u7528\u6237\u767B\u5F55\u6210\u529F', {\r\n            userId: user._id,\r\n            username: user.username,\r\n            email: user.email,\r\n            ip: req.ip\r\n        });\r\n        \r\n        // \u8FD4\u56DE\u7528\u6237\u4FE1\u606F\uFF08\u4E0D\u5305\u542B\u5BC6\u7801\u54C8\u5E0C\uFF09\r\n        res.json({\r\n            token, \r\n            user: {\r\n                _id: user._id, \r\n                username: user.username, \r\n                email: user.email\r\n            }\r\n        });\r\n    } catch (error: any) {\r\n        logger.error('\u7528\u6237\u767B\u5F55\u5931\u8D25', error, {\r\n            email: req.body.email,\r\n            ip: req.ip,\r\n            errorMessage: error.message,\r\n            stack: error.stack\r\n        });\r\n        res.status(500).json({message: '\u670D\u52A1\u5668\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5'});\r\n    }\r\n});\r\n\r\n// /me \u63A5\u53E3\u5DF2\u7ECF\u5728 index.ts \u4E2D\u5355\u72EC\u5904\u7406\uFF0C\u4E0D\u53D7 authRateLimitMiddleware \u9650\u5236\r\n\r\n// \u5FD8\u8BB0\u5BC6\u7801 - \u53D1\u9001\u91CD\u7F6E\u90AE\u4EF6\r\nrouter.post('/forgot-password', async (req, res) => {\r\n    try {\r\n        const { email } = req.body;\r\n        \r\n        if (!email) {\r\n            return res.status(400).json({ message: '\u8BF7\u8F93\u5165\u90AE\u7BB1\u5730\u5740' });\r\n        }\r\n        \r\n        const user = await User.findOne({ email });\r\n        \r\n        // \u4E3A\u4E86\u5B89\u5168\uFF0C\u5373\u4F7F\u7528\u6237\u4E0D\u5B58\u5728\u4E5F\u8FD4\u56DE\u6210\u529F\u6D88\u606F\r\n        if (!user) {\r\n            return res.json({ message: '\u5982\u679C\u8BE5\u90AE\u7BB1\u5B58\u5728\uFF0C\u6211\u4EEC\u5DF2\u53D1\u9001\u91CD\u7F6E\u94FE\u63A5' });\r\n        }\r\n        \r\n        // \u751F\u6210\u91CD\u7F6Etoken\uFF081\u5C0F\u65F6\u6709\u6548\uFF09\r\n        const resetToken = jwt.sign(\r\n            { userId: user._id, type: 'password-reset' },\r\n            JWT_SECRET,\r\n            { expiresIn: '1h' }\r\n        );\r\n        \r\n        // TODO: \u5B9E\u9645\u9879\u76EE\u4E2D\u5E94\u8BE5\u53D1\u9001\u90AE\u4EF6\r\n        // \u8FD9\u91CC\u53EA\u662F\u6F14\u793A\uFF0C\u5B9E\u9645\u5E94\u8BE5\u96C6\u6210\u90AE\u4EF6\u670D\u52A1\uFF08\u5982 Nodemailer + SMTP\uFF09\r\n        logger.info('\u5BC6\u7801\u91CD\u7F6E\u8BF7\u6C42', {\r\n            userId: user._id,\r\n            email: user.email,\r\n            resetToken: resetToken,\r\n            resetUrl: `${process.env.FRONTEND_URL || 'http://localhost:5173'}/reset-password?token=${resetToken}`\r\n        });\r\n        \r\n        // \u5728\u5F00\u53D1\u73AF\u5883\u4E0B\uFF0C\u53EF\u4EE5\u5728\u54CD\u5E94\u4E2D\u8FD4\u56DEtoken\uFF08\u751F\u4EA7\u73AF\u5883\u5E94\u8BE5\u5220\u9664\uFF09\r\n        const response: any = { message: '\u5982\u679C\u8BE5\u90AE\u7BB1\u5B58\u5728\uFF0C\u6211\u4EEC\u5DF2\u53D1\u9001\u91CD\u7F6E\u94FE\u63A5' };\r\n        if (process.env.NODE_ENV === 'development') {\r\n            response.resetToken = resetToken;\r\n            response.resetUrl = `${process.env.FRONTEND_URL || 'http://localhost:5173'}/reset-password?token=${resetToken}`;\r\n        }\r\n        \r\n        res.json(response);\r\n    } catch (error: any) {\r\n        logger.error('\u5FD8\u8BB0\u5BC6\u7801\u8BF7\u6C42\u5931\u8D25', error, {\r\n            email: req.body.email,\r\n            errorMessage: error.message\r\n        });\r\n        res.status(500).json({ message: '\u670D\u52A1\u5668\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5' });\r\n    }\r\n});\r\n\r\n// \u91CD\u7F6E\u5BC6\u7801\r\nrouter.post('/reset-password', async (req, res) => {\r\n    try {\r\n        const { token, newPassword } = req.body;\r\n        \r\n        if (!token || !newPassword) {\r\n            return res.status(400).json({ message: '\u8BF7\u63D0\u4F9B\u91CD\u7F6Etoken\u548C\u65B0\u5BC6\u7801' });\r\n        }\r\n        \r\n        if (newPassword.length < 6) {\r\n            return res.status(400).json({ message: '\u5BC6\u7801\u81F3\u5C11\u9700\u89816\u4F4D' });\r\n        }\r\n        \r\n        // \u9A8C\u8BC1token\r\n        let decoded: any;\r\n        try {\r\n            decoded = jwt.verify(token, JWT_SECRET);\r\n        } catch (error) {\r\n            return res.status(400).json({ message: '\u91CD\u7F6E\u94FE\u63A5\u65E0\u6548\u6216\u5DF2\u8FC7\u671F' });\r\n        }\r\n        \r\n        if (decoded.type !== 'password-reset') {\r\n            return res.status(400).json({ message: '\u65E0\u6548\u7684\u91CD\u7F6Etoken' });\r\n        }\r\n        \r\n        // \u67E5\u627E\u7528\u6237\r\n        const user = await User.findById(decoded.userId);\r\n        if (!user) {\r\n            return res.status(404).json({ message: '\u7528\u6237\u4E0D\u5B58\u5728' });\r\n        }\r\n        \r\n        // \u52A0\u5BC6\u65B0\u5BC6\u7801\r\n        const salt = await bcrypt.genSalt(8);\r\n        const passwordHash = await bcrypt.hash(newPassword, salt);\r\n        \r\n        user.passwordHash = passwordHash;\r\n        await user.save();\r\n        \r\n        logger.info('\u5BC6\u7801\u91CD\u7F6E\u6210\u529F', {\r\n            userId: user._id,\r\n            email: user.email\r\n        });\r\n        \r\n        res.json({ message: '\u5BC6\u7801\u91CD\u7F6E\u6210\u529F' });\r\n    } catch (error: any) {\r\n        logger.error('\u5BC6\u7801\u91CD\u7F6E\u5931\u8D25', error, {\r\n            errorMessage: error.message\r\n        });\r\n        res.status(500).json({ message: '\u670D\u52A1\u5668\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5' });\r\n    }\r\n});\r\n\r\nexport default router;", "import { Request, Response, NextFunction } from 'express';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\n/**\r\n * \u65E5\u5FD7\u7EA7\u522B\r\n */\r\nexport enum LogLevel {\r\n  INFO = 'INFO',\r\n  WARN = 'WARN',\r\n  ERROR = 'ERROR',\r\n  DEBUG = 'DEBUG',\r\n}\r\n\r\n/**\r\n * \u65E5\u5FD7\u63A5\u53E3\r\n */\r\ninterface LogEntry {\r\n  level: LogLevel;\r\n  timestamp: string;\r\n  message: string;\r\n  metadata?: Record<string, any>;\r\n  stack?: string;\r\n}\r\n\r\n/**\r\n * \u65E5\u5FD7\u7BA1\u7406\u5668\r\n */\r\nclass Logger {\r\n  private logDir: string;\r\n  private maxFileSize: number = 10 * 1024 * 1024; // 10MB\r\n  private maxFiles: number = 5;\r\n\r\n  constructor() {\r\n    // Use /tmp in serverless (Vercel) where filesystem is read-only except /tmp\r\n    const defaultDir = path.join(process.cwd(), 'logs');\r\n    const fallbackDir = '/tmp/logs';\r\n\r\n    // Try defaultDir first; if creation fails, fall back to /tmp\r\n    try {\r\n      fs.mkdirSync(defaultDir, { recursive: true });\r\n      this.logDir = defaultDir;\r\n    } catch (_) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('[logger] Cannot write to', defaultDir, '\u2013 falling back to', fallbackDir);\r\n      this.logDir = fallbackDir;\r\n      // Ensure fallback exists\r\n      try {\r\n        fs.mkdirSync(this.logDir, { recursive: true });\r\n      } catch (err) {\r\n        // If /tmp also fails, last resort: disable file logging\r\n        // eslint-disable-next-line no-console\r\n        console.error('[logger] Failed to create log directory', this.logDir, err);\r\n        this.logDir = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u786E\u4FDD\u65E5\u5FD7\u76EE\u5F55\u5B58\u5728\r\n   */\r\n  private ensureLogDir() {\r\n    if (!fs.existsSync(this.logDir)) {\r\n      fs.mkdirSync(this.logDir, { recursive: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u65E5\u5FD7\u6587\u4EF6\u8DEF\u5F84\r\n   */\r\n  private getLogFilePath(level: LogLevel): string {\r\n    const date = new Date().toISOString().split('T')[0];\r\n    return path.join(this.logDir, `${level.toLowerCase()}-${date}.log`);\r\n  }\r\n\r\n  /**\r\n   * \u5199\u5165\u65E5\u5FD7\r\n   */\r\n  private writeLog(entry: LogEntry) {\r\n    if (!this.logDir) {\r\n      return; // file logging disabled\r\n    }\r\n\r\n    const filePath = this.getLogFilePath(entry.level);\r\n    const logLine = JSON.stringify(entry) + '\\n';\r\n\r\n    // \u5F02\u6B65\u5199\u5165\r\n    fs.appendFile(filePath, logLine, (err) => {\r\n      if (err) {\r\n        // eslint-disable-next-line no-console\r\n        console.error('Failed to write log:', err);\r\n      }\r\n    });\r\n\r\n    // \u540C\u65F6\u8F93\u51FA\u5230\u63A7\u5236\u53F0\uFF08\u5F00\u53D1\u73AF\u5883\uFF09\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      const colorCode = this.getColorCode(entry.level);\r\n      console.log(\r\n        `${colorCode}[${entry.level}] ${entry.timestamp}\\x1b[0m`,\r\n        entry.message,\r\n        entry.metadata || ''\r\n      );\r\n    }\r\n\r\n    // \u68C0\u67E5\u6587\u4EF6\u5927\u5C0F\u5E76\u8F6E\u8F6C\r\n    this.rotateLogsIfNeeded(filePath);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u989C\u8272\u4EE3\u7801\uFF08\u7EC8\u7AEF\uFF09\r\n   */\r\n  private getColorCode(level: LogLevel): string {\r\n    const colors = {\r\n      [LogLevel.INFO]: '\\x1b[36m', // Cyan\r\n      [LogLevel.WARN]: '\\x1b[33m', // Yellow\r\n      [LogLevel.ERROR]: '\\x1b[31m', // Red\r\n      [LogLevel.DEBUG]: '\\x1b[35m', // Magenta\r\n    };\r\n    return colors[level] || '\\x1b[0m';\r\n  }\r\n\r\n  /**\r\n   * \u8F6E\u8F6C\u65E5\u5FD7\u6587\u4EF6\r\n   */\r\n  private rotateLogsIfNeeded(filePath: string) {\r\n    try {\r\n      const stats = fs.statSync(filePath);\r\n      if (stats.size > this.maxFileSize) {\r\n        const timestamp = Date.now();\r\n        const newPath = filePath.replace('.log', `-${timestamp}.log`);\r\n        fs.renameSync(filePath, newPath);\r\n\r\n        // \u5220\u9664\u65E7\u6587\u4EF6\r\n        this.cleanOldLogs();\r\n      }\r\n    } catch (err) {\r\n      // \u6587\u4EF6\u53EF\u80FD\u4E0D\u5B58\u5728\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7406\u65E7\u65E5\u5FD7\r\n   */\r\n  private cleanOldLogs() {\r\n    try {\r\n      const files = fs.readdirSync(this.logDir);\r\n      const logFiles = files\r\n        .filter(f => f.endsWith('.log'))\r\n        .map(f => ({\r\n          name: f,\r\n          path: path.join(this.logDir, f),\r\n          time: fs.statSync(path.join(this.logDir, f)).mtime.getTime(),\r\n        }))\r\n        .sort((a, b) => b.time - a.time);\r\n\r\n      // \u4FDD\u7559\u6700\u65B0\u7684\u6587\u4EF6\r\n      if (logFiles.length > this.maxFiles) {\r\n        logFiles.slice(this.maxFiles).forEach(file => {\r\n          fs.unlinkSync(file.path);\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to clean old logs:', err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u4FE1\u606F\u65E5\u5FD7\r\n   */\r\n  info(message: string, metadata?: Record<string, any>) {\r\n    this.writeLog({\r\n      level: LogLevel.INFO,\r\n      timestamp: new Date().toISOString(),\r\n      message,\r\n      metadata,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u8B66\u544A\u65E5\u5FD7\r\n   */\r\n  warn(message: string, metadata?: Record<string, any>) {\r\n    this.writeLog({\r\n      level: LogLevel.WARN,\r\n      timestamp: new Date().toISOString(),\r\n      message,\r\n      metadata,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u9519\u8BEF\u65E5\u5FD7\r\n   */\r\n  error(message: string, error?: Error, metadata?: Record<string, any>) {\r\n    this.writeLog({\r\n      level: LogLevel.ERROR,\r\n      timestamp: new Date().toISOString(),\r\n      message,\r\n      metadata,\r\n      stack: error?.stack,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u8C03\u8BD5\u65E5\u5FD7\r\n   */\r\n  debug(message: string, metadata?: Record<string, any>) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      this.writeLog({\r\n        level: LogLevel.DEBUG,\r\n        timestamp: new Date().toISOString(),\r\n        message,\r\n        metadata,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// \u5355\u4F8B\r\nexport const logger = new Logger();\r\n\r\n/**\r\n * \u8BF7\u6C42\u65E5\u5FD7\u4E2D\u95F4\u4EF6\r\n */\r\nexport const requestLogger = (req: Request, res: Response, next: NextFunction) => {\r\n  const startTime = Date.now();\r\n\r\n  // \u8BB0\u5F55\u8BF7\u6C42\r\n  logger.info(`${req.method} ${req.path}`, {\r\n    ip: req.ip,\r\n    userAgent: req.headers['user-agent'],\r\n    userId: (req as any).user?.id,\r\n  });\r\n\r\n  // \u8BB0\u5F55\u54CD\u5E94\r\n  res.on('finish', () => {\r\n    const duration = Date.now() - startTime;\r\n    const msg = `${req.method} ${req.path} - ${res.statusCode}`;\r\n    const meta = { duration: `${duration}ms`, statusCode: res.statusCode };\r\n\r\n    if (res.statusCode >= 400) {\r\n      logger.error(msg, undefined, meta);\r\n    } else {\r\n      logger.info(msg, meta);\r\n    }\r\n  });\r\n\r\n  next();\r\n};\r\n\r\n", "// backend/src/routes/progress.ts\r\nimport {Router, Request, Response} from 'express';\r\nimport UserProgress from '../models/UserProgress';\r\nimport {authMiddleware} from '../middleware/auth';\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const progress = await UserProgress.find({userId});\r\n        res.json(progress);\r\n    } catch (error) {\r\n        res.status(500).json({message: '\u83B7\u53D6\u5B66\u4E60\u8FDB\u5EA6\u5931\u8D25'});\r\n    }\r\n});\r\n\r\nrouter.post('/update', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const {pointId, status} = req.body;\r\n\r\n        if (!pointId || !status) {\r\n            return res.status(400).json({message: '\u7F3A\u5C11 pointId \u6216 status'});\r\n        }\r\n\r\n        const updateData: any = { status };\r\n        \r\n        // \u5982\u679C\u6807\u8BB0\u4E3A\u5B8C\u6210\uFF0C\u8BBE\u7F6E\u5B8C\u6210\u65F6\u95F4\r\n        if (status === 'completed') {\r\n            updateData.completedAt = new Date();\r\n        }\r\n\r\n        const updatedProgress = await UserProgress.findOneAndUpdate(\r\n            {userId, pointId},\r\n            updateData,\r\n            {new: true, upsert: true}\r\n        );\r\n\r\n        res.json(updatedProgress);\r\n    } catch (error) {\r\n        res.status(500).json({message: '\u66F4\u65B0\u8FDB\u5EA6\u5931\u8D25'});\r\n    }\r\n});\r\n\r\nexport default router;", "// backend/src/models/UserProgress.ts\nimport mongoose, { Schema, model, Document, Types } from 'mongoose';\n\nexport interface IUserProgress extends Document {\n    userId: Types.ObjectId;\n    pointId: string;\n    status: 'not_started' | 'in_progress' | 'completed';\n    quizAttempts: number;\n    bestScore: number;\n    score?: number; // \u522B\u540D\uFF0C\u6307\u5411bestScore\n    timeSpent: number; // \u5B66\u4E60\u65F6\u957F\uFF08\u5206\u949F\uFF09\n    lastAttemptAt?: Date;\n    completedAt?: Date; // \u5B8C\u6210\u65F6\u95F4\n    updatedAt?: Date; // \u66F4\u65B0\u65F6\u95F4\uFF08timestamps\u63D0\u4F9B\uFF09\n    createdAt?: Date; // \u521B\u5EFA\u65F6\u95F4\uFF08timestamps\u63D0\u4F9B\uFF09\n}\n\nconst UserProgressSchema = new Schema<IUserProgress>({\n    userId: {type: Schema.Types.ObjectId, ref: 'User', required: true},\n    pointId: {type: String, required: true},\n    status: {\n        type: String,\n        required: true,\n        enum: ['not_started', 'in_progress', 'completed'],\n        default: 'not_started',\n    },\n    quizAttempts: {type: Number, default: 0},\n    bestScore: {type: Number, default: 0, min: 0, max: 100},\n    timeSpent: {type: Number, default: 0},\n    lastAttemptAt: {type: Date},\n    completedAt: {type: Date},\n}, {\n    timestamps: true,\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true },\n});\n\n// \u865A\u62DF\u5C5E\u6027\uFF1Ascore\u4F5C\u4E3AbestScore\u7684\u522B\u540D\nUserProgressSchema.virtual('score').get(function() {\n    return this.bestScore;\n});\n\n// \u521B\u5EFA\u590D\u5408\u552F\u4E00\u7D22\u5F15\nUserProgressSchema.index({userId: 1, pointId: 1}, {unique: true});\n\nconst UserProgress = (mongoose.models.UserProgress as mongoose.Model<IUserProgress>) || model<IUserProgress>('UserProgress', UserProgressSchema);\n\nexport default UserProgress;", "// backend/src/middleware/auth.ts\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport User from '../models/User';\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'a-very-secret-key';\r\n\r\n/**\r\n * \u8BA4\u8BC1\u4E2D\u95F4\u4EF6 - \u9A8C\u8BC1 JWT Token\r\n */\r\nexport const authMiddleware = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  const token = req.header('Authorization')?.replace('Bearer ', '');\r\n  \r\n  if (!token) {\r\n    res.status(401).json({ message: '\u672A\u6388\u6743\u7684\u8BBF\u95EE\uFF0C\u7F3A\u5C11Token' });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, JWT_SECRET) as { userId: string };\r\n    const user = await User.findById(decoded.userId).select('-passwordHash');\r\n    \r\n    if (!user) {\r\n      res.status(401).json({ message: '\u7528\u6237\u4E0D\u5B58\u5728' });\r\n      return;\r\n    }\r\n\r\n    req.user = user;\r\n    next();\r\n  } catch (error) {\r\n    res.status(401).json({ message: '\u65E0\u6548\u7684Token' });\r\n  }\r\n};\r\n\r\n/**\r\n * \u53EF\u9009\u8BA4\u8BC1\u4E2D\u95F4\u4EF6 - \u5982\u679C\u6709 token \u5219\u9A8C\u8BC1\uFF0C\u6CA1\u6709\u5219\u7EE7\u7EED\r\n */\r\nexport const optionalAuthMiddleware = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  const token = req.header('Authorization')?.replace('Bearer ', '');\r\n  \r\n  if (!token) {\r\n    next();\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, JWT_SECRET) as { userId: string };\r\n    const user = await User.findById(decoded.userId).select('-passwordHash');\r\n    \r\n    if (user) {\r\n      req.user = user;\r\n    }\r\n    \r\n    next();\r\n  } catch (error) {\r\n    // Token \u65E0\u6548\uFF0C\u4F46\u4E0D\u963B\u6B62\u8BF7\u6C42\u7EE7\u7EED\r\n    next();\r\n  }\r\n};\r\n\r\n", "// backend/src/routes/chat.ts\r\nimport {Router, Request, Response} from 'express';\r\nimport {authMiddleware} from '../middleware/auth';\r\nimport Chat from '../models/Chat';\r\nimport {IMessage} from '../models/Chat';\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const chats = await Chat.find({userId}).sort({updatedAt: -1});\r\n        res.json(chats);\r\n    } catch (error) {\r\n        res.status(500).json({message: '\u83B7\u53D6\u804A\u5929\u8BB0\u5F55\u5931\u8D25'});\r\n    }\r\n});\r\n\r\nrouter.post('/new', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const {messages} = req.body as { messages: IMessage[] };\r\n\r\n        const userMessage = messages.find(m => m.role === 'user');\r\n        const title = userMessage ? userMessage.content.substring(0, 30) : '\u65B0\u7684\u5BF9\u8BDD';\r\n\r\n        const newChat = new Chat({\r\n            userId,\r\n            title,\r\n            messages\r\n        });\r\n        await newChat.save();\r\n        res.status(201).json(newChat);\r\n    } catch (error) {\r\n        res.status(500).json({message: '\u521B\u5EFA\u65B0\u5BF9\u8BDD\u5931\u8D25'});\r\n    }\r\n});\r\n\r\nrouter.put('/:id', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const chatId = req.params.id;\r\n        const {messages} = req.body as { messages: IMessage[] };\r\n\r\n        const updatedChat = await Chat.findOneAndUpdate(\r\n            {_id: chatId, userId},\r\n            {\"messages\": messages},\r\n            {new: true}\r\n        );\r\n\r\n        if (!updatedChat) {\r\n            return res.status(404).json({message: '\u5BF9\u8BDD\u672A\u627E\u5230'});\r\n        }\r\n\r\n        res.json(updatedChat);\r\n    } catch (error) {\r\n        res.status(500).json({message: '\u66F4\u65B0\u5BF9\u8BDD\u5931\u8D25'});\r\n    }\r\n});\r\n\r\nrouter.delete('/:id', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const chatId = req.params.id;\r\n\r\n        const deletedChat = await Chat.findOneAndDelete({_id: chatId, userId});\r\n\r\n        if (!deletedChat) {\r\n            return res.status(404).json({message: '\u5BF9\u8BDD\u672A\u627E\u5230\u6216\u65E0\u6743\u9650\u5220\u9664'});\r\n        }\r\n\r\n        res.json({message: '\u5BF9\u8BDD\u5220\u9664\u6210\u529F', chatId: chatId});\r\n    } catch (error) {\r\n        res.status(500).json({message: '\u5220\u9664\u5BF9\u8BDD\u5931\u8D25'});\r\n    }\r\n});\r\n\r\nexport default router;", "// backend/src/models/Chat.ts\r\nimport mongoose, { Schema, model, Document, Types } from 'mongoose';\r\n\r\n// \u5B9A\u4E49\u5355\u6761\u6D88\u606F\u7684\u63A5\u53E3\r\nexport interface IMessage {\r\n    role: 'system' | 'user' | 'assistant';\r\n    content: string;\r\n}\r\n\r\n// \u5B9A\u4E49\u804A\u5929\u4F1A\u8BDD\u7684\u63A5\u53E3\r\nexport interface IChat extends Document {\r\n    userId: Types.ObjectId;\r\n    title: string;\r\n    messages: IMessage[];\r\n}\r\n\r\nconst MessageSchema = new Schema<IMessage>({\r\n    role: { type: String, required: true, enum: ['system', 'user', 'assistant'] },\r\n    content: { type: String, required: true }\r\n}, { _id: false });\r\n\r\nconst ChatSchema = new Schema<IChat>({\r\n    userId: { type: Schema.Types.ObjectId, ref: 'User', required: true, index: true },\r\n    title: { type: String, required: true, default: '\u65B0\u7684\u5BF9\u8BDD' },\r\n    messages: [MessageSchema]\r\n}, {\r\n    timestamps: true\r\n});\r\n\r\nconst Chat = (mongoose.models.Chat as mongoose.Model<IChat>) || model<IChat>('Chat', ChatSchema);\r\n\r\nexport default Chat;", "// backend/src/routes/ai.ts\r\nimport { Router, Response, Request } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { getChatCompletion, streamChatCompletion, chat, checkAIHealth, ChatMessage } from '../services/ai';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * AI \u804A\u5929\u7AEF\u70B9\uFF08\u6807\u51C6\uFF09\r\n */\r\nrouter.post('/chat', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const { messages, context } = req.body;\r\n\r\n    if (!messages || !Array.isArray(messages)) {\r\n      return res.status(400).json({ \r\n        success: false,\r\n        message: '\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570: messages' \r\n      });\r\n    }\r\n\r\n    console.log(`[AI Chat] \u7528\u6237 ${req.user?._id} \u53D1\u8D77\u804A\u5929\u8BF7\u6C42`);\r\n\r\n    // \u5982\u679C\u53EA\u6709\u4E00\u6761\u7528\u6237\u6D88\u606F\uFF0C\u4F7F\u7528 chat \u51FD\u6570\r\n    if (messages.length === 1 && messages[0].role === 'user') {\r\n      const response = await chat(messages[0].content, [], context);\r\n      return res.json({\r\n        success: true,\r\n        data: {\r\n          role: 'assistant',\r\n          content: response,\r\n        },\r\n      });\r\n    }\r\n\r\n    // \u5426\u5219\u4F7F\u7528\u901A\u7528\u7684 getChatCompletion\r\n    const response = await getChatCompletion(messages);\r\n    res.json({\r\n      success: true,\r\n      data: {\r\n        role: 'assistant',\r\n        content: response,\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error('[AI Chat] \u9519\u8BEF:', error.message);\r\n    res.status(500).json({ \r\n      success: false,\r\n      message: '\u8C03\u7528 AI \u670D\u52A1\u65F6\u51FA\u9519',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * AI \u804A\u5929\u7AEF\u70B9\uFF08\u6D41\u5F0F\uFF09\r\n */\r\nrouter.post('/chat/stream', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const { messages, context } = req.body;\r\n\r\n    if (!messages || !Array.isArray(messages)) {\r\n      return res.status(400).json({ \r\n        success: false,\r\n        message: '\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570: messages' \r\n      });\r\n    }\r\n\r\n    console.log(`[AI Chat Stream] \u7528\u6237 ${req.user?._id} \u53D1\u8D77\u6D41\u5F0F\u804A\u5929\u8BF7\u6C42`);\r\n\r\n    // \u8BBE\u7F6E SSE \u54CD\u5E94\u5934\r\n    res.setHeader('Content-Type', 'text/event-stream');\r\n    res.setHeader('Cache-Control', 'no-cache');\r\n    res.setHeader('Connection', 'keep-alive');\r\n\r\n    // \u6DFB\u52A0\u4E0A\u4E0B\u6587\u5230\u6D88\u606F\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\r\n    let messagesToSend: ChatMessage[] = messages;\r\n    if (context) {\r\n      messagesToSend = [\r\n        {\r\n          role: 'system',\r\n          content: `\u5F53\u524D\u5B66\u4E60\u4E0A\u4E0B\u6587\uFF1A\\n${context}\\n\\n\u8BF7\u57FA\u4E8E\u4EE5\u4E0A\u4E0A\u4E0B\u6587\u56DE\u7B54\u5B66\u751F\u7684\u95EE\u9898\u3002`,\r\n        },\r\n        ...messages,\r\n      ];\r\n    }\r\n\r\n    try {\r\n      for await (const chunk of streamChatCompletion(messagesToSend)) {\r\n        if (chunk.done) {\r\n          res.write('data: [DONE]\\n\\n');\r\n          break;\r\n        }\r\n        res.write(`data: ${JSON.stringify({ content: chunk.content })}\\n\\n`);\r\n      }\r\n      res.end();\r\n    } catch (streamError: any) {\r\n      console.error('[AI Chat Stream] \u6D41\u5F0F\u9519\u8BEF:', streamError.message);\r\n      res.write(`data: ${JSON.stringify({ error: streamError.message })}\\n\\n`);\r\n      res.end();\r\n    }\r\n  } catch (error: any) {\r\n    console.error('[AI Chat Stream] \u9519\u8BEF:', error.message);\r\n    res.status(500).json({ \r\n      success: false,\r\n      message: '\u6D41\u5F0F\u8C03\u7528 AI \u670D\u52A1\u65F6\u51FA\u9519',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * AI \u5065\u5EB7\u68C0\u67E5\u7AEF\u70B9\r\n */\r\nrouter.get('/health', async (req: Request, res: Response) => {\r\n  try {\r\n    console.log('[AI Health] \u6267\u884C\u5065\u5EB7\u68C0\u67E5...');\r\n    const healthStatus = await checkAIHealth();\r\n    \r\n    const availableModels = Object.entries(healthStatus)\r\n      .filter(([_, healthy]) => healthy)\r\n      .map(([model]) => model);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: {\r\n        status: availableModels.length > 0 ? 'healthy' : 'unhealthy',\r\n        models: healthStatus,\r\n        availableModels,\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error('[AI Health] \u9519\u8BEF:', error.message);\r\n    res.status(500).json({ \r\n      success: false,\r\n      message: '\u5065\u5EB7\u68C0\u67E5\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\nexport default router;\r\n", "// backend/src/services/ai-models/base.ts\r\n/**\r\n * AI \u6A21\u578B\u57FA\u7840\u63A5\u53E3\u5B9A\u4E49\r\n */\r\n\r\nexport interface ChatMessage {\r\n  role: 'system' | 'user' | 'assistant';\r\n  content: string;\r\n}\r\n\r\nexport interface ChatCompletionOptions {\r\n  temperature?: number;\r\n  maxTokens?: number;\r\n  stream?: boolean;\r\n}\r\n\r\nexport interface ChatCompletionResponse {\r\n  content: string;\r\n  model: string;\r\n  usage?: {\r\n    promptTokens: number;\r\n    completionTokens: number;\r\n    totalTokens: number;\r\n  };\r\n}\r\n\r\nexport interface StreamChunk {\r\n  content: string;\r\n  done: boolean;\r\n}\r\n\r\n/**\r\n * AI \u6A21\u578B\u63D0\u4F9B\u5546\u57FA\u7C7B\r\n */\r\nexport abstract class AIModelProvider {\r\n  protected apiKey: string;\r\n  protected baseURL: string;\r\n  protected modelName: string;\r\n\r\n  constructor(apiKey: string, baseURL: string, modelName: string) {\r\n    this.apiKey = apiKey;\r\n    this.baseURL = baseURL;\r\n    this.modelName = modelName;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u804A\u5929\u8865\u5168\r\n   */\r\n  abstract chatCompletion(\r\n    messages: ChatMessage[],\r\n    options?: ChatCompletionOptions\r\n  ): Promise<ChatCompletionResponse>;\r\n\r\n  /**\r\n   * \u6D41\u5F0F\u804A\u5929\u8865\u5168\r\n   */\r\n  abstract streamChatCompletion(\r\n    messages: ChatMessage[],\r\n    options?: ChatCompletionOptions\r\n  ): AsyncGenerator<StreamChunk>;\r\n\r\n  /**\r\n   * \u5065\u5EB7\u68C0\u67E5\r\n   */\r\n  abstract healthCheck(): Promise<boolean>;\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6A21\u578B\u540D\u79F0\r\n   */\r\n  getModelName(): string {\r\n    return this.modelName;\r\n  }\r\n}\r\n\r\n", "// backend/src/services/ai-models/kimi.ts\r\nimport axios from 'axios';\r\nimport { AIModelProvider, ChatMessage, ChatCompletionOptions, ChatCompletionResponse, StreamChunk } from './base';\r\n\r\n/**\r\n * Kimi (\u6708\u4E4B\u6697\u9762) AI \u6A21\u578B\u63D0\u4F9B\u5546\r\n */\r\nexport class KimiProvider extends AIModelProvider {\r\n  constructor(apiKey: string) {\r\n    super(\r\n      apiKey,\r\n      'https://api.moonshot.cn/v1/chat/completions',\r\n      'moonshot-v1-8k'\r\n    );\r\n  }\r\n\r\n  async chatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): Promise<ChatCompletionResponse> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        this.baseURL,\r\n        {\r\n          model: this.modelName,\r\n          messages,\r\n          temperature,\r\n          max_tokens: maxTokens,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.apiKey}`,\r\n          },\r\n          timeout: 60000,\r\n        }\r\n      );\r\n\r\n      const choice = response.data.choices[0];\r\n      return {\r\n        content: choice?.message?.content || '',\r\n        model: this.modelName,\r\n        usage: response.data.usage ? {\r\n          promptTokens: response.data.usage.prompt_tokens,\r\n          completionTokens: response.data.usage.completion_tokens,\r\n          totalTokens: response.data.usage.total_tokens,\r\n        } : undefined,\r\n      };\r\n    } catch (error: any) {\r\n      console.error('[Kimi] API \u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`Kimi API \u9519\u8BEF: ${error.response?.data?.error?.message || error.message}`);\r\n    }\r\n  }\r\n\r\n  async *streamChatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): AsyncGenerator<StreamChunk> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        this.baseURL,\r\n        {\r\n          model: this.modelName,\r\n          messages,\r\n          temperature,\r\n          max_tokens: maxTokens,\r\n          stream: true,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.apiKey}`,\r\n          },\r\n          timeout: 60000,\r\n          responseType: 'stream',\r\n        }\r\n      );\r\n\r\n      for await (const chunk of response.data) {\r\n        const lines = chunk.toString().split('\\n').filter((line: string) => line.trim() !== '');\r\n        for (const line of lines) {\r\n          if (line.startsWith('data: ')) {\r\n            const data = line.slice(6);\r\n            if (data === '[DONE]') {\r\n              yield { content: '', done: true };\r\n              return;\r\n            }\r\n            try {\r\n              const parsed = JSON.parse(data);\r\n              const content = parsed.choices[0]?.delta?.content || '';\r\n              if (content) {\r\n                yield { content, done: false };\r\n              }\r\n            } catch (e) {\r\n              // \u5FFD\u7565\u89E3\u6790\u9519\u8BEF\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('[Kimi] \u6D41\u5F0F\u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`Kimi \u6D41\u5F0F\u9519\u8BEF: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async healthCheck(): Promise<boolean> {\r\n    try {\r\n      await this.chatCompletion([{ role: 'user', content: 'Hi' }], { maxTokens: 10 });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n", "// backend/src/services/ai-models/qianwen.ts\r\nimport axios from 'axios';\r\nimport { AIModelProvider, ChatMessage, ChatCompletionOptions, ChatCompletionResponse, StreamChunk } from './base';\r\n\r\n/**\r\n * \u901A\u4E49\u5343\u95EE AI \u6A21\u578B\u63D0\u4F9B\u5546\r\n */\r\nexport class QianwenProvider extends AIModelProvider {\r\n  constructor(apiKey: string) {\r\n    super(\r\n      apiKey,\r\n      'https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation',\r\n      'qwen-turbo'\r\n    );\r\n  }\r\n\r\n  async chatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): Promise<ChatCompletionResponse> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        this.baseURL,\r\n        {\r\n          model: this.modelName,\r\n          input: {\r\n            messages: messages.map(msg => ({\r\n              role: msg.role,\r\n              content: msg.content,\r\n            })),\r\n          },\r\n          parameters: {\r\n            temperature,\r\n            max_tokens: maxTokens,\r\n            result_format: 'message',\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.apiKey}`,\r\n          },\r\n          timeout: 60000,\r\n        }\r\n      );\r\n\r\n      const output = response.data.output;\r\n      return {\r\n        content: output?.choices?.[0]?.message?.content || '',\r\n        model: this.modelName,\r\n        usage: response.data.usage ? {\r\n          promptTokens: response.data.usage.input_tokens,\r\n          completionTokens: response.data.usage.output_tokens,\r\n          totalTokens: response.data.usage.total_tokens,\r\n        } : undefined,\r\n      };\r\n    } catch (error: any) {\r\n      console.error('[Qianwen] API \u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`\u901A\u4E49\u5343\u95EE API \u9519\u8BEF: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  }\r\n\r\n  async *streamChatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): AsyncGenerator<StreamChunk> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        this.baseURL,\r\n        {\r\n          model: this.modelName,\r\n          input: {\r\n            messages: messages.map(msg => ({\r\n              role: msg.role,\r\n              content: msg.content,\r\n            })),\r\n          },\r\n          parameters: {\r\n            temperature,\r\n            max_tokens: maxTokens,\r\n            result_format: 'message',\r\n            incremental_output: true,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.apiKey}`,\r\n            'X-DashScope-SSE': 'enable',\r\n          },\r\n          timeout: 60000,\r\n          responseType: 'stream',\r\n        }\r\n      );\r\n\r\n      for await (const chunk of response.data) {\r\n        const lines = chunk.toString().split('\\n').filter((line: string) => line.trim() !== '');\r\n        for (const line of lines) {\r\n          if (line.startsWith('data:')) {\r\n            const data = line.slice(5).trim();\r\n            try {\r\n              const parsed = JSON.parse(data);\r\n              const content = parsed.output?.choices?.[0]?.message?.content || '';\r\n              const finished = parsed.output?.finish_reason === 'stop';\r\n              \r\n              if (content) {\r\n                yield { content, done: false };\r\n              }\r\n              \r\n              if (finished) {\r\n                yield { content: '', done: true };\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              // \u5FFD\u7565\u89E3\u6790\u9519\u8BEF\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('[Qianwen] \u6D41\u5F0F\u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`\u901A\u4E49\u5343\u95EE\u6D41\u5F0F\u9519\u8BEF: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async healthCheck(): Promise<boolean> {\r\n    try {\r\n      await this.chatCompletion([{ role: 'user', content: 'Hi' }], { maxTokens: 10 });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n", "// backend/src/services/ai-models/ernie.ts\r\nimport axios from 'axios';\r\nimport { AIModelProvider, ChatMessage, ChatCompletionOptions, ChatCompletionResponse, StreamChunk } from './base';\r\n\r\n/**\r\n * \u6587\u5FC3\u4E00\u8A00 AI \u6A21\u578B\u63D0\u4F9B\u5546\r\n */\r\nexport class ErnieProvider extends AIModelProvider {\r\n  private accessToken: string = '';\r\n  private tokenExpireTime: number = 0;\r\n\r\n  constructor(apiKey: string, secretKey: string) {\r\n    super(\r\n      apiKey,\r\n      'https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions',\r\n      'ERNIE-Bot-turbo'\r\n    );\r\n    this.secretKey = secretKey;\r\n  }\r\n\r\n  private secretKey: string;\r\n\r\n  /**\r\n   * \u83B7\u53D6\u8BBF\u95EE\u4EE4\u724C\r\n   */\r\n  private async getAccessToken(): Promise<string> {\r\n    const now = Date.now();\r\n    \r\n    // \u5982\u679C token \u672A\u8FC7\u671F\uFF0C\u76F4\u63A5\u8FD4\u56DE\r\n    if (this.accessToken && this.tokenExpireTime > now) {\r\n      return this.accessToken;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://aip.baidubce.com/oauth/2.0/token',\r\n        null,\r\n        {\r\n          params: {\r\n            grant_type: 'client_credentials',\r\n            client_id: this.apiKey,\r\n            client_secret: this.secretKey,\r\n          },\r\n        }\r\n      );\r\n\r\n      this.accessToken = response.data.access_token;\r\n      this.tokenExpireTime = now + (response.data.expires_in - 60) * 1000; // \u63D0\u524D1\u5206\u949F\u8FC7\u671F\r\n      return this.accessToken;\r\n    } catch (error: any) {\r\n      console.error('[Ernie] \u83B7\u53D6\u8BBF\u95EE\u4EE4\u724C\u5931\u8D25:', error.message);\r\n      throw new Error(`\u6587\u5FC3\u4E00\u8A00\u8BA4\u8BC1\u5931\u8D25: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async chatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): Promise<ChatCompletionResponse> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n    const accessToken = await this.getAccessToken();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.baseURL}?access_token=${accessToken}`,\r\n        {\r\n          messages: messages.map(msg => ({\r\n            role: msg.role === 'system' ? 'user' : msg.role, // \u6587\u5FC3\u4E00\u8A00\u4E0D\u652F\u6301 system \u89D2\u8272\r\n            content: msg.content,\r\n          })),\r\n          temperature,\r\n          max_output_tokens: maxTokens,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          timeout: 60000,\r\n        }\r\n      );\r\n\r\n      return {\r\n        content: response.data.result || '',\r\n        model: this.modelName,\r\n        usage: response.data.usage ? {\r\n          promptTokens: response.data.usage.prompt_tokens,\r\n          completionTokens: response.data.usage.completion_tokens,\r\n          totalTokens: response.data.usage.total_tokens,\r\n        } : undefined,\r\n      };\r\n    } catch (error: any) {\r\n      console.error('[Ernie] API \u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`\u6587\u5FC3\u4E00\u8A00 API \u9519\u8BEF: ${error.response?.data?.error_msg || error.message}`);\r\n    }\r\n  }\r\n\r\n  async *streamChatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): AsyncGenerator<StreamChunk> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n    const accessToken = await this.getAccessToken();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${this.baseURL}?access_token=${accessToken}`,\r\n        {\r\n          messages: messages.map(msg => ({\r\n            role: msg.role === 'system' ? 'user' : msg.role,\r\n            content: msg.content,\r\n          })),\r\n          temperature,\r\n          max_output_tokens: maxTokens,\r\n          stream: true,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          timeout: 60000,\r\n          responseType: 'stream',\r\n        }\r\n      );\r\n\r\n      for await (const chunk of response.data) {\r\n        const lines = chunk.toString().split('\\n').filter((line: string) => line.trim() !== '');\r\n        for (const line of lines) {\r\n          if (line.startsWith('data: ')) {\r\n            const data = line.slice(6);\r\n            try {\r\n              const parsed = JSON.parse(data);\r\n              const content = parsed.result || '';\r\n              const isEnd = parsed.is_end;\r\n              \r\n              if (content) {\r\n                yield { content, done: false };\r\n              }\r\n              \r\n              if (isEnd) {\r\n                yield { content: '', done: true };\r\n                return;\r\n              }\r\n            } catch (e) {\r\n              // \u5FFD\u7565\u89E3\u6790\u9519\u8BEF\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('[Ernie] \u6D41\u5F0F\u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`\u6587\u5FC3\u4E00\u8A00\u6D41\u5F0F\u9519\u8BEF: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async healthCheck(): Promise<boolean> {\r\n    try {\r\n      await this.chatCompletion([{ role: 'user', content: 'Hi' }], { maxTokens: 10 });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n", "// backend/src/services/ai-models/zhipu.ts\r\nimport axios from 'axios';\r\nimport { AIModelProvider, ChatMessage, ChatCompletionOptions, ChatCompletionResponse, StreamChunk } from './base';\r\n\r\n/**\r\n * \u667A\u8C31 AI \u6A21\u578B\u63D0\u4F9B\u5546\r\n */\r\nexport class ZhipuProvider extends AIModelProvider {\r\n  constructor(apiKey: string) {\r\n    super(\r\n      apiKey,\r\n      'https://open.bigmodel.cn/api/paas/v4/chat/completions',\r\n      'glm-4-flash'\r\n    );\r\n  }\r\n\r\n  async chatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): Promise<ChatCompletionResponse> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        this.baseURL,\r\n        {\r\n          model: this.modelName,\r\n          messages,\r\n          temperature,\r\n          max_tokens: maxTokens,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.apiKey}`,\r\n          },\r\n          timeout: 60000,\r\n        }\r\n      );\r\n\r\n      const choice = response.data.choices[0];\r\n      return {\r\n        content: choice?.message?.content || '',\r\n        model: this.modelName,\r\n        usage: response.data.usage ? {\r\n          promptTokens: response.data.usage.prompt_tokens,\r\n          completionTokens: response.data.usage.completion_tokens,\r\n          totalTokens: response.data.usage.total_tokens,\r\n        } : undefined,\r\n      };\r\n    } catch (error: any) {\r\n      console.error('[Zhipu] API \u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`\u667A\u8C31 API \u9519\u8BEF: ${error.response?.data?.error?.message || error.message}`);\r\n    }\r\n  }\r\n\r\n  async *streamChatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): AsyncGenerator<StreamChunk> {\r\n    const { temperature = 0.7, maxTokens = 2000 } = options;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        this.baseURL,\r\n        {\r\n          model: this.modelName,\r\n          messages,\r\n          temperature,\r\n          max_tokens: maxTokens,\r\n          stream: true,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.apiKey}`,\r\n          },\r\n          timeout: 60000,\r\n          responseType: 'stream',\r\n        }\r\n      );\r\n\r\n      for await (const chunk of response.data) {\r\n        const lines = chunk.toString().split('\\n').filter((line: string) => line.trim() !== '');\r\n        for (const line of lines) {\r\n          if (line.startsWith('data: ')) {\r\n            const data = line.slice(6);\r\n            if (data === '[DONE]') {\r\n              yield { content: '', done: true };\r\n              return;\r\n            }\r\n            try {\r\n              const parsed = JSON.parse(data);\r\n              const content = parsed.choices[0]?.delta?.content || '';\r\n              if (content) {\r\n                yield { content, done: false };\r\n              }\r\n            } catch (e) {\r\n              // \u5FFD\u7565\u89E3\u6790\u9519\u8BEF\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('[Zhipu] \u6D41\u5F0F\u8C03\u7528\u5931\u8D25:', error.message);\r\n      throw new Error(`\u667A\u8C31\u6D41\u5F0F\u9519\u8BEF: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async healthCheck(): Promise<boolean> {\r\n    try {\r\n      await this.chatCompletion([{ role: 'user', content: 'Hi' }], { maxTokens: 10 });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n", "// backend/src/services/ai.ts\r\nimport {\r\n  AIModelProvider,\r\n  ChatMessage,\r\n  ChatCompletionOptions,\r\n  KimiProvider,\r\n  QianwenProvider,\r\n  ErnieProvider,\r\n  ZhipuProvider,\r\n} from './ai-models';\r\n\r\n/**\r\n * AI \u6A21\u578B\u7C7B\u578B\r\n */\r\nexport type AIModelType = 'kimi' | 'qianwen' | 'ernie' | 'zhipu';\r\n\r\n/**\r\n * AI \u670D\u52A1\u914D\u7F6E\r\n */\r\ninterface AIServiceConfig {\r\n  primaryModel: AIModelType;\r\n  fallbackModels: AIModelType[];\r\n  enableCache?: boolean;\r\n}\r\n\r\n/**\r\n * AI \u670D\u52A1\u7BA1\u7406\u5668 - \u652F\u6301\u591A\u6A21\u578B\u548C\u667A\u80FD\u964D\u7EA7\r\n */\r\nclass AIService {\r\n  private providers: Map<AIModelType, AIModelProvider> = new Map();\r\n  private config: AIServiceConfig;\r\n  private cache: Map<string, { content: string; timestamp: number }> = new Map();\r\n  private readonly CACHE_TTL = 3600000; // 1\u5C0F\u65F6\u7F13\u5B58\r\n\r\n  constructor(config: AIServiceConfig) {\r\n    this.config = config;\r\n    this.initializeProviders();\r\n  }\r\n\r\n  /**\r\n   * \u521D\u59CB\u5316\u6240\u6709\u53EF\u7528\u7684 AI \u6A21\u578B\u63D0\u4F9B\u5546\r\n   */\r\n  private initializeProviders() {\r\n    // Kimi (\u6708\u4E4B\u6697\u9762)\r\n    const kimiKey = process.env.KIMI_API_KEY;\r\n    if (kimiKey) {\r\n      this.providers.set('kimi', new KimiProvider(kimiKey));\r\n      console.log('[AI Service] Kimi \u6A21\u578B\u5DF2\u52A0\u8F7D');\r\n    }\r\n\r\n    // \u901A\u4E49\u5343\u95EE\r\n    const qianwenKey = process.env.QIANWEN_API_KEY;\r\n    if (qianwenKey) {\r\n      this.providers.set('qianwen', new QianwenProvider(qianwenKey));\r\n      console.log('[AI Service] \u901A\u4E49\u5343\u95EE\u6A21\u578B\u5DF2\u52A0\u8F7D');\r\n    }\r\n\r\n    // \u6587\u5FC3\u4E00\u8A00\r\n    const ernieKey = process.env.ERNIE_API_KEY;\r\n    const ernieSecret = process.env.ERNIE_SECRET_KEY;\r\n    if (ernieKey && ernieSecret) {\r\n      this.providers.set('ernie', new ErnieProvider(ernieKey, ernieSecret));\r\n      console.log('[AI Service] \u6587\u5FC3\u4E00\u8A00\u6A21\u578B\u5DF2\u52A0\u8F7D');\r\n    }\r\n\r\n    // \u667A\u8C31 AI\r\n    const zhipuKey = process.env.ZHIPU_API_KEY;\r\n    if (zhipuKey) {\r\n      this.providers.set('zhipu', new ZhipuProvider(zhipuKey));\r\n      console.log('[AI Service] \u667A\u8C31 AI \u6A21\u578B\u5DF2\u52A0\u8F7D');\r\n    }\r\n\r\n    console.log(`[AI Service] \u5171\u52A0\u8F7D ${this.providers.size} \u4E2A AI \u6A21\u578B`);\r\n  }\r\n\r\n  /**\r\n   * \u751F\u6210\u7F13\u5B58\u952E\r\n   */\r\n  private getCacheKey(messages: ChatMessage[], options: ChatCompletionOptions): string {\r\n    return JSON.stringify({ messages, options });\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u7F13\u5B58\u83B7\u53D6\r\n   */\r\n  private getFromCache(key: string): string | null {\r\n    if (!this.config.enableCache) return null;\r\n\r\n    const cached = this.cache.get(key);\r\n    if (cached && Date.now() - cached.timestamp < this.CACHE_TTL) {\r\n      console.log('[AI Service] \u4F7F\u7528\u7F13\u5B58\u7ED3\u679C');\r\n      return cached.content;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * \u4FDD\u5B58\u5230\u7F13\u5B58\r\n   */\r\n  private saveToCache(key: string, content: string) {\r\n    if (!this.config.enableCache) return;\r\n    \r\n    this.cache.set(key, {\r\n      content,\r\n      timestamp: Date.now(),\r\n    });\r\n\r\n    // \u9650\u5236\u7F13\u5B58\u5927\u5C0F\r\n    if (this.cache.size > 100) {\r\n      const firstKey = this.cache.keys().next().value as string | undefined;\r\n      if (firstKey) {\r\n        this.cache.delete(firstKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u804A\u5929\u8865\u5168\uFF08\u5E26\u667A\u80FD\u964D\u7EA7\uFF09\r\n   */\r\n  async getChatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ): Promise<string> {\r\n    // \u68C0\u67E5\u7F13\u5B58\r\n    const cacheKey = this.getCacheKey(messages, options);\r\n    const cached = this.getFromCache(cacheKey);\r\n    if (cached) return cached;\r\n\r\n    // \u5C1D\u8BD5\u4F7F\u7528\u4E3B\u6A21\u578B\r\n    const modelsToTry = [\r\n      this.config.primaryModel,\r\n      ...this.config.fallbackModels,\r\n    ];\r\n\r\n    let lastError: Error | null = null;\r\n\r\n    for (const modelType of modelsToTry) {\r\n      const provider = this.providers.get(modelType);\r\n      if (!provider) continue;\r\n\r\n      try {\r\n        console.log(`[AI Service] \u5C1D\u8BD5\u4F7F\u7528 ${modelType} \u6A21\u578B...`);\r\n        const response = await provider.chatCompletion(messages, options);\r\n        \r\n        // \u4FDD\u5B58\u5230\u7F13\u5B58\r\n        this.saveToCache(cacheKey, response.content);\r\n        \r\n        console.log(`[AI Service] ${modelType} \u6A21\u578B\u8C03\u7528\u6210\u529F`);\r\n        return response.content;\r\n      } catch (error: any) {\r\n        console.error(`[AI Service] ${modelType} \u6A21\u578B\u5931\u8D25:`, error.message);\r\n        lastError = error;\r\n        // \u7EE7\u7EED\u5C1D\u8BD5\u4E0B\u4E00\u4E2A\u6A21\u578B\r\n      }\r\n    }\r\n\r\n    // \u6240\u6709\u6A21\u578B\u90FD\u5931\u8D25\r\n    throw new Error(\r\n      `\u6240\u6709 AI \u6A21\u578B\u5747\u4E0D\u53EF\u7528\u3002\u6700\u540E\u9519\u8BEF: ${lastError?.message || '\u672A\u77E5\u9519\u8BEF'}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6D41\u5F0F\u804A\u5929\u8865\u5168\r\n   */\r\n  async *streamChatCompletion(\r\n    messages: ChatMessage[],\r\n    options: ChatCompletionOptions = {}\r\n  ) {\r\n    const modelsToTry = [\r\n      this.config.primaryModel,\r\n      ...this.config.fallbackModels,\r\n    ];\r\n\r\n    let lastError: Error | null = null;\r\n\r\n    for (const modelType of modelsToTry) {\r\n      const provider = this.providers.get(modelType);\r\n      if (!provider) continue;\r\n\r\n      try {\r\n        console.log(`[AI Service] \u6D41\u5F0F\u8C03\u7528 ${modelType} \u6A21\u578B...`);\r\n        for await (const chunk of provider.streamChatCompletion(messages, options)) {\r\n          yield chunk;\r\n        }\r\n        return; // \u6210\u529F\u5B8C\u6210\r\n      } catch (error: any) {\r\n        console.error(`[AI Service] ${modelType} \u6D41\u5F0F\u8C03\u7528\u5931\u8D25:`, error.message);\r\n        lastError = error;\r\n        // \u7EE7\u7EED\u5C1D\u8BD5\u4E0B\u4E00\u4E2A\u6A21\u578B\r\n      }\r\n    }\r\n\r\n    // \u6240\u6709\u6A21\u578B\u90FD\u5931\u8D25\r\n    throw new Error(\r\n      `\u6240\u6709 AI \u6A21\u578B\u6D41\u5F0F\u8C03\u7528\u5747\u5931\u8D25\u3002\u6700\u540E\u9519\u8BEF: ${lastError?.message || '\u672A\u77E5\u9519\u8BEF'}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u9664\u7F13\u5B58\r\n   */\r\n  clearCache() {\r\n    this.cache.clear();\r\n    console.log('[AI Service] \u7F13\u5B58\u5DF2\u6E05\u9664');\r\n  }\r\n\r\n  /**\r\n   * \u5065\u5EB7\u68C0\u67E5\r\n   */\r\n  async healthCheck(): Promise<Record<AIModelType, boolean>> {\r\n    const results: Record<string, boolean> = {};\r\n    \r\n    for (const [modelType, provider] of this.providers.entries()) {\r\n      try {\r\n        results[modelType] = await provider.healthCheck();\r\n      } catch {\r\n        results[modelType] = false;\r\n      }\r\n    }\r\n    \r\n    return results as Record<AIModelType, boolean>;\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA AI \u670D\u52A1\u5355\u4F8B\r\nconst aiService = new AIService({\r\n  primaryModel: (process.env.PRIMARY_AI_MODEL as AIModelType) || 'kimi',\r\n  fallbackModels: ['qianwen', 'zhipu', 'ernie'].filter(\r\n    m => m !== process.env.PRIMARY_AI_MODEL\r\n  ) as AIModelType[],\r\n  enableCache: process.env.ENABLE_AI_CACHE === 'true',\r\n});\r\n\r\n/**\r\n * \u5BFC\u51FA\u4FBF\u6377\u51FD\u6570 - \u83B7\u53D6\u804A\u5929\u8865\u5168\r\n */\r\nexport async function getChatCompletion(\r\n  messages: ChatMessage[],\r\n  options: ChatCompletionOptions = {}\r\n): Promise<string> {\r\n  return aiService.getChatCompletion(messages, options);\r\n}\r\n\r\n/**\r\n * \u5BFC\u51FA\u4FBF\u6377\u51FD\u6570 - \u6D41\u5F0F\u804A\u5929\u8865\u5168\r\n */\r\nexport async function* streamChatCompletion(\r\n  messages: ChatMessage[],\r\n  options: ChatCompletionOptions = {}\r\n) {\r\n  for await (const chunk of aiService.streamChatCompletion(messages, options)) {\r\n    yield chunk;\r\n  }\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u9519\u9898\u6DF1\u5EA6\u89E3\u6790\r\n */\r\nexport async function analyzeWrongQuestion(\r\n  question: string,\r\n  options: string[],\r\n  correctAnswer: string,\r\n  userAnswer: string,\r\n  standardExplanation: string,\r\n  pointTitle: string\r\n): Promise<string> {\r\n  const prompt = `\u4F60\u662F\u4E00\u4F4D\u7ECF\u9A8C\u4E30\u5BCC\u7684\u6559\u80B2\u4E13\u5BB6\u3002\u8BF7\u5BF9\u4EE5\u4E0B\u9519\u9898\u8FDB\u884C\u6DF1\u5EA6\u5206\u6790\uFF1A\r\n\r\n**\u9898\u76EE**: ${question}\r\n\r\n**\u9009\u9879**:\r\n${options.map((opt, idx) => `${String.fromCharCode(65 + idx)}. ${opt}`).join('\\n')}\r\n\r\n**\u6B63\u786E\u7B54\u6848**: ${correctAnswer}\r\n**\u5B66\u751F\u7B54\u6848**: ${userAnswer}\r\n**\u6807\u51C6\u89E3\u6790**: ${standardExplanation}\r\n**\u77E5\u8BC6\u70B9**: ${pointTitle}\r\n\r\n\u8BF7\u63D0\u4F9B\u4EE5\u4E0B\u5185\u5BB9\uFF1A\r\n\r\n1. **\u9519\u8BEF\u539F\u56E0\u5206\u6790**\uFF1A\u4E3A\u4EC0\u4E48\u5B66\u751F\u4F1A\u9009\u62E9\u9519\u8BEF\u7B54\u6848\uFF1F\u53EF\u80FD\u7684\u601D\u7EF4\u8BEF\u533A\u5728\u54EA\u91CC\uFF1F\r\n2. **\u77E5\u8BC6\u70B9\u8BE6\u89E3**\uFF1A\u76F8\u5173\u77E5\u8BC6\u70B9\u7684\u6838\u5FC3\u6982\u5FF5\u548C\u539F\u7406\u662F\u4EC0\u4E48\uFF1F\r\n3. **\u8BB0\u5FC6\u6280\u5DE7**\uFF1A\u6709\u4EC0\u4E48\u597D\u7684\u8BB0\u5FC6\u65B9\u6CD5\u6216\u53E3\u8BC0\uFF1F\r\n4. **\u77E5\u8BC6\u62D3\u5C55**\uFF1A\u76F8\u5173\u7684\u5176\u4ED6\u91CD\u8981\u77E5\u8BC6\u70B9\u662F\u4EC0\u4E48\uFF1F\r\n\r\n\u8BF7\u7528 Markdown \u683C\u5F0F\u8F93\u51FA\uFF0C\u6761\u7406\u6E05\u6670\uFF0C\u6613\u4E8E\u7406\u89E3\u3002`;\r\n\r\n  const messages: ChatMessage[] = [\r\n    {\r\n      role: 'system',\r\n      content: '\u4F60\u662F\u4E00\u4F4D\u4E13\u4E1A\u7684\u6559\u80B2\u8F85\u5BFC\u8001\u5E08\uFF0C\u64C5\u957F\u5206\u6790\u5B66\u751F\u7684\u9519\u9898\u5E76\u63D0\u4F9B\u6DF1\u5165\u7684\u5B66\u4E60\u5EFA\u8BAE\u3002',\r\n    },\r\n    {\r\n      role: 'user',\r\n      content: prompt,\r\n    },\r\n  ];\r\n\r\n  return await getChatCompletion(messages, { maxTokens: 3000 });\r\n}\r\n\r\n/**\r\n * AI \u804A\u5929\uFF08\u901A\u7528\uFF09\r\n */\r\nexport async function chat(\r\n  userMessage: string,\r\n  conversationHistory: ChatMessage[] = [],\r\n  context?: string\r\n): Promise<string> {\r\n  const systemPrompt = context\r\n    ? `\u4F60\u662F\u667A\u5B66\u4F34\uFF08IntelliBuddy\uFF09\u7684 AI \u52A9\u624B\uFF0C\u4E13\u95E8\u5E2E\u52A9\u5B66\u751F\u5B66\u4E60\u548C\u7406\u89E3\u5404\u79CD\u77E5\u8BC6\u3002\u4F60\u7684\u56DE\u7B54\u5E94\u8BE5\u4E13\u4E1A\u3001\u53CB\u597D\u3001\u5BCC\u6709\u8010\u5FC3\u3002\r\n\r\n\u5F53\u524D\u5B66\u4E60\u4E0A\u4E0B\u6587\uFF1A\r\n${context}\r\n\r\n\u8BF7\u57FA\u4E8E\u4EE5\u4E0A\u4E0A\u4E0B\u6587\u56DE\u7B54\u5B66\u751F\u7684\u95EE\u9898\uFF0C\u63D0\u4F9B\u7CBE\u51C6\u3001\u76F8\u5173\u7684\u5B66\u4E60\u6307\u5BFC\u3002`\r\n    : '\u4F60\u662F\u667A\u5B66\u4F34\uFF08IntelliBuddy\uFF09\u7684 AI \u52A9\u624B\uFF0C\u4E13\u95E8\u5E2E\u52A9\u5B66\u751F\u5B66\u4E60\u548C\u7406\u89E3\u5404\u79CD\u77E5\u8BC6\u3002\u4F60\u7684\u56DE\u7B54\u5E94\u8BE5\u4E13\u4E1A\u3001\u53CB\u597D\u3001\u5BCC\u6709\u8010\u5FC3\u3002';\r\n\r\n  const messages: ChatMessage[] = [\r\n    {\r\n      role: 'system',\r\n      content: systemPrompt,\r\n    },\r\n    ...conversationHistory,\r\n    {\r\n      role: 'user',\r\n      content: userMessage,\r\n    },\r\n  ];\r\n\r\n  return await getChatCompletion(messages);\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u5B66\u4E60\u62A5\u544A\r\n */\r\nexport async function generateLearningReport(\r\n  userName: string,\r\n  studyStats: {\r\n    totalTime: number;\r\n    completedPoints: number;\r\n    totalPoints: number;\r\n    weakAreas: string[];\r\n    strongAreas: string[];\r\n    recentProgress: string[];\r\n  }\r\n): Promise<string> {\r\n  const prompt = `\u4F60\u662F\u4E00\u4F4D\u4E13\u4E1A\u7684\u5B66\u4E60\u987E\u95EE\u3002\u8BF7\u4E3A\u5B66\u751F\u751F\u6210\u4E00\u4EFD\u4E2A\u6027\u5316\u7684\u5B66\u4E60\u62A5\u544A\u3002\r\n\r\n**\u5B66\u751F**: ${userName}\r\n\r\n**\u5B66\u4E60\u6570\u636E**:\r\n- \u603B\u5B66\u4E60\u65F6\u957F: ${Math.floor(studyStats.totalTime / 3600)} \u5C0F\u65F6 ${Math.floor((studyStats.totalTime % 3600) / 60)} \u5206\u949F\r\n- \u5DF2\u5B8C\u6210\u77E5\u8BC6\u70B9: ${studyStats.completedPoints} / ${studyStats.totalPoints}\r\n- \u8584\u5F31\u9886\u57DF: ${studyStats.weakAreas.join('\u3001')}\r\n- \u64C5\u957F\u9886\u57DF: ${studyStats.strongAreas.join('\u3001')}\r\n- \u8FD1\u671F\u5B66\u4E60\u8FDB\u5C55: ${studyStats.recentProgress.join('\u3001')}\r\n\r\n\u8BF7\u751F\u6210\u4E00\u4EFD\u5305\u542B\u4EE5\u4E0B\u5185\u5BB9\u7684\u5B66\u4E60\u62A5\u544A\uFF08\u4F7F\u7528 Markdown \u683C\u5F0F\uFF09\uFF1A\r\n\r\n1. **\u5B66\u4E60\u603B\u7ED3**\uFF1A\u5BF9\u6574\u4F53\u5B66\u4E60\u60C5\u51B5\u7684\u8BC4\u4EF7\r\n2. **\u4F18\u52BF\u5206\u6790**\uFF1A\u8868\u626C\u5B66\u751F\u7684\u5F3A\u9879\u548C\u8FDB\u6B65\r\n3. **\u6539\u8FDB\u5EFA\u8BAE**\uFF1A\u9488\u5BF9\u8584\u5F31\u9886\u57DF\u7684\u5177\u4F53\u5B66\u4E60\u5EFA\u8BAE\r\n4. **\u4E0B\u5468\u76EE\u6807**\uFF1A\u63A8\u8350\u7684\u5B66\u4E60\u76EE\u6807\u548C\u8BA1\u5212\r\n5. **\u6FC0\u52B1\u5BC4\u8BED**\uFF1A\u7ED9\u5B66\u751F\u7684\u9F13\u52B1\u548C\u671F\u671B\r\n\r\n\u8BED\u6C14\u8981\u6E29\u548C\u3001\u79EF\u6781\u3001\u5BCC\u6709\u9F13\u52B1\u6027\u3002`;\r\n\r\n  const messages: ChatMessage[] = [\r\n    {\r\n      role: 'system',\r\n      content: '\u4F60\u662F\u4E00\u4F4D\u6E29\u548C\u3001\u4E13\u4E1A\u7684\u5B66\u4E60\u987E\u95EE\uFF0C\u64C5\u957F\u5206\u6790\u5B66\u4E60\u6570\u636E\u5E76\u7ED9\u51FA\u5EFA\u8BBE\u6027\u7684\u53CD\u9988\u3002',\r\n    },\r\n    {\r\n      role: 'user',\r\n      content: prompt,\r\n    },\r\n  ];\r\n\r\n  return await getChatCompletion(messages, { maxTokens: 2000 });\r\n}\r\n\r\n/**\r\n * \u6E05\u9664 AI \u7F13\u5B58\r\n */\r\nexport function clearAICache() {\r\n  aiService.clearCache();\r\n}\r\n\r\n/**\r\n * AI \u5065\u5EB7\u68C0\u67E5\r\n */\r\nexport async function checkAIHealth() {\r\n  return aiService.healthCheck();\r\n}\r\n\r\n// \u5BFC\u51FA\u7C7B\u578B\r\nexport type { ChatMessage, ChatCompletionOptions };\r\n", "// backend/src/routes/quiz.ts\r\nimport {Router, Response, Request} from 'express';\r\nimport {authMiddleware} from '../middleware/auth';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport UserProgress from '../models/UserProgress';\r\nimport {IUser} from '../models/User';\r\n\r\nconst router = Router();\r\n\r\n// \u83B7\u53D6\u6307\u5B9A\u77E5\u8BC6\u70B9\u7684\u6D4B\u9A8C\u9898\uFF08\u4E0D\u5305\u542B\u6B63\u786E\u7B54\u6848\uFF09\r\nrouter.get('/:pointId', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const {pointId} = req.params;\r\n        const knowledgePoint = await KnowledgePoint.findOne({id: pointId});\r\n\r\n        if (!knowledgePoint) {\r\n            return res.status(404).json({message: '\u77E5\u8BC6\u70B9\u4E0D\u5B58\u5728'});\r\n        }\r\n\r\n        // \u79FB\u9664\u6B63\u786E\u7B54\u6848\uFF0C\u9632\u6B62\u4F5C\u5F0A\r\n        const quizWithoutAnswers = knowledgePoint.quiz.map(q => ({\r\n            question: q.question,\r\n            type: q.type,\r\n            options: q.options,\r\n        }));\r\n\r\n        res.json({\r\n            pointId: knowledgePoint.id,\r\n            title: knowledgePoint.title,\r\n            quiz: quizWithoutAnswers,\r\n        });\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u6D4B\u9A8C\u9898\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u83B7\u53D6\u6D4B\u9A8C\u9898\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\n// \u63D0\u4EA4\u6D4B\u9A8C\u7B54\u6848\r\nrouter.post('/submit', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const {pointId, answers} = req.body;\r\n        const user = req.user as IUser;\r\n        const userId = user._id;\r\n\r\n        if (!userId) {\r\n            return res.status(401).json({message: '\u672A\u6388\u6743'});\r\n        }\r\n\r\n        const knowledgePoint = await KnowledgePoint.findOne({id: pointId});\r\n        if (!knowledgePoint) {\r\n            return res.status(404).json({message: '\u77E5\u8BC6\u70B9\u4E0D\u5B58\u5728'});\r\n        }\r\n\r\n        // \u8BA1\u7B97\u5206\u6570\r\n        let correctCount = 0;\r\n        const results = knowledgePoint.quiz.map((question, index) => {\r\n            const userAnswer = answers[index];\r\n            const isCorrect = JSON.stringify(userAnswer) === JSON.stringify(question.correctAnswer);\r\n            if (isCorrect) correctCount++;\r\n\r\n            return {\r\n                questionIndex: index,\r\n                isCorrect,\r\n                correctAnswer: question.correctAnswer,\r\n                explanation: question.explanation,\r\n            };\r\n        });\r\n\r\n        const score = Math.round((correctCount / knowledgePoint.quiz.length) * 100);\r\n        const passed = score >= 60; // 60\u5206\u53CA\u683C\r\n\r\n        // \u66F4\u65B0\u7528\u6237\u8FDB\u5EA6\r\n        const updateData: any = {\r\n            $inc: {quizAttempts: 1},\r\n            $max: {bestScore: score},\r\n            $set: {\r\n                status: passed ? 'completed' : 'in_progress',\r\n                lastAttemptAt: new Date(),\r\n            },\r\n        };\r\n        \r\n        // \u5982\u679C\u9996\u6B21\u5B8C\u6210\uFF0C\u8BBE\u7F6E\u5B8C\u6210\u65F6\u95F4\r\n        if (passed) {\r\n            updateData.$setOnInsert = { completedAt: new Date() };\r\n        }\r\n        \r\n        const progress = await UserProgress.findOneAndUpdate(\r\n            {userId, pointId},\r\n            updateData,\r\n            {upsert: true, new: true}\r\n        );\r\n\r\n        res.json({\r\n            score,\r\n            passed,\r\n            correctCount,\r\n            totalQuestions: knowledgePoint.quiz.length,\r\n            results,\r\n            progress: {\r\n                status: progress.status,\r\n                attempts: progress.quizAttempts,\r\n                bestScore: progress.bestScore,\r\n            },\r\n        });\r\n    } catch (error) {\r\n        console.error('\u63D0\u4EA4\u6D4B\u9A8C\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u63D0\u4EA4\u6D4B\u9A8C\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\nexport default router;\r\n\r\n\r\n", "// backend/src/routes/assessment.ts\r\nimport {Router, Response, Request} from 'express';\r\nimport {authMiddleware} from '../middleware/auth';\r\nimport Assessment from '../models/Assessment';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\n\r\nconst router = Router();\r\n\r\n// \u83B7\u53D6\u521D\u59CB\u8BC4\u4F30\u9898\u76EE\r\nrouter.post('/start', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n\r\n        // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5DF2\u7ECF\u5B8C\u6210\u8BC4\u4F30\r\n        const existingAssessment = await Assessment.findOne({userId});\r\n        if (existingAssessment) {\r\n            return res.status(400).json({\r\n                message: '\u60A8\u5DF2\u7ECF\u5B8C\u6210\u4E86\u521D\u59CB\u8BC4\u4F30',\r\n                assessment: existingAssessment,\r\n            });\r\n        }\r\n\r\n        // \u4ECE\u5404\u4E2A\u5B66\u79D1\u9886\u57DF\u9009\u53D6\u9898\u76EE\uFF08\u6BCF\u4E2A\u9886\u57DF2-3\u9898\uFF09\r\n        const subjects = ['\u7F16\u7A0B\u57FA\u7840', '\u6570\u636E\u7ED3\u6784', '\u7B97\u6CD5', '\u8BA1\u7B97\u673A\u7F51\u7EDC', '\u64CD\u4F5C\u7CFB\u7EDF'];\r\n        const assessmentQuestions = [];\r\n\r\n        for (const subject of subjects) {\r\n            const points = await KnowledgePoint.find({\r\n                subject,\r\n                'quiz.0': {$exists: true}, // \u786E\u4FDD\u6709\u6D4B\u9A8C\u9898\r\n            }).limit(3);\r\n\r\n            for (const point of points) {\r\n                // \u6BCF\u4E2A\u77E5\u8BC6\u70B9\u90091-2\u9053\u9898\r\n                const selectedQuestions = point.quiz.slice(0, 2).map(q => ({\r\n                    pointId: point.id,\r\n                    subject: point.subject,\r\n                    difficulty: point.difficulty,\r\n                    question: q.question,\r\n                    type: q.type,\r\n                    options: q.options,\r\n                    // \u4E0D\u53D1\u9001\u6B63\u786E\u7B54\u6848\r\n                }));\r\n                assessmentQuestions.push(...selectedQuestions);\r\n            }\r\n        }\r\n\r\n        // \u6253\u4E71\u9898\u76EE\u987A\u5E8F\r\n        assessmentQuestions.sort(() => Math.random() - 0.5);\r\n\r\n        // \u9650\u5236\u603B\u9898\u6570\u4E3A15\u9898\r\n        const finalQuestions = assessmentQuestions.slice(0, 15);\r\n\r\n        res.json({\r\n            totalQuestions: finalQuestions.length,\r\n            questions: finalQuestions,\r\n        });\r\n    } catch (error) {\r\n        console.error('\u5F00\u59CB\u8BC4\u4F30\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u5F00\u59CB\u8BC4\u4F30\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\n// \u63D0\u4EA4\u8BC4\u4F30\u7B54\u6848\u5E76\u751F\u6210\u62A5\u544A\r\nrouter.post('/submit', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const {answers} = req.body; // answers: [{pointId, questionIndex, answer}]\r\n        const userId = req.user?._id;\r\n\r\n        if (!userId) {\r\n            return res.status(401).json({message: '\u672A\u6388\u6743'});\r\n        }\r\n\r\n        // \u8BA1\u7B97\u5206\u6570\u548C\u80FD\u529B\u753B\u50CF\r\n        const subjectScores: Record<string, {correct: number; total: number}> = {};\r\n        let totalCorrect = 0;\r\n\r\n        for (const answer of answers) {\r\n            const point = await KnowledgePoint.findOne({id: answer.pointId});\r\n            if (!point) continue;\r\n\r\n            const question = point.quiz[answer.questionIndex];\r\n            if (!question) continue;\r\n\r\n            const isCorrect = JSON.stringify(answer.answer) === JSON.stringify(question.correctAnswer);\r\n            if (isCorrect) totalCorrect++;\r\n\r\n            // \u7EDF\u8BA1\u5404\u5B66\u79D1\u5F97\u5206\r\n            if (!subjectScores[point.subject]) {\r\n                subjectScores[point.subject] = {correct: 0, total: 0};\r\n            }\r\n            subjectScores[point.subject].total++;\r\n            if (isCorrect) subjectScores[point.subject].correct++;\r\n        }\r\n\r\n        // \u751F\u6210\u80FD\u529B\u753B\u50CF\r\n        const skillProfile = Object.entries(subjectScores).map(([subject, scores]) => ({\r\n            subject,\r\n            level: Math.round((scores.correct / scores.total) * 100),\r\n        }));\r\n\r\n        // \u8BC6\u522B\u5F31\u9879\uFF08\u5F97\u5206\u7387<60%\u7684\u5B66\u79D1\uFF09\r\n        const weaknesses = skillProfile\r\n            .filter(skill => skill.level < 60)\r\n            .map(skill => {\r\n                // \u627E\u5230\u8BE5\u5B66\u79D1\u7684\u63A8\u8350\u77E5\u8BC6\u70B9\r\n                const recommendedPoints: string[] = [];\r\n                // \u8FD9\u91CC\u7B80\u5316\u5904\u7406\uFF0C\u5B9E\u9645\u5E94\u8BE5\u6839\u636E\u5177\u4F53\u9519\u9898\u5206\u6790\r\n                return {\r\n                    subject: skill.subject,\r\n                    reason: `\u5728${skill.subject}\u9886\u57DF\u7684\u6D4B\u8BC4\u4E2D\u5F97\u5206\u7387\u4E3A${skill.level}%\uFF0C\u5EFA\u8BAE\u52A0\u5F3A\u5B66\u4E60\u3002`,\r\n                    recommendedPoints,\r\n                };\r\n            });\r\n\r\n        const score = Math.round((totalCorrect / answers.length) * 100);\r\n\r\n        // \u4FDD\u5B58\u8BC4\u4F30\u7ED3\u679C\r\n        const assessment = new Assessment({\r\n            userId,\r\n            totalQuestions: answers.length,\r\n            correctAnswers: totalCorrect,\r\n            score,\r\n            skillProfile,\r\n            weaknesses,\r\n            recommendedPath: [], // \u63A8\u8350\u8DEF\u5F84\u5C06\u7531learning-path API\u751F\u6210\r\n        });\r\n\r\n        await assessment.save();\r\n\r\n        res.json({\r\n            score,\r\n            correctAnswers: totalCorrect,\r\n            totalQuestions: answers.length,\r\n            skillProfile,\r\n            weaknesses,\r\n            message: '\u8BC4\u4F30\u5B8C\u6210\uFF01\u6211\u4EEC\u5DF2\u4E3A\u60A8\u751F\u6210\u4E13\u5C5E\u5B66\u4E60\u8DEF\u5F84\u3002',\r\n        });\r\n    } catch (error) {\r\n        console.error('\u63D0\u4EA4\u8BC4\u4F30\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u63D0\u4EA4\u8BC4\u4F30\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\n// \u83B7\u53D6\u8BC4\u4F30\u7ED3\u679C\r\nrouter.get('/result', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const assessment = await Assessment.findOne({userId});\r\n\r\n        if (!assessment) {\r\n            return res.status(404).json({message: '\u672A\u627E\u5230\u8BC4\u4F30\u7ED3\u679C\uFF0C\u8BF7\u5148\u5B8C\u6210\u521D\u59CB\u8BC4\u4F30'});\r\n        }\r\n\r\n        res.json(assessment);\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u8BC4\u4F30\u7ED3\u679C\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u83B7\u53D6\u8BC4\u4F30\u7ED3\u679C\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\nexport default router;\r\n\r\n\r\n", "// backend/src/models/Assessment.ts\r\nimport mongoose, { Schema, model, Document, Types } from 'mongoose';\r\n\r\n// \u7528\u6237\u80FD\u529B\u753B\u50CF\r\nexport interface ISkillProfile {\r\n    subject: string; // \u5B66\u79D1\u9886\u57DF\uFF08\u5982\uFF1A\u7F16\u7A0B\u57FA\u7840\u3001\u6570\u636E\u7ED3\u6784\u3001\u7B97\u6CD5\uFF09\r\n    level: number; // \u80FD\u529B\u7B49\u7EA7 0-100\r\n}\r\n\r\n// \u5F31\u9879\u5206\u6790\r\nexport interface IWeakness {\r\n    subject: string;\r\n    reason: string; // \u5206\u6790\u539F\u56E0\r\n    recommendedPoints: string[]; // \u63A8\u8350\u5B66\u4E60\u7684\u77E5\u8BC6\u70B9ID\r\n}\r\n\r\nexport interface IAssessment extends Document {\r\n    userId: Types.ObjectId;\r\n    completedAt: Date;\r\n    totalQuestions: number;\r\n    correctAnswers: number;\r\n    score: number; // \u603B\u5206\r\n    skillProfile: ISkillProfile[];\r\n    weaknesses: IWeakness[];\r\n    recommendedPath: string[]; // \u63A8\u8350\u5B66\u4E60\u8DEF\u5F84\uFF08\u77E5\u8BC6\u70B9ID\u6570\u7EC4\uFF09\r\n}\r\n\r\nconst SkillProfileSchema = new Schema<ISkillProfile>({\r\n    subject: {type: String, required: true},\r\n    level: {type: Number, required: true, min: 0, max: 100},\r\n}, {_id: false});\r\n\r\nconst WeaknessSchema = new Schema<IWeakness>({\r\n    subject: {type: String, required: true},\r\n    reason: {type: String, required: true},\r\n    recommendedPoints: [{type: String}],\r\n}, {_id: false});\r\n\r\nconst AssessmentSchema = new Schema<IAssessment>({\r\n    userId: {type: Schema.Types.ObjectId, ref: 'User', required: true, unique: true},\r\n    completedAt: {type: Date, default: Date.now},\r\n    totalQuestions: {type: Number, required: true},\r\n    correctAnswers: {type: Number, required: true},\r\n    score: {type: Number, required: true, min: 0, max: 100},\r\n    skillProfile: {type: [SkillProfileSchema], required: true},\r\n    weaknesses: {type: [WeaknessSchema], default: []},\r\n    recommendedPath: [{type: String}],\r\n}, {\r\n    timestamps: true,\r\n});\r\n\r\nconst Assessment = (mongoose.models.Assessment as mongoose.Model<IAssessment>) || model<IAssessment>('Assessment', AssessmentSchema);\r\n\r\nexport default Assessment;\r\n\r\n\r\n", "// backend/src/routes/learning-path.ts\r\nimport {Router, Response, Request} from 'express';\r\nimport {authMiddleware} from '../middleware/auth';\r\nimport {canUnlockPoint} from '../utils/pathRecommender';\r\nimport {generateIntelligentPath} from '../utils/intelligentPathRecommender';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport {IUser} from '../models/User';\r\nimport { Types } from 'mongoose';\r\n\r\nconst router = Router();\r\n\r\n// \u83B7\u53D6\u63A8\u8350\u5B66\u4E60\u8DEF\u5F84 (\u667A\u80FD\u7248\u672C)\r\nrouter.get('/recommend', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const user = req.user as IUser;\r\n        const userId = user._id;\r\n\r\n        if (!userId) {\r\n            return res.status(401).json({message: '\u672A\u6388\u6743'});\r\n        }\r\n\r\n        // \u4F7F\u7528\u667A\u80FD\u63A8\u8350\u7B97\u6CD5\r\n        const intelligentPath = await generateIntelligentPath(userId);\r\n\r\n        // \u83B7\u53D6\u524D10\u4E2A\u63A8\u8350\r\n        const topRecommendations = intelligentPath.slice(0, 10);\r\n\r\n        // \u83B7\u53D6\u8BE6\u7EC6\u4FE1\u606F\uFF08\u53EA\u67E5\u8BE2\u5FC5\u8981\u5B57\u6BB5\uFF09\r\n        const detailedRecommendations = await Promise.all(\r\n            topRecommendations.map(async (rec) => {\r\n                const point = await KnowledgePoint.findOne({id: rec.pointId})\r\n                    .select('title subject difficulty estimatedTime')\r\n                    .lean();\r\n                return {\r\n                    ...rec,\r\n                    title: point?.title,\r\n                    subject: point?.subject,\r\n                };\r\n            })\r\n        );\r\n\r\n        res.json({\r\n            recommendations: detailedRecommendations,\r\n            totalCount: intelligentPath.length,\r\n        });\r\n    } catch (error) {\r\n        console.error('\u751F\u6210\u63A8\u8350\u8DEF\u5F84\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u751F\u6210\u63A8\u8350\u8DEF\u5F84\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\n// \u68C0\u67E5\u77E5\u8BC6\u70B9\u662F\u5426\u53EF\u89E3\u9501\r\nrouter.post('/unlock-check', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const {pointId} = req.body;\r\n        const user = req.user as IUser;\r\n        const userId = user._id;\r\n\r\n        if (!userId) {\r\n            return res.status(401).json({message: '\u672A\u6388\u6743'});\r\n        }\r\n\r\n        const unlockStatus = await canUnlockPoint(userId, pointId);\r\n\r\n        if (unlockStatus.canUnlock) {\r\n            res.json({\r\n                canUnlock: true,\r\n                message: '\u53EF\u4EE5\u5F00\u59CB\u5B66\u4E60',\r\n            });\r\n        } else {\r\n            // \u83B7\u53D6\u7F3A\u5931\u524D\u7F6E\u8BFE\u7A0B\u7684\u8BE6\u7EC6\u4FE1\u606F\uFF08\u53EA\u67E5\u8BE2\u5FC5\u8981\u5B57\u6BB5\uFF09\r\n            const missingPoints = await KnowledgePoint.find({\r\n                id: {$in: unlockStatus.missingPrerequisites},\r\n            })\r\n                .select('id title subject')\r\n                .lean();\r\n\r\n            res.json({\r\n                canUnlock: false,\r\n                message: '\u9700\u8981\u5148\u5B8C\u6210\u524D\u7F6E\u8BFE\u7A0B',\r\n                missingPrerequisites: missingPoints.map(p => ({\r\n                    id: p.id,\r\n                    title: p.title,\r\n                    subject: p.subject,\r\n                })),\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error('\u68C0\u67E5\u89E3\u9501\u72B6\u6001\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u68C0\u67E5\u89E3\u9501\u72B6\u6001\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\nexport default router;\r\n\r\n\r\n", "// backend/src/utils/pathRecommender.ts\r\nimport KnowledgePoint, {IKnowledgePoint} from '../models/KnowledgePoint';\r\nimport Assessment, {IAssessment} from '../models/Assessment';\r\nimport UserProgress, {IUserProgress} from '../models/UserProgress';\r\nimport {Types} from 'mongoose';\r\n\r\ninterface RecommendedPoint {\r\n    pointId: string;\r\n    priority: number;\r\n    reason: string;\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u63A8\u8350\u5B66\u4E60\u8DEF\u5F84\r\n * @param userId \u7528\u6237ID\r\n * @returns \u63A8\u8350\u7684\u77E5\u8BC6\u70B9ID\u6570\u7EC4\uFF08\u6309\u4F18\u5148\u7EA7\u6392\u5E8F\uFF09\r\n */\r\nexport async function generateRecommendedPath(userId: Types.ObjectId): Promise<RecommendedPoint[]> {\r\n    // 1. \u83B7\u53D6\u7528\u6237\u8BC4\u4F30\u7ED3\u679C\r\n    const assessment = await Assessment.findOne({userId});\r\n    if (!assessment) {\r\n        // \u5982\u679C\u6CA1\u6709\u8BC4\u4F30\uFF0C\u8FD4\u56DE\u57FA\u7840\u8DEF\u5F84\r\n        return await getDefaultPath();\r\n    }\r\n\r\n    // 2. \u83B7\u53D6\u6240\u6709\u77E5\u8BC6\u70B9\uFF08\u53EA\u67E5\u8BE2\u5FC5\u8981\u5B57\u6BB5\uFF0C\u63D0\u5347\u6027\u80FD\uFF09\r\n    const allPoints = await KnowledgePoint.find({})\r\n        .select('id title subject difficulty prerequisites')\r\n        .lean();\r\n\r\n    // 3. \u83B7\u53D6\u7528\u6237\u8FDB\u5EA6\r\n    const userProgress = await UserProgress.find({userId});\r\n    const completedPointIds = new Set(\r\n        userProgress.filter(p => p.status === 'completed').map(p => p.pointId)\r\n    );\r\n\r\n    // 4. \u8FC7\u6EE4\u5DF2\u5B8C\u6210\u7684\u77E5\u8BC6\u70B9\r\n    const uncompletedPoints = allPoints.filter(p => !completedPointIds.has(p.id));\r\n\r\n    // 5. \u4E3A\u6BCF\u4E2A\u77E5\u8BC6\u70B9\u8BA1\u7B97\u63A8\u8350\u4F18\u5148\u7EA7\r\n    const pointsWithPriority = uncompletedPoints.map(point => {\r\n        let priority = 50; // \u57FA\u7840\u4F18\u5148\u7EA7\r\n        let reason = '\u63A8\u8350\u5B66\u4E60';\r\n\r\n        // 5.1 \u6839\u636E\u5F31\u9879\u63D0\u9AD8\u4F18\u5148\u7EA7\r\n        const weakness = assessment.weaknesses.find(w => w.subject === point.subject);\r\n        if (weakness) {\r\n            priority += 30;\r\n            reason = `\u5F3A\u5316${point.subject}\u5F31\u9879`;\r\n        }\r\n\r\n        // 5.2 \u6839\u636E\u7528\u6237\u80FD\u529B\u8C03\u6574\u4F18\u5148\u7EA7\uFF08\u5339\u914D\u96BE\u5EA6\uFF09\r\n        const skillLevel = assessment.skillProfile.find(s => s.subject === point.subject)?.level || 50;\r\n        const difficultyMatch = 100 - Math.abs(skillLevel - point.difficulty * 20);\r\n        priority += difficultyMatch * 0.2;\r\n\r\n        // 5.3 \u68C0\u67E5\u524D\u7F6E\u4F9D\u8D56\u662F\u5426\u5B8C\u6210\r\n        const prerequisitesCompleted = point.prerequisites.every(preId =>\r\n            completedPointIds.has(preId)\r\n        );\r\n        if (!prerequisitesCompleted) {\r\n            priority -= 50; // \u524D\u7F6E\u4F9D\u8D56\u672A\u5B8C\u6210\uFF0C\u964D\u4F4E\u4F18\u5148\u7EA7\r\n            reason = '\u9700\u8981\u5148\u5B8C\u6210\u524D\u7F6E\u8BFE\u7A0B';\r\n        }\r\n\r\n        // 5.4 \u4F18\u5148\u63A8\u8350\u57FA\u7840\u96BE\u5EA6\u7684\u8BFE\u7A0B\r\n        if (point.difficulty <= 2) {\r\n            priority += 10;\r\n        }\r\n\r\n        return {\r\n            pointId: point.id,\r\n            priority,\r\n            reason,\r\n            prerequisites: point.prerequisites,\r\n            difficulty: point.difficulty,\r\n            subject: point.subject,\r\n        };\r\n    });\r\n\r\n    // 6. \u62D3\u6251\u6392\u5E8F + \u4F18\u5148\u7EA7\u6392\u5E8F\r\n    const sortedPath = topologicalSortWithPriority(pointsWithPriority, allPoints);\r\n\r\n    return sortedPath;\r\n}\r\n\r\n/**\r\n * \u62D3\u6251\u6392\u5E8F + \u4F18\u5148\u7EA7\u52A0\u6743\r\n */\r\nfunction topologicalSortWithPriority(\r\n    points: any[],\r\n    allPoints: IKnowledgePoint[]\r\n): RecommendedPoint[] {\r\n    const pointMap = new Map(allPoints.map(p => [p.id, p]));\r\n    const result: RecommendedPoint[] = [];\r\n    const visited = new Set<string>();\r\n\r\n    // \u6309\u4F18\u5148\u7EA7\u6392\u5E8F\r\n    const sortedByPriority = [...points].sort((a, b) => b.priority - a.priority);\r\n\r\n    for (const point of sortedByPriority) {\r\n        if (!visited.has(point.pointId)) {\r\n            dfs(point.pointId, pointMap, visited, result, points);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction dfs(\r\n    pointId: string,\r\n    pointMap: Map<string, IKnowledgePoint>,\r\n    visited: Set<string>,\r\n    result: RecommendedPoint[],\r\n    priorityPoints: any[]\r\n) {\r\n    visited.add(pointId);\r\n\r\n    const point = pointMap.get(pointId);\r\n    if (!point) return;\r\n\r\n    // \u5148\u5904\u7406\u524D\u7F6E\u4F9D\u8D56\r\n    for (const preId of point.prerequisites) {\r\n        if (!visited.has(preId)) {\r\n            dfs(preId, pointMap, visited, result, priorityPoints);\r\n        }\r\n    }\r\n\r\n    // \u6DFB\u52A0\u5F53\u524D\u8282\u70B9\r\n    const priorityInfo = priorityPoints.find(p => p.pointId === pointId);\r\n    if (priorityInfo) {\r\n        result.push({\r\n            pointId: priorityInfo.pointId,\r\n            priority: priorityInfo.priority,\r\n            reason: priorityInfo.reason,\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u9ED8\u8BA4\u5B66\u4E60\u8DEF\u5F84\uFF08\u672A\u5B8C\u6210\u8BC4\u4F30\u65F6\uFF09\r\n */\r\nasync function getDefaultPath(): Promise<RecommendedPoint[]> {\r\n    const allPoints = await KnowledgePoint.find({})\r\n        .select('id difficulty')\r\n        .sort({difficulty: 1})\r\n        .lean();\r\n\r\n    return allPoints.map((point, index) => ({\r\n        pointId: point.id,\r\n        priority: 100 - index,\r\n        reason: '\u6309\u57FA\u7840\u5230\u8FDB\u9636\u987A\u5E8F\u63A8\u8350',\r\n    }));\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u77E5\u8BC6\u70B9\u662F\u5426\u53EF\u4EE5\u89E3\u9501\r\n */\r\nexport async function canUnlockPoint(\r\n    userId: Types.ObjectId,\r\n    pointId: string\r\n): Promise<{canUnlock: boolean; missingPrerequisites: string[]}> {\r\n    const point = await KnowledgePoint.findOne({id: pointId})\r\n        .select('prerequisites')\r\n        .lean();\r\n    if (!point) {\r\n        return {canUnlock: false, missingPrerequisites: []};\r\n    }\r\n\r\n    if (point.prerequisites.length === 0) {\r\n        return {canUnlock: true, missingPrerequisites: []};\r\n    }\r\n\r\n    const userProgress = await UserProgress.find({\r\n        userId,\r\n        pointId: {$in: point.prerequisites},\r\n    });\r\n\r\n    const completedPrerequisites = new Set(\r\n        userProgress.filter(p => p.status === 'completed').map(p => p.pointId)\r\n    );\r\n\r\n    const missingPrerequisites = point.prerequisites.filter(\r\n        preId => !completedPrerequisites.has(preId)\r\n    );\r\n\r\n    return {\r\n        canUnlock: missingPrerequisites.length === 0,\r\n        missingPrerequisites,\r\n    };\r\n}\r\n\r\n\r\n", "// backend/src/utils/intelligentPathRecommender.ts\r\n// AI\u589E\u5F3A\u7248\u5B66\u4E60\u8DEF\u5F84\u63A8\u8350\u7CFB\u7EDF\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport Assessment from '../models/Assessment';\r\nimport UserProgress from '../models/UserProgress';\r\nimport StudySession from '../models/StudySession';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport {Types} from 'mongoose';\r\n\r\ninterface IntelligentRecommendation {\r\n    pointId: string;\r\n    priority: number;\r\n    reason: string;\r\n    predictedSuccessRate: number;  // \u9884\u6D4B\u6210\u529F\u7387 (0-100)\r\n    estimatedTime: number;          // \u9884\u4F30\u5B66\u4E60\u65F6\u957F(\u5206\u949F)\r\n    difficulty: number;             // \u96BE\u5EA6(1-5)\r\n    urgency: number;                // \u7D27\u6025\u7A0B\u5EA6(0-100)\r\n}\r\n\r\n/**\r\n * AI\u589E\u5F3A\u7248\u8DEF\u5F84\u63A8\u8350\r\n * \u8003\u8651\u591A\u7EF4\u5EA6\u56E0\u7D20\uFF1A\u5B66\u4E60\u5386\u53F2\u3001\u9519\u9898\u7387\u3001\u65F6\u95F4\u5206\u5E03\u3001\u5B66\u4E60\u72B6\u6001\u7B49\r\n */\r\nexport async function generateIntelligentPath(\r\n    userId: Types.ObjectId\r\n): Promise<IntelligentRecommendation[]> {\r\n    // 1. \u83B7\u53D6\u7528\u6237\u5168\u65B9\u4F4D\u6570\u636E\r\n    const [assessment, allPoints, userProgress, studySessions, wrongQuestions] = await Promise.all([\r\n        Assessment.findOne({userId}),\r\n        KnowledgePoint.find({}).select('id title subject difficulty prerequisites estimatedTime').lean(),\r\n        UserProgress.find({userId}).lean(),\r\n        StudySession.find({userId}).sort({startTime: -1}).limit(100).lean(),\r\n        WrongQuestion.find({userId}).lean()\r\n    ]);\r\n\r\n    // 2. \u8BA1\u7B97\u7528\u6237\u5B66\u4E60\u80FD\u529B\u6307\u6807\r\n    const learningMetrics = calculateLearningMetrics(userProgress, studySessions, wrongQuestions);\r\n\r\n    // 3. \u8FC7\u6EE4\u5DF2\u5B8C\u6210\u7684\u77E5\u8BC6\u70B9\r\n    const completedPointIds = new Set(\r\n        userProgress.filter(p => p.status === 'completed').map(p => p.pointId)\r\n    );\r\n    const uncompletedPoints = allPoints.filter(p => !completedPointIds.has(p.id));\r\n\r\n    // 4. \u4E3A\u6BCF\u4E2A\u77E5\u8BC6\u70B9\u8BA1\u7B97\u667A\u80FD\u63A8\u8350\u5206\u6570\r\n    const recommendations: IntelligentRecommendation[] = uncompletedPoints.map(point => {\r\n        return calculateIntelligentPriority(\r\n            point,\r\n            assessment,\r\n            learningMetrics,\r\n            completedPointIds,\r\n            userProgress,\r\n            wrongQuestions,\r\n            allPoints\r\n        );\r\n    });\r\n\r\n    // 5. \u62D3\u6251\u6392\u5E8F + \u591A\u7EF4\u5EA6\u6392\u5E8F\r\n    const sortedRecommendations = intelligentSort(recommendations, allPoints);\r\n\r\n    // 6. \u53EA\u8FD4\u56DE\u524D50\u4E2A\u63A8\u8350\r\n    return sortedRecommendations.slice(0, 50);\r\n}\r\n\r\n/**\r\n * \u8BA1\u7B97\u7528\u6237\u5B66\u4E60\u80FD\u529B\u6307\u6807\r\n */\r\nfunction calculateLearningMetrics(\r\n    userProgress: any[],\r\n    studySessions: any[],\r\n    wrongQuestions: any[]\r\n) {\r\n    const totalCompleted = userProgress.filter(p => p.status === 'completed').length;\r\n    const totalTime = studySessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n    const avgTimePerPoint = totalCompleted > 0 ? totalTime / totalCompleted : 0;\r\n\r\n    // \u8BA1\u7B97\u5E73\u5747\u6D4B\u9A8C\u6210\u7EE9\r\n    const scoresAvg = userProgress\r\n        .filter(p => p.score !== undefined)\r\n        .reduce((sum, p, _, arr) => sum + p.score! / arr.length, 0);\r\n\r\n    // \u8BA1\u7B97\u9519\u9898\u7387\r\n    const totalQuestions = userProgress.filter(p => p.score !== undefined).length * 10; // \u5047\u8BBE\u6BCF\u4E2A\u6D4B\u9A8C10\u9898\r\n    const errorRate = totalQuestions > 0 ? (wrongQuestions.length / totalQuestions) * 100 : 50;\r\n\r\n    // \u8BA1\u7B97\u5B66\u4E60\u901F\u5EA6 (\u77E5\u8BC6\u70B9/\u5C0F\u65F6)\r\n    const learningSpeed = totalTime > 0 ? (totalCompleted / (totalTime / 3600)) : 1;\r\n\r\n    // \u83B7\u53D6\u6700\u8FD1\u5B66\u4E60\u65F6\u95F4\r\n    const lastStudyTime = studySessions.length > 0 ? studySessions[0].startTime : null;\r\n    const daysSinceLastStudy = lastStudyTime \r\n        ? Math.floor((Date.now() - new Date(lastStudyTime).getTime()) / (1000 * 60 * 60 * 24))\r\n        : 999;\r\n\r\n    return {\r\n        totalCompleted,\r\n        avgTimePerPoint,\r\n        scoresAvg,\r\n        errorRate,\r\n        learningSpeed,\r\n        daysSinceLastStudy\r\n    };\r\n}\r\n\r\n/**\r\n * \u8BA1\u7B97\u5355\u4E2A\u77E5\u8BC6\u70B9\u7684\u667A\u80FD\u63A8\u8350\u4F18\u5148\u7EA7\r\n */\r\nfunction calculateIntelligentPriority(\r\n    point: any,\r\n    assessment: any,\r\n    learningMetrics: any,\r\n    completedPointIds: Set<string>,\r\n    userProgress: any[],\r\n    wrongQuestions: any[],\r\n    allPoints: any[]\r\n): IntelligentRecommendation {\r\n    let priority = 50;\r\n    let reason = '\u63A8\u8350\u5B66\u4E60';\r\n    let predictedSuccessRate = 70; // \u9ED8\u8BA470%\u6210\u529F\u7387\r\n    let urgency = 50;\r\n\r\n    // 1. \u68C0\u67E5\u524D\u7F6E\u4F9D\u8D56\r\n    const prerequisitesCompleted = point.prerequisites.every((preId: string) =>\r\n        completedPointIds.has(preId)\r\n    );\r\n\r\n    if (!prerequisitesCompleted) {\r\n        priority -= 100; // \u524D\u7F6E\u672A\u5B8C\u6210\uFF0C\u5927\u5E45\u964D\u4F4E\u4F18\u5148\u7EA7\r\n        reason = '\u9700\u8981\u5148\u5B8C\u6210\u524D\u7F6E\u8BFE\u7A0B';\r\n        predictedSuccessRate = 20;\r\n    }\r\n\r\n    // 2. \u6839\u636E\u8BC4\u4F30\u7ED3\u679C\u8C03\u6574\r\n    if (assessment) {\r\n        // 2.1 \u5F31\u9879\u79D1\u76EE\u4F18\u5148\r\n        const weakness = assessment.weaknesses?.find((w: any) => w.subject === point.subject);\r\n        if (weakness) {\r\n            priority += 40;\r\n            urgency += 30;\r\n            reason = `\u5F3A\u5316${point.subject}\u5F31\u9879`;\r\n        }\r\n\r\n        // 2.2 \u80FD\u529B\u5339\u914D\u5EA6\r\n        const skillLevel = assessment.skillProfile?.find((s: any) => s.subject === point.subject)?.level || 50;\r\n        const difficultyScore = point.difficulty * 20; // 1-5 => 20-100\r\n        const matchScore = 100 - Math.abs(skillLevel - difficultyScore);\r\n        priority += matchScore * 0.3;\r\n\r\n        // \u9884\u6D4B\u6210\u529F\u7387\uFF1A\u80FD\u529B\u8D8A\u5339\u914D\uFF0C\u6210\u529F\u7387\u8D8A\u9AD8\r\n        if (skillLevel >= difficultyScore + 20) {\r\n            predictedSuccessRate = 90; // \u80FD\u529B\u8FDC\u8D85\u96BE\u5EA6\r\n        } else if (skillLevel >= difficultyScore) {\r\n            predictedSuccessRate = 80; // \u80FD\u529B\u7565\u8D85\u96BE\u5EA6\r\n        } else if (skillLevel >= difficultyScore - 20) {\r\n            predictedSuccessRate = 65; // \u80FD\u529B\u63A5\u8FD1\u96BE\u5EA6\r\n        } else {\r\n            predictedSuccessRate = 40; // \u80FD\u529B\u4E0D\u8DB3\r\n            priority -= 20;\r\n        }\r\n    }\r\n\r\n    // 3. \u6839\u636E\u5B66\u4E60\u5386\u53F2\u8C03\u6574\r\n    // 3.1 \u5B66\u4E60\u901F\u5EA6\u8C03\u6574\r\n    if (learningMetrics.learningSpeed > 2) {\r\n        // \u5B66\u4E60\u901F\u5EA6\u5FEB\uFF0C\u53EF\u4EE5\u6311\u6218\u66F4\u96BE\u7684\r\n        if (point.difficulty >= 3) {\r\n            priority += 15;\r\n        }\r\n    } else if (learningMetrics.learningSpeed < 1) {\r\n        // \u5B66\u4E60\u901F\u5EA6\u6162\uFF0C\u4F18\u5148\u63A8\u8350\u7B80\u5355\u7684\r\n        if (point.difficulty <= 2) {\r\n            priority += 15;\r\n        }\r\n    }\r\n\r\n    // 3.2 \u9519\u9898\u7387\u5F71\u54CD\r\n    const subjectErrors = wrongQuestions.filter((wq: any) => wq.subject === point.subject);\r\n    if (subjectErrors.length > 5) {\r\n        priority += 25; // \u9519\u9898\u591A\uFF0C\u9700\u8981\u5F3A\u5316\r\n        urgency += 20;\r\n        reason = `${point.subject}\u9519\u9898\u8F83\u591A\uFF0C\u5EFA\u8BAE\u5F3A\u5316`;\r\n    }\r\n\r\n    // 3.3 \u5B66\u4E60\u505C\u6EDE\u68C0\u6D4B\r\n    if (learningMetrics.daysSinceLastStudy > 7) {\r\n        // \u8D85\u8FC77\u5929\u672A\u5B66\u4E60\uFF0C\u4F18\u5148\u63A8\u8350\u7B80\u5355\u8BFE\u7A0B\uFF0C\u907F\u514D\u632B\u8D25\u611F\r\n        if (point.difficulty <= 2) {\r\n            priority += 20;\r\n            reason = '\u9002\u5408\u91CD\u65B0\u5F00\u59CB\u7684\u7B80\u5355\u8BFE\u7A0B';\r\n        }\r\n    }\r\n\r\n    // 4. \u57FA\u7840\u8BFE\u7A0B\u4F18\u5148\u7B56\u7565\r\n    if (point.difficulty === 1) {\r\n        priority += 15;\r\n        predictedSuccessRate = Math.min(95, predictedSuccessRate + 15);\r\n    }\r\n\r\n    // 5. \u65F6\u95F4\u6210\u672C\u8003\u8651\r\n    // \u5BF9\u4E8E\u5B66\u4E60\u65F6\u95F4\u7D27\u5F20\u7684\u7528\u6237\uFF0C\u4F18\u5148\u63A8\u8350\u77ED\u65F6\u95F4\u8BFE\u7A0B\r\n    const estimatedTime = point.estimatedTime || 60;\r\n    if (estimatedTime <= 30) {\r\n        priority += 10; // \u77ED\u8BFE\u7A0B\u6709\u4F18\u52BF\r\n    }\r\n\r\n    // 6. \u8FDB\u884C\u4E2D\u7684\u8BFE\u7A0B\u4F18\u5148\u5B8C\u6210\r\n    const inProgress = userProgress.find(\r\n        (p: any) => p.pointId === point.id && p.status === 'in_progress'\r\n    );\r\n    if (inProgress) {\r\n        priority += 50;\r\n        urgency += 40;\r\n        reason = '\u7EE7\u7EED\u5B8C\u6210\u8FDB\u884C\u4E2D\u7684\u8BFE\u7A0B';\r\n    }\r\n\r\n    // 7. \u52A8\u6001\u8C03\u6574\uFF1A\u907F\u514D\u96BE\u5EA6\u7A81\u53D8\r\n    // \u67E5\u627E\u7528\u6237\u6700\u8FD1\u5B8C\u6210\u76843\u4E2A\u8BFE\u7A0B\u7684\u5E73\u5747\u96BE\u5EA6\r\n    const recentCompleted = userProgress\r\n        .filter((p: any) => p.status === 'completed')\r\n        .slice(-3);\r\n    \r\n    if (recentCompleted.length > 0) {\r\n        const avgRecentDifficulty = recentCompleted.reduce((sum, p) => {\r\n            const kp = allPoints.find((ap: any) => ap.id === p.pointId);\r\n            return sum + (kp?.difficulty || 3);\r\n        }, 0) / recentCompleted.length;\r\n\r\n        const difficultyGap = Math.abs(point.difficulty - avgRecentDifficulty);\r\n        if (difficultyGap > 2) {\r\n            priority -= 15; // \u96BE\u5EA6\u8DF3\u8DC3\u8FC7\u5927\uFF0C\u964D\u4F4E\u4F18\u5148\u7EA7\r\n            predictedSuccessRate -= 10;\r\n        } else if (difficultyGap <= 0.5) {\r\n            priority += 10; // \u96BE\u5EA6\u8854\u63A5\u5E73\u6ED1\uFF0C\u63D0\u5347\u4F18\u5148\u7EA7\r\n        }\r\n    }\r\n\r\n    return {\r\n        pointId: point.id,\r\n        priority: Math.round(priority),\r\n        reason,\r\n        predictedSuccessRate: Math.max(10, Math.min(95, Math.round(predictedSuccessRate))),\r\n        estimatedTime,\r\n        difficulty: point.difficulty,\r\n        urgency: Math.max(0, Math.min(100, Math.round(urgency)))\r\n    };\r\n}\r\n\r\n/**\r\n * \u667A\u80FD\u6392\u5E8F\uFF1A\u7EFC\u5408\u4F18\u5148\u7EA7\u3001\u7D27\u6025\u7A0B\u5EA6\u3001\u9884\u6D4B\u6210\u529F\u7387\r\n */\r\nfunction intelligentSort(\r\n    recommendations: IntelligentRecommendation[],\r\n    allPoints: any[]\r\n): IntelligentRecommendation[] {\r\n    const pointMap = new Map(allPoints.map(p => [p.id, p]));\r\n    const result: IntelligentRecommendation[] = [];\r\n    const visited = new Set<string>();\r\n\r\n    // \u8BA1\u7B97\u7EFC\u5408\u5F97\u5206\uFF1A\u4F18\u5148\u7EA7 * 0.5 + \u7D27\u6025\u7A0B\u5EA6 * 0.3 + \u6210\u529F\u7387 * 0.2\r\n    const withScore = recommendations.map(rec => ({\r\n        ...rec,\r\n        compositeScore: rec.priority * 0.5 + rec.urgency * 0.3 + rec.predictedSuccessRate * 0.2\r\n    }));\r\n\r\n    // \u6309\u7EFC\u5408\u5F97\u5206\u6392\u5E8F\r\n    const sortedByScore = withScore.sort((a, b) => b.compositeScore - a.compositeScore);\r\n\r\n    // \u62D3\u6251\u6392\u5E8F\uFF08\u786E\u4FDD\u524D\u7F6E\u4F9D\u8D56\u987A\u5E8F\uFF09\r\n    for (const rec of sortedByScore) {\r\n        if (!visited.has(rec.pointId)) {\r\n            topologicalDFS(rec.pointId, pointMap, visited, result, withScore);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction topologicalDFS(\r\n    pointId: string,\r\n    pointMap: Map<string, any>,\r\n    visited: Set<string>,\r\n    result: IntelligentRecommendation[],\r\n    recommendations: any[]\r\n) {\r\n    visited.add(pointId);\r\n    const point = pointMap.get(pointId);\r\n    if (!point) return;\r\n\r\n    // \u5148\u5904\u7406\u524D\u7F6E\u4F9D\u8D56\r\n    for (const preId of point.prerequisites) {\r\n        if (!visited.has(preId)) {\r\n            topologicalDFS(preId, pointMap, visited, result, recommendations);\r\n        }\r\n    }\r\n\r\n    // \u6DFB\u52A0\u5F53\u524D\u8282\u70B9\r\n    const rec = recommendations.find(r => r.pointId === pointId);\r\n    if (rec) {\r\n        result.push({\r\n            pointId: rec.pointId,\r\n            priority: rec.priority,\r\n            reason: rec.reason,\r\n            predictedSuccessRate: rec.predictedSuccessRate,\r\n            estimatedTime: rec.estimatedTime,\r\n            difficulty: rec.difficulty,\r\n            urgency: rec.urgency\r\n        });\r\n    }\r\n}\r\n\r\n// \u4FDD\u6301\u5411\u540E\u517C\u5BB9\uFF0C\u5BFC\u51FA\u7B80\u5316\u7248\u672C\r\nexport async function generateRecommendedPath(userId: Types.ObjectId) {\r\n    const intelligentPath = await generateIntelligentPath(userId);\r\n    return intelligentPath.map(item => ({\r\n        pointId: item.pointId,\r\n        priority: item.priority,\r\n        reason: item.reason\r\n    }));\r\n}\r\n", "// backend/src/models/WrongQuestion.ts\r\nimport mongoose, { Schema, model, Document, Types } from 'mongoose';\r\n\r\nexport interface IWrongQuestion extends Document {\r\n    userId: Types.ObjectId;\r\n    pointId: string;\r\n    pointTitle: string;\r\n    subject: string;\r\n    question: string;\r\n    options: string[];\r\n    type: 'single' | 'multiple' | 'boolean';\r\n    userAnswer: number | number[];\r\n    correctAnswer: number | number[];\r\n    explanation: string;\r\n    aiAnalysis?: string; // AI \u751F\u6210\u7684\u6DF1\u5EA6\u89E3\u6790\r\n    retryCount: number;\r\n    lastAttemptAt: Date;\r\n    mastered: boolean;\r\n    difficulty?: number;\r\n    createdAt: Date;\r\n}\r\n\r\nconst WrongQuestionSchema = new Schema<IWrongQuestion>({\r\n    userId: { type: Schema.Types.ObjectId, ref: 'User', required: true, index: true },\r\n    pointId: { type: String, required: true, index: true },\r\n    pointTitle: { type: String, required: true },\r\n    subject: { type: String, required: true, index: true },\r\n    question: { type: String, required: true },\r\n    options: [{ type: String }],\r\n    type: { type: String, enum: ['single', 'multiple', 'boolean'], required: true },\r\n    userAnswer: { type: Schema.Types.Mixed, required: true },\r\n    correctAnswer: { type: Schema.Types.Mixed, required: true },\r\n    explanation: { type: String, required: true },\r\n    aiAnalysis: { type: String },\r\n    retryCount: { type: Number, default: 0 },\r\n    lastAttemptAt: { type: Date, default: Date.now },\r\n    mastered: { type: Boolean, default: false, index: true },\r\n    difficulty: { type: Number, min: 1, max: 5 },\r\n    createdAt: { type: Date, default: Date.now },\r\n}, {\r\n    timestamps: true,\r\n});\r\n\r\n// \u590D\u5408\u7D22\u5F15\uFF1A\u7528\u4E8E\u5FEB\u901F\u67E5\u8BE2\u7528\u6237\u7684\u7279\u5B9A\u77E5\u8BC6\u70B9\u9519\u9898\r\nWrongQuestionSchema.index({ userId: 1, pointId: 1 });\r\nWrongQuestionSchema.index({ userId: 1, mastered: 1 });\r\nWrongQuestionSchema.index({ userId: 1, subject: 1 });\r\n\r\nconst WrongQuestion = (mongoose.models.WrongQuestion as mongoose.Model<IWrongQuestion>) || model<IWrongQuestion>('WrongQuestion', WrongQuestionSchema);\r\n\r\nexport default WrongQuestion;\r\n\r\n", "// backend/src/routes/wrong-questions.ts\r\nimport { Router, Response, Request } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport { getChatCompletion } from '../services/ai';\r\n\r\nconst router = Router();\r\n\r\n// \u83B7\u53D6\u7528\u6237\u7684\u9519\u9898\u5217\u8868\r\nrouter.get('/', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { subject, mastered, pointId } = req.query;\r\n\r\n        const filter: any = { userId };\r\n        if (subject) filter.subject = subject;\r\n        if (mastered !== undefined) filter.mastered = mastered === 'true';\r\n        if (pointId) filter.pointId = pointId;\r\n\r\n        const wrongQuestions = await WrongQuestion.find(filter)\r\n            .sort({ lastAttemptAt: -1 })\r\n            .lean();\r\n\r\n        res.json({ wrongQuestions });\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u9519\u9898\u5217\u8868\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u83B7\u53D6\u9519\u9898\u5217\u8868\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u83B7\u53D6\u9519\u9898\u7EDF\u8BA1\r\nrouter.get('/stats', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n\r\n        // \u6309\u5B66\u79D1\u7EDF\u8BA1\r\n        const subjectStats = await WrongQuestion.aggregate([\r\n            { $match: { userId } },\r\n            {\r\n                $group: {\r\n                    _id: '$subject',\r\n                    total: { $sum: 1 },\r\n                    mastered: {\r\n                        $sum: { $cond: [{ $eq: ['$mastered', true] }, 1, 0] }\r\n                    },\r\n                    unmastered: {\r\n                        $sum: { $cond: [{ $eq: ['$mastered', false] }, 1, 0] }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                $project: {\r\n                    subject: '$_id',\r\n                    total: 1,\r\n                    mastered: 1,\r\n                    unmastered: 1,\r\n                    _id: 0\r\n                }\r\n            }\r\n        ]);\r\n\r\n        // \u6309\u77E5\u8BC6\u70B9\u7EDF\u8BA1\r\n        const pointStats = await WrongQuestion.aggregate([\r\n            { $match: { userId, mastered: false } },\r\n            {\r\n                $group: {\r\n                    _id: '$pointId',\r\n                    pointTitle: { $first: '$pointTitle' },\r\n                    subject: { $first: '$subject' },\r\n                    count: { $sum: 1 }\r\n                }\r\n            },\r\n            { $sort: { count: -1 } },\r\n            { $limit: 10 },\r\n            {\r\n                $project: {\r\n                    pointId: '$_id',\r\n                    pointTitle: 1,\r\n                    subject: 1,\r\n                    count: 1,\r\n                    _id: 0\r\n                }\r\n            }\r\n        ]);\r\n\r\n        // \u603B\u4F53\u7EDF\u8BA1\r\n        const totalWrong = await WrongQuestion.countDocuments({ userId });\r\n        const totalMastered = await WrongQuestion.countDocuments({ userId, mastered: true });\r\n\r\n        res.json({\r\n            totalWrong,\r\n            totalMastered,\r\n            totalUnmastered: totalWrong - totalMastered,\r\n            masteryRate: totalWrong > 0 ? Math.round((totalMastered / totalWrong) * 100) : 0,\r\n            subjectStats,\r\n            weakestPoints: pointStats\r\n        });\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u9519\u9898\u7EDF\u8BA1\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u83B7\u53D6\u9519\u9898\u7EDF\u8BA1\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u6DFB\u52A0\u9519\u9898\uFF08\u901A\u5E38\u7531\u6D4B\u9A8C\u7CFB\u7EDF\u81EA\u52A8\u8C03\u7528\uFF09\r\nrouter.post('/', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { pointId, question, options, type, userAnswer, correctAnswer, explanation, difficulty } = req.body;\r\n\r\n        // \u83B7\u53D6\u77E5\u8BC6\u70B9\u4FE1\u606F\r\n        const point = await KnowledgePoint.findOne({ id: pointId });\r\n        if (!point) {\r\n            return res.status(404).json({ message: '\u77E5\u8BC6\u70B9\u4E0D\u5B58\u5728' });\r\n        }\r\n\r\n        // \u68C0\u67E5\u662F\u5426\u5DF2\u5B58\u5728\u76F8\u540C\u9519\u9898\r\n        const existing = await WrongQuestion.findOne({\r\n            userId,\r\n            pointId,\r\n            question\r\n        });\r\n\r\n        if (existing) {\r\n            // \u66F4\u65B0\u9519\u9898\u4FE1\u606F\r\n            existing.retryCount += 1;\r\n            existing.lastAttemptAt = new Date();\r\n            existing.userAnswer = userAnswer;\r\n            await existing.save();\r\n            return res.json({ wrongQuestion: existing, updated: true });\r\n        }\r\n\r\n        // \u521B\u5EFA\u65B0\u9519\u9898\r\n        const wrongQuestion = new WrongQuestion({\r\n            userId,\r\n            pointId,\r\n            pointTitle: point.title,\r\n            subject: point.subject,\r\n            question,\r\n            options,\r\n            type,\r\n            userAnswer,\r\n            correctAnswer,\r\n            explanation,\r\n            difficulty: difficulty || point.difficulty\r\n        });\r\n\r\n        await wrongQuestion.save();\r\n        res.status(201).json({ wrongQuestion });\r\n    } catch (error) {\r\n        console.error('\u6DFB\u52A0\u9519\u9898\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u6DFB\u52A0\u9519\u9898\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u751F\u6210 AI \u6DF1\u5EA6\u89E3\u6790\r\nrouter.post('/:id/analyze', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { id } = req.params;\r\n        const { regenerate } = req.body; // \u662F\u5426\u5F3A\u5236\u91CD\u65B0\u751F\u6210\r\n\r\n        const wrongQuestion = await WrongQuestion.findOne({ _id: id, userId });\r\n        if (!wrongQuestion) {\r\n            return res.status(404).json({ message: '\u9519\u9898\u4E0D\u5B58\u5728' });\r\n        }\r\n\r\n        // \u5982\u679C\u5DF2\u6709 AI \u89E3\u6790\u4E14\u4E0D\u662F\u91CD\u65B0\u751F\u6210\uFF0C\u76F4\u63A5\u8FD4\u56DE\r\n        if (wrongQuestion.aiAnalysis && !regenerate) {\r\n            return res.json({ aiAnalysis: wrongQuestion.aiAnalysis });\r\n        }\r\n\r\n        // \u6784\u5EFA\u63D0\u793A\u8BCD\r\n        const userAnswerText = Array.isArray(wrongQuestion.userAnswer)\r\n            ? wrongQuestion.userAnswer.map(i => wrongQuestion.options[i]).join(', ')\r\n            : wrongQuestion.options[wrongQuestion.userAnswer as number];\r\n\r\n        const correctAnswerText = Array.isArray(wrongQuestion.correctAnswer)\r\n            ? wrongQuestion.correctAnswer.map(i => wrongQuestion.options[i]).join(', ')\r\n            : wrongQuestion.options[wrongQuestion.correctAnswer as number];\r\n\r\n        const prompt = `\u4F5C\u4E3A\u4E00\u540D\u7ECF\u9A8C\u4E30\u5BCC\u7684\u8BA1\u7B97\u673A\u79D1\u5B66\u6559\u5E08\uFF0C\u8BF7\u6DF1\u5EA6\u5206\u6790\u4EE5\u4E0B\u9519\u9898\uFF0C\u5E2E\u52A9\u5B66\u751F\u7406\u89E3\u9519\u8BEF\u539F\u56E0\u5E76\u638C\u63E1\u6B63\u786E\u77E5\u8BC6\uFF1A\r\n\r\n**\u77E5\u8BC6\u70B9**: ${wrongQuestion.pointTitle} (${wrongQuestion.subject})\r\n\r\n**\u9898\u76EE**: ${wrongQuestion.question}\r\n\r\n**\u9009\u9879**:\r\n${wrongQuestion.options.map((opt, i) => `${String.fromCharCode(65 + i)}. ${opt}`).join('\\n')}\r\n\r\n**\u5B66\u751F\u7684\u7B54\u6848**: ${userAnswerText}\r\n**\u6B63\u786E\u7B54\u6848**: ${correctAnswerText}\r\n\r\n**\u6807\u51C6\u89E3\u6790**: ${wrongQuestion.explanation}\r\n\r\n\u8BF7\u63D0\u4F9B\uFF1A\r\n1. **\u9519\u8BEF\u539F\u56E0\u5206\u6790**\uFF1A\u4E3A\u4EC0\u4E48\u5B66\u751F\u4F1A\u9009\u62E9\u8FD9\u4E2A\u7B54\u6848\uFF1F\u53EF\u80FD\u7684\u8BEF\u89E3\u662F\u4EC0\u4E48\uFF1F\r\n2. **\u77E5\u8BC6\u70B9\u8BE6\u89E3**\uFF1A\u7528\u66F4\u901A\u4FD7\u6613\u61C2\u7684\u65B9\u5F0F\u89E3\u91CA\u8FD9\u4E2A\u77E5\u8BC6\u70B9\u7684\u6838\u5FC3\u6982\u5FF5\r\n3. **\u8BB0\u5FC6\u6280\u5DE7**\uFF1A\u63D0\u4F9B\u4FBF\u4E8E\u8BB0\u5FC6\u7684\u53E3\u8BC0\u3001\u7C7B\u6BD4\u6216\u8054\u60F3\u65B9\u6CD5\r\n4. **\u76F8\u5173\u77E5\u8BC6\u62D3\u5C55**\uFF1A\u8FD9\u4E2A\u77E5\u8BC6\u70B9\u4E0E\u5176\u4ED6\u77E5\u8BC6\u70B9\u7684\u5173\u8054\r\n\r\n\u8BF7\u7528\u6E05\u6670\u3001\u53CB\u597D\u7684\u8BED\u8A00\uFF0C\u5C31\u50CF\u9762\u5BF9\u9762\u8F85\u5BFC\u5B66\u751F\u4E00\u6837\u3002`;\r\n\r\n        const aiAnalysis = await getChatCompletion([\r\n            { role: 'user', content: prompt }\r\n        ]);\r\n\r\n        // \u4FDD\u5B58 AI \u89E3\u6790\r\n        wrongQuestion.aiAnalysis = aiAnalysis;\r\n        await wrongQuestion.save();\r\n\r\n        res.json({ aiAnalysis });\r\n    } catch (error) {\r\n        console.error('\u751F\u6210 AI \u89E3\u6790\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u751F\u6210 AI \u89E3\u6790\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u6807\u8BB0\u9519\u9898\u4E3A\u5DF2\u638C\u63E1\r\nrouter.put('/:id/master', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { id } = req.params;\r\n\r\n        const wrongQuestion = await WrongQuestion.findOneAndUpdate(\r\n            { _id: id, userId },\r\n            { mastered: true, lastAttemptAt: new Date() },\r\n            { new: true }\r\n        );\r\n\r\n        if (!wrongQuestion) {\r\n            return res.status(404).json({ message: '\u9519\u9898\u4E0D\u5B58\u5728' });\r\n        }\r\n\r\n        res.json({ wrongQuestion });\r\n    } catch (error) {\r\n        console.error('\u6807\u8BB0\u9519\u9898\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u6807\u8BB0\u9519\u9898\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u91CD\u7F6E\u9519\u9898\u4E3A\u672A\u638C\u63E1\r\nrouter.put('/:id/reset', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { id } = req.params;\r\n\r\n        const wrongQuestion = await WrongQuestion.findOneAndUpdate(\r\n            { _id: id, userId },\r\n            { mastered: false, lastAttemptAt: new Date() },\r\n            { new: true }\r\n        );\r\n\r\n        if (!wrongQuestion) {\r\n            return res.status(404).json({ message: '\u9519\u9898\u4E0D\u5B58\u5728' });\r\n        }\r\n\r\n        res.json({ wrongQuestion });\r\n    } catch (error) {\r\n        console.error('\u91CD\u7F6E\u9519\u9898\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u91CD\u7F6E\u9519\u9898\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u5220\u9664\u9519\u9898\r\nrouter.delete('/:id', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { id } = req.params;\r\n\r\n        const wrongQuestion = await WrongQuestion.findOneAndDelete({ _id: id, userId });\r\n        if (!wrongQuestion) {\r\n            return res.status(404).json({ message: '\u9519\u9898\u4E0D\u5B58\u5728' });\r\n        }\r\n\r\n        res.json({ message: '\u9519\u9898\u5DF2\u5220\u9664' });\r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u9519\u9898\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u5220\u9664\u9519\u9898\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/routes/study-time.ts\r\nimport { Router, Response, Request } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport StudySession from '../models/StudySession';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\n\r\nconst router = Router();\r\n\r\n// \u5F00\u59CB\u5B66\u4E60\u4F1A\u8BDD\r\nrouter.post('/start', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { pointId } = req.body;\r\n\r\n        let pointTitle, subject;\r\n        if (pointId) {\r\n            const point = await KnowledgePoint.findOne({ id: pointId });\r\n            if (point) {\r\n                pointTitle = point.title;\r\n                subject = point.subject;\r\n            }\r\n        }\r\n\r\n        // \u7ED3\u675F\u4E4B\u524D\u6240\u6709\u672A\u5B8C\u6210\u7684\u4F1A\u8BDD\r\n        const now = new Date();\r\n        const unfinishedSessions = await StudySession.find({ userId, endTime: null });\r\n        \r\n        // \u9010\u4E2A\u66F4\u65B0\u6BCF\u4E2A\u4F1A\u8BDD\u7684 duration\r\n        for (const session of unfinishedSessions) {\r\n            session.endTime = now;\r\n            session.duration = Math.floor((now.getTime() - session.startTime.getTime()) / 1000);\r\n            await session.save();\r\n        }\r\n\r\n        // \u521B\u5EFA\u65B0\u4F1A\u8BDD\r\n        const session = new StudySession({\r\n            userId,\r\n            pointId,\r\n            pointTitle,\r\n            subject,\r\n            startTime: new Date(),\r\n            active: true,\r\n            activityCount: 0\r\n        });\r\n\r\n        await session.save();\r\n\r\n        res.json({ sessionId: session._id, message: '\u5B66\u4E60\u4F1A\u8BDD\u5DF2\u5F00\u59CB' });\r\n    } catch (error) {\r\n        console.error('\u5F00\u59CB\u5B66\u4E60\u4F1A\u8BDD\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u5F00\u59CB\u5B66\u4E60\u4F1A\u8BDD\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u8BB0\u5F55\u6D3B\u52A8\uFF08\u5FC3\u8DF3\uFF09\r\nrouter.post('/heartbeat', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { sessionId } = req.body;\r\n\r\n        if (!sessionId) {\r\n            return res.status(400).json({ message: '\u7F3A\u5C11 sessionId' });\r\n        }\r\n\r\n        const session = await StudySession.findOne({ _id: sessionId, userId, endTime: null });\r\n        if (!session) {\r\n            return res.status(404).json({ message: '\u5B66\u4E60\u4F1A\u8BDD\u4E0D\u5B58\u5728\u6216\u5DF2\u7ED3\u675F' });\r\n        }\r\n\r\n        // \u66F4\u65B0\u6D3B\u52A8\u8BA1\u6570\r\n        session.activityCount += 1;\r\n        \r\n        // \u8BA1\u7B97\u6301\u7EED\u65F6\u95F4\r\n        const now = new Date();\r\n        session.duration = Math.floor((now.getTime() - session.startTime.getTime()) / 1000);\r\n        \r\n        await session.save();\r\n\r\n        res.json({ message: '\u6D3B\u52A8\u5DF2\u8BB0\u5F55', duration: session.duration });\r\n    } catch (error) {\r\n        console.error('\u8BB0\u5F55\u6D3B\u52A8\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u8BB0\u5F55\u6D3B\u52A8\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u7ED3\u675F\u5B66\u4E60\u4F1A\u8BDD\r\nrouter.post('/end', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { sessionId } = req.body;\r\n\r\n        const session = await StudySession.findOne({ _id: sessionId, userId, endTime: null });\r\n        if (!session) {\r\n            return res.status(404).json({ message: '\u5B66\u4E60\u4F1A\u8BDD\u4E0D\u5B58\u5728\u6216\u5DF2\u7ED3\u675F' });\r\n        }\r\n\r\n        const now = new Date();\r\n        session.endTime = now;\r\n        session.duration = Math.floor((now.getTime() - session.startTime.getTime()) / 1000);\r\n        \r\n        // \u5224\u65AD\u662F\u5426\u6D3B\u8DC3\uFF08\u5982\u679C\u6D3B\u52A8\u6B21\u6570\u5C11\u4E8E\u9884\u671F\uFF0C\u53EF\u80FD\u662F\u6302\u673A\uFF09\r\n        const expectedActivityCount = Math.floor(session.duration / 60); // \u9884\u671F\u6BCF\u5206\u949F\u81F3\u5C111\u6B21\u6D3B\u52A8\r\n        session.active = session.activityCount >= expectedActivityCount * 0.3; // \u81F3\u5C1130%\u7684\u6D3B\u52A8\u7387\r\n\r\n        await session.save();\r\n\r\n        res.json({ \r\n            message: '\u5B66\u4E60\u4F1A\u8BDD\u5DF2\u7ED3\u675F',\r\n            duration: session.duration,\r\n            active: session.active\r\n        });\r\n    } catch (error) {\r\n        console.error('\u7ED3\u675F\u5B66\u4E60\u4F1A\u8BDD\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u7ED3\u675F\u5B66\u4E60\u4F1A\u8BDD\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u83B7\u53D6\u7B80\u5355\u7684\u5B66\u4E60\u65F6\u957F\u7EDF\u8BA1\uFF08\u4EC5\u603B\u65F6\u957F\uFF0C\u7528\u4E8E Dashboard\uFF09\r\nrouter.get('/stats/simple', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n\r\n        // \u53EA\u8BA1\u7B97\u603B\u5B66\u4E60\u65F6\u957F\uFF0C\u4F7F\u7528\u7D22\u5F15\u4F18\u5316\r\n        const totalResult = await StudySession.aggregate([\r\n            { $match: { userId, active: true } },\r\n            { $group: { _id: null, totalDuration: { $sum: '$duration' } } }\r\n        ]);\r\n        const totalDuration = totalResult.length > 0 ? totalResult[0].totalDuration : 0;\r\n\r\n        res.json({\r\n            totalDuration,\r\n            totalHours: Math.floor(totalDuration / 3600),\r\n            totalMinutes: Math.floor((totalDuration % 3600) / 60),\r\n        });\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u5B66\u4E60\u65F6\u957F\u7EDF\u8BA1\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u83B7\u53D6\u5B66\u4E60\u65F6\u957F\u7EDF\u8BA1\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u83B7\u53D6\u5B66\u4E60\u65F6\u957F\u7EDF\u8BA1\uFF08\u5B8C\u6574\u7248\uFF0C\u5305\u542B\u8BE6\u7EC6\u5206\u6790\uFF09\r\nrouter.get('/stats', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { startDate, endDate } = req.query;\r\n\r\n        const filter: any = { userId, active: true }; // \u53EA\u7EDF\u8BA1\u6D3B\u8DC3\u7684\u5B66\u4E60\u65F6\u95F4\r\n\r\n        if (startDate || endDate) {\r\n            filter.startTime = {};\r\n            if (startDate) filter.startTime.$gte = new Date(startDate as string);\r\n            if (endDate) filter.startTime.$lte = new Date(endDate as string);\r\n        }\r\n\r\n        // \u603B\u5B66\u4E60\u65F6\u957F\r\n        const totalResult = await StudySession.aggregate([\r\n            { $match: filter },\r\n            { $group: { _id: null, totalDuration: { $sum: '$duration' } } }\r\n        ]);\r\n        const totalDuration = totalResult.length > 0 ? totalResult[0].totalDuration : 0;\r\n\r\n        // \u6309\u5B66\u79D1\u7EDF\u8BA1\r\n        const subjectStats = await StudySession.aggregate([\r\n            { $match: { ...filter, subject: { $exists: true, $ne: null } } },\r\n            {\r\n                $group: {\r\n                    _id: '$subject',\r\n                    duration: { $sum: '$duration' },\r\n                    sessionCount: { $sum: 1 }\r\n                }\r\n            },\r\n            { $sort: { duration: -1 } },\r\n            {\r\n                $project: {\r\n                    subject: '$_id',\r\n                    duration: 1,\r\n                    sessionCount: 1,\r\n                    _id: 0\r\n                }\r\n            }\r\n        ]);\r\n\r\n        // \u6309\u77E5\u8BC6\u70B9\u7EDF\u8BA1\uFF08TOP 10\uFF09\r\n        const pointStats = await StudySession.aggregate([\r\n            { $match: { ...filter, pointId: { $exists: true, $ne: null } } },\r\n            {\r\n                $group: {\r\n                    _id: '$pointId',\r\n                    pointTitle: { $first: '$pointTitle' },\r\n                    subject: { $first: '$subject' },\r\n                    duration: { $sum: '$duration' },\r\n                    sessionCount: { $sum: 1 }\r\n                }\r\n            },\r\n            { $sort: { duration: -1 } },\r\n            { $limit: 10 },\r\n            {\r\n                $project: {\r\n                    pointId: '$_id',\r\n                    pointTitle: 1,\r\n                    subject: 1,\r\n                    duration: 1,\r\n                    sessionCount: 1,\r\n                    _id: 0\r\n                }\r\n            }\r\n        ]);\r\n\r\n        // \u6309\u65E5\u671F\u7EDF\u8BA1\uFF08\u6700\u8FD130\u5929\uFF09\r\n        const thirtyDaysAgo = new Date();\r\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\r\n\r\n        const dailyStats = await StudySession.aggregate([\r\n            { \r\n                $match: { \r\n                    userId, \r\n                    active: true,\r\n                    startTime: { $gte: thirtyDaysAgo }\r\n                } \r\n            },\r\n            {\r\n                $group: {\r\n                    _id: {\r\n                        $dateToString: { format: '%Y-%m-%d', date: '$startTime' }\r\n                    },\r\n                    duration: { $sum: '$duration' },\r\n                    sessionCount: { $sum: 1 }\r\n                }\r\n            },\r\n            { $sort: { _id: 1 } },\r\n            {\r\n                $project: {\r\n                    date: '$_id',\r\n                    duration: 1,\r\n                    sessionCount: 1,\r\n                    _id: 0\r\n                }\r\n            }\r\n        ]);\r\n\r\n        // \u8BA1\u7B97\u5B66\u4E60\u4E60\u60EF\uFF08\u6700\u6D3B\u8DC3\u65F6\u6BB5\uFF09\r\n        const hourlyActivity = await StudySession.aggregate([\r\n            { $match: filter },\r\n            {\r\n                $project: {\r\n                    hour: { $hour: '$startTime' }\r\n                }\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: '$hour',\r\n                    count: { $sum: 1 }\r\n                }\r\n            },\r\n            { $sort: { count: -1 } },\r\n            { $limit: 3 },\r\n            {\r\n                $project: {\r\n                    hour: '$_id',\r\n                    count: 1,\r\n                    _id: 0\r\n                }\r\n            }\r\n        ]);\r\n\r\n        res.json({\r\n            totalDuration,\r\n            totalHours: Math.floor(totalDuration / 3600),\r\n            totalMinutes: Math.floor((totalDuration % 3600) / 60),\r\n            subjectStats,\r\n            pointStats,\r\n            dailyStats,\r\n            mostActiveHours: hourlyActivity\r\n        });\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u5B66\u4E60\u65F6\u957F\u7EDF\u8BA1\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u83B7\u53D6\u5B66\u4E60\u65F6\u957F\u7EDF\u8BA1\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\n// \u83B7\u53D6\u70ED\u529B\u56FE\u6570\u636E\r\nrouter.get('/heatmap', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const userId = req.user?._id;\r\n        const { year } = req.query;\r\n\r\n        const targetYear = year ? parseInt(year as string) : new Date().getFullYear();\r\n        const startDate = new Date(targetYear, 0, 1);\r\n        const endDate = new Date(targetYear, 11, 31, 23, 59, 59);\r\n\r\n        const heatmapData = await StudySession.aggregate([\r\n            {\r\n                $match: {\r\n                    userId,\r\n                    active: true,\r\n                    startTime: { $gte: startDate, $lte: endDate }\r\n                }\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: {\r\n                        $dateToString: { format: '%Y-%m-%d', date: '$startTime' }\r\n                    },\r\n                    duration: { $sum: '$duration' },\r\n                    sessionCount: { $sum: 1 }\r\n                }\r\n            },\r\n            {\r\n                $project: {\r\n                    date: '$_id',\r\n                    duration: 1,\r\n                    sessionCount: 1,\r\n                    // \u8BA1\u7B97\u5F3A\u5EA6\u7B49\u7EA7 (0-4)\r\n                    intensity: {\r\n                        $cond: [\r\n                            { $gte: ['$duration', 7200] }, 4, // >= 2\u5C0F\u65F6\r\n                            {\r\n                                $cond: [\r\n                                    { $gte: ['$duration', 3600] }, 3, // >= 1\u5C0F\u65F6\r\n                                    {\r\n                                        $cond: [\r\n                                            { $gte: ['$duration', 1800] }, 2, // >= 30\u5206\u949F\r\n                                            {\r\n                                                $cond: [\r\n                                                    { $gte: ['$duration', 600] }, 1, // >= 10\u5206\u949F\r\n                                                    0\r\n                                                ]\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    _id: 0\r\n                }\r\n            },\r\n            { $sort: { date: 1 } }\r\n        ]);\r\n\r\n        // \u8BA1\u7B97\u8FDE\u7EED\u5B66\u4E60\u5929\u6570\r\n        let currentStreak = 0;\r\n        let longestStreak = 0;\r\n        let lastDate: Date | null = null;\r\n\r\n        const sortedData = heatmapData.sort((a, b) => \r\n            new Date(a.date).getTime() - new Date(b.date).getTime()\r\n        );\r\n\r\n        for (const data of sortedData) {\r\n            const currentDate = new Date(data.date);\r\n            \r\n            if (!lastDate) {\r\n                currentStreak = 1;\r\n            } else {\r\n                const diffDays = Math.floor(\r\n                    (currentDate.getTime() - lastDate.getTime()) / (1000 * 60 * 60 * 24)\r\n                );\r\n                \r\n                if (diffDays === 1) {\r\n                    currentStreak++;\r\n                } else {\r\n                    longestStreak = Math.max(longestStreak, currentStreak);\r\n                    currentStreak = 1;\r\n                }\r\n            }\r\n            \r\n            lastDate = currentDate;\r\n        }\r\n        longestStreak = Math.max(longestStreak, currentStreak);\r\n\r\n        res.json({\r\n            year: targetYear,\r\n            data: heatmapData,\r\n            totalDays: heatmapData.length,\r\n            longestStreak,\r\n            currentStreak\r\n        });\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u70ED\u529B\u56FE\u6570\u636E\u5931\u8D25:', error);\r\n        res.status(500).json({ message: '\u83B7\u53D6\u70ED\u529B\u56FE\u6570\u636E\u65F6\u53D1\u751F\u9519\u8BEF' });\r\n    }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/routes/achievements.ts\r\nimport { Router, Request, Response } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { AchievementService } from '../services/achievementService';\r\nimport { ACHIEVEMENT_DEFINITIONS } from '../models/Achievement';\r\nimport { successResponse, errorResponse } from '../utils/response';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * \u83B7\u53D6\u7528\u6237\u6240\u6709\u6210\u5C31\r\n */\r\nrouter.get('/', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = (req as any).user._id;\r\n\r\n    // \u521D\u59CB\u5316\u6210\u5C31\uFF08\u5982\u679C\u8FD8\u6CA1\u6709\uFF09\r\n    await AchievementService.initializeUserAchievements(userId);\r\n\r\n    const achievements = await AchievementService.getUserAchievements(userId);\r\n\r\n    return successResponse(res, { achievements });\r\n  } catch (error: any) {\r\n    console.error('[Achievements] \u83B7\u53D6\u6210\u5C31\u5931\u8D25:', error.message);\r\n    return errorResponse(res, '\u83B7\u53D6\u6210\u5C31\u5931\u8D25', 500, error.message);\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u6210\u5C31\u7EDF\u8BA1\r\n */\r\nrouter.get('/stats', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = (req as any).user._id;\r\n\r\n    const stats = await AchievementService.getUserAchievementStats(userId);\r\n\r\n    return successResponse(res, stats);\r\n  } catch (error: any) {\r\n    console.error('[Achievements] \u83B7\u53D6\u6210\u5C31\u7EDF\u8BA1\u5931\u8D25:', error.message);\r\n    return errorResponse(res, '\u83B7\u53D6\u6210\u5C31\u7EDF\u8BA1\u5931\u8D25', 500, error.message);\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u6240\u6709\u6210\u5C31\u5B9A\u4E49\r\n */\r\nrouter.get('/definitions', async (_req: Request, res: Response) => {\r\n  try {\r\n    return successResponse(res, { definitions: ACHIEVEMENT_DEFINITIONS });\r\n  } catch (error: any) {\r\n    console.error('[Achievements] \u83B7\u53D6\u6210\u5C31\u5B9A\u4E49\u5931\u8D25:', error.message);\r\n    return errorResponse(res, '\u83B7\u53D6\u6210\u5C31\u5B9A\u4E49\u5931\u8D25', 500, error.message);\r\n  }\r\n});\r\n\r\n/**\r\n * \u624B\u52A8\u68C0\u67E5\u5E76\u66F4\u65B0\u6240\u6709\u6210\u5C31\r\n */\r\nrouter.post('/check', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = (req as any).user._id;\r\n\r\n    const newAchievements = [];\r\n\r\n    // \u68C0\u67E5\u5404\u7C7B\u6210\u5C31\r\n    newAchievements.push(...await AchievementService.checkStudyTimeAchievements(userId));\r\n    newAchievements.push(...await AchievementService.checkKnowledgeMasterAchievements(userId));\r\n    newAchievements.push(...await AchievementService.checkStreakAchievements(userId));\r\n\r\n    return successResponse(res, {\r\n      message: '\u6210\u5C31\u68C0\u67E5\u5B8C\u6210',\r\n      newAchievements,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('[Achievements] \u68C0\u67E5\u6210\u5C31\u5931\u8D25:', error.message);\r\n    return errorResponse(res, '\u68C0\u67E5\u6210\u5C31\u5931\u8D25', 500, error.message);\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/models/Achievement.ts\r\nimport mongoose, { Schema, Document } from 'mongoose';\r\n\r\n/**\r\n * \u6210\u5C31\u7C7B\u578B\r\n */\r\nexport type AchievementType = \r\n  | 'study_time'      // \u5B66\u4E60\u65F6\u957F\u6210\u5C31\r\n  | 'knowledge_master' // \u77E5\u8BC6\u70B9\u638C\u63E1\u6210\u5C31\r\n  | 'streak'          // \u8FDE\u7EED\u5B66\u4E60\u6210\u5C31\r\n  | 'quiz_perfect'    // \u5B8C\u7F8E\u7B54\u9898\u6210\u5C31\r\n  | 'early_bird'      // \u65E9\u9E1F\u6210\u5C31\r\n  | 'night_owl'       // \u591C\u732B\u5B50\u6210\u5C31\r\n  | 'explorer'        // \u63A2\u7D22\u8005\u6210\u5C31\r\n  | 'fast_learner';   // \u5FEB\u901F\u5B66\u4E60\u8005\u6210\u5C31\r\n\r\n/**\r\n * \u6210\u5C31\u7B49\u7EA7\r\n */\r\nexport type AchievementLevel = 'bronze' | 'silver' | 'gold' | 'platinum' | 'diamond';\r\n\r\n/**\r\n * \u6210\u5C31\u5B9A\u4E49\u63A5\u53E3\r\n */\r\nexport interface IAchievementDefinition {\r\n  id: string;\r\n  type: AchievementType;\r\n  level: AchievementLevel;\r\n  name: string;\r\n  description: string;\r\n  icon: string;\r\n  requirement: number;\r\n  points: number;\r\n}\r\n\r\n/**\r\n * \u7528\u6237\u6210\u5C31\u63A5\u53E3\r\n */\r\nexport interface IUserAchievement extends Document {\r\n  userId: mongoose.Types.ObjectId;\r\n  achievementId: string;\r\n  achievementType: AchievementType;\r\n  achievementLevel: AchievementLevel;\r\n  unlockedAt: Date;\r\n  progress: number;\r\n  maxProgress: number;\r\n  completed: boolean;\r\n}\r\n\r\nconst userAchievementSchema = new Schema<IUserAchievement>({\r\n  userId: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'User',\r\n    required: true,\r\n    index: true,\r\n  },\r\n  achievementId: {\r\n    type: String,\r\n    required: true,\r\n    index: true,\r\n  },\r\n  achievementType: {\r\n    type: String,\r\n    required: true,\r\n    enum: [\r\n      'study_time',\r\n      'knowledge_master',\r\n      'streak',\r\n      'quiz_perfect',\r\n      'early_bird',\r\n      'night_owl',\r\n      'explorer',\r\n      'fast_learner',\r\n    ],\r\n  },\r\n  achievementLevel: {\r\n    type: String,\r\n    required: true,\r\n    enum: ['bronze', 'silver', 'gold', 'platinum', 'diamond'],\r\n  },\r\n  unlockedAt: {\r\n    type: Date,\r\n    default: null,\r\n  },\r\n  progress: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  maxProgress: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  completed: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n}, {\r\n  timestamps: true,\r\n});\r\n\r\n// \u590D\u5408\u7D22\u5F15\r\nuserAchievementSchema.index({ userId: 1, achievementId: 1 }, { unique: true });\r\nuserAchievementSchema.index({ userId: 1, completed: 1 });\r\n\r\nconst UserAchievement = (mongoose.models.UserAchievement as mongoose.Model<IUserAchievement>) || mongoose.model<IUserAchievement>('UserAchievement', userAchievementSchema);\r\n\r\nexport default UserAchievement;\r\n\r\n/**\r\n * \u6210\u5C31\u5B9A\u4E49\u5217\u8868\r\n */\r\nexport const ACHIEVEMENT_DEFINITIONS: IAchievementDefinition[] = [\r\n  // \u5B66\u4E60\u65F6\u957F\u6210\u5C31\r\n  {\r\n    id: 'study_time_bronze',\r\n    type: 'study_time',\r\n    level: 'bronze',\r\n    name: '\u521D\u5B66\u8005',\r\n    description: '\u7D2F\u8BA1\u5B66\u4E601\u5C0F\u65F6',\r\n    icon: '\u23F1\uFE0F',\r\n    requirement: 3600, // 1\u5C0F\u65F6\uFF08\u79D2\uFF09\r\n    points: 10,\r\n  },\r\n  {\r\n    id: 'study_time_silver',\r\n    type: 'study_time',\r\n    level: 'silver',\r\n    name: '\u52E4\u594B\u5B66\u4E60\u8005',\r\n    description: '\u7D2F\u8BA1\u5B66\u4E6010\u5C0F\u65F6',\r\n    icon: '\u23F1\uFE0F',\r\n    requirement: 36000, // 10\u5C0F\u65F6\r\n    points: 50,\r\n  },\r\n  {\r\n    id: 'study_time_gold',\r\n    type: 'study_time',\r\n    level: 'gold',\r\n    name: '\u5B66\u4E60\u8FBE\u4EBA',\r\n    description: '\u7D2F\u8BA1\u5B66\u4E6050\u5C0F\u65F6',\r\n    icon: '\u23F1\uFE0F',\r\n    requirement: 180000, // 50\u5C0F\u65F6\r\n    points: 200,\r\n  },\r\n  {\r\n    id: 'study_time_platinum',\r\n    type: 'study_time',\r\n    level: 'platinum',\r\n    name: '\u5B66\u4E60\u5927\u5E08',\r\n    description: '\u7D2F\u8BA1\u5B66\u4E60100\u5C0F\u65F6',\r\n    icon: '\u23F1\uFE0F',\r\n    requirement: 360000, // 100\u5C0F\u65F6\r\n    points: 500,\r\n  },\r\n\r\n  // \u77E5\u8BC6\u70B9\u638C\u63E1\u6210\u5C31\r\n  {\r\n    id: 'knowledge_bronze',\r\n    type: 'knowledge_master',\r\n    level: 'bronze',\r\n    name: '\u77E5\u8BC6\u65B0\u624B',\r\n    description: '\u5B8C\u62105\u4E2A\u77E5\u8BC6\u70B9',\r\n    icon: '\uD83D\uDCDA',\r\n    requirement: 5,\r\n    points: 20,\r\n  },\r\n  {\r\n    id: 'knowledge_silver',\r\n    type: 'knowledge_master',\r\n    level: 'silver',\r\n    name: '\u77E5\u8BC6\u80FD\u624B',\r\n    description: '\u5B8C\u621020\u4E2A\u77E5\u8BC6\u70B9',\r\n    icon: '\uD83D\uDCDA',\r\n    requirement: 20,\r\n    points: 80,\r\n  },\r\n  {\r\n    id: 'knowledge_gold',\r\n    type: 'knowledge_master',\r\n    level: 'gold',\r\n    name: '\u77E5\u8BC6\u4E13\u5BB6',\r\n    description: '\u5B8C\u621050\u4E2A\u77E5\u8BC6\u70B9',\r\n    icon: '\uD83D\uDCDA',\r\n    requirement: 50,\r\n    points: 250,\r\n  },\r\n  {\r\n    id: 'knowledge_platinum',\r\n    type: 'knowledge_master',\r\n    level: 'platinum',\r\n    name: '\u77E5\u8BC6\u5B97\u5E08',\r\n    description: '\u5B8C\u6210100\u4E2A\u77E5\u8BC6\u70B9',\r\n    icon: '\uD83D\uDCDA',\r\n    requirement: 100,\r\n    points: 600,\r\n  },\r\n\r\n  // \u8FDE\u7EED\u5B66\u4E60\u6210\u5C31\r\n  {\r\n    id: 'streak_bronze',\r\n    type: 'streak',\r\n    level: 'bronze',\r\n    name: '\u575A\u63013\u5929',\r\n    description: '\u8FDE\u7EED\u5B66\u4E603\u5929',\r\n    icon: '\uD83D\uDD25',\r\n    requirement: 3,\r\n    points: 30,\r\n  },\r\n  {\r\n    id: 'streak_silver',\r\n    type: 'streak',\r\n    level: 'silver',\r\n    name: '\u575A\u63017\u5929',\r\n    description: '\u8FDE\u7EED\u5B66\u4E607\u5929',\r\n    icon: '\uD83D\uDD25',\r\n    requirement: 7,\r\n    points: 100,\r\n  },\r\n  {\r\n    id: 'streak_gold',\r\n    type: 'streak',\r\n    level: 'gold',\r\n    name: '\u575A\u630130\u5929',\r\n    description: '\u8FDE\u7EED\u5B66\u4E6030\u5929',\r\n    icon: '\uD83D\uDD25',\r\n    requirement: 30,\r\n    points: 500,\r\n  },\r\n  {\r\n    id: 'streak_platinum',\r\n    type: 'streak',\r\n    level: 'platinum',\r\n    name: '\u575A\u6301100\u5929',\r\n    description: '\u8FDE\u7EED\u5B66\u4E60100\u5929',\r\n    icon: '\uD83D\uDD25',\r\n    requirement: 100,\r\n    points: 2000,\r\n  },\r\n\r\n  // \u5B8C\u7F8E\u7B54\u9898\u6210\u5C31\r\n  {\r\n    id: 'perfect_bronze',\r\n    type: 'quiz_perfect',\r\n    level: 'bronze',\r\n    name: '\u5B8C\u7F8E\u5F00\u59CB',\r\n    description: '\u83B7\u5F971\u6B21\u6EE1\u5206',\r\n    icon: '\uD83D\uDCAF',\r\n    requirement: 1,\r\n    points: 15,\r\n  },\r\n  {\r\n    id: 'perfect_silver',\r\n    type: 'quiz_perfect',\r\n    level: 'silver',\r\n    name: '\u5B8C\u7F8E\u5B66\u751F',\r\n    description: '\u83B7\u5F9710\u6B21\u6EE1\u5206',\r\n    icon: '\uD83D\uDCAF',\r\n    requirement: 10,\r\n    points: 100,\r\n  },\r\n  {\r\n    id: 'perfect_gold',\r\n    type: 'quiz_perfect',\r\n    level: 'gold',\r\n    name: '\u5B8C\u7F8E\u4E3B\u4E49\u8005',\r\n    description: '\u83B7\u5F9750\u6B21\u6EE1\u5206',\r\n    icon: '\uD83D\uDCAF',\r\n    requirement: 50,\r\n    points: 400,\r\n  },\r\n\r\n  // \u65E9\u9E1F\u6210\u5C31\r\n  {\r\n    id: 'early_bird',\r\n    type: 'early_bird',\r\n    level: 'gold',\r\n    name: '\u65E9\u8D77\u7684\u9E1F\u513F',\r\n    description: '\u5728\u65E9\u4E0A6-8\u70B9\u5B66\u4E6010\u6B21',\r\n    icon: '\uD83C\uDF05',\r\n    requirement: 10,\r\n    points: 150,\r\n  },\r\n\r\n  // \u591C\u732B\u5B50\u6210\u5C31\r\n  {\r\n    id: 'night_owl',\r\n    type: 'night_owl',\r\n    level: 'gold',\r\n    name: '\u591C\u732B\u5B50',\r\n    description: '\u5728\u665A\u4E0A22-24\u70B9\u5B66\u4E6010\u6B21',\r\n    icon: '\uD83C\uDF19',\r\n    requirement: 10,\r\n    points: 150,\r\n  },\r\n\r\n  // \u63A2\u7D22\u8005\u6210\u5C31\r\n  {\r\n    id: 'explorer',\r\n    type: 'explorer',\r\n    level: 'gold',\r\n    name: '\u77E5\u8BC6\u63A2\u7D22\u8005',\r\n    description: '\u5B66\u4E605\u4E2A\u4E0D\u540C\u5B66\u79D1',\r\n    icon: '\uD83D\uDDFA\uFE0F',\r\n    requirement: 5,\r\n    points: 200,\r\n  },\r\n\r\n  // \u5FEB\u901F\u5B66\u4E60\u8005\u6210\u5C31\r\n  {\r\n    id: 'fast_learner',\r\n    type: 'fast_learner',\r\n    level: 'silver',\r\n    name: '\u5FEB\u901F\u5B66\u4E60\u8005',\r\n    description: '\u5728\u4E00\u5929\u5185\u5B8C\u62105\u4E2A\u77E5\u8BC6\u70B9',\r\n    icon: '\u26A1',\r\n    requirement: 5,\r\n    points: 120,\r\n  },\r\n];\r\n\r\n", "// backend/src/services/achievementService.ts\r\nimport mongoose from 'mongoose';\r\nimport UserAchievement, { ACHIEVEMENT_DEFINITIONS, AchievementType, IAchievementDefinition } from '../models/Achievement';\r\nimport UserProgress from '../models/UserProgress';\r\nimport StudySession from '../models/StudySession';\r\n\r\n/**\r\n * \u6210\u5C31\u670D\u52A1\r\n */\r\nexport class AchievementService {\r\n  /**\r\n   * \u521D\u59CB\u5316\u7528\u6237\u6210\u5C31\r\n   */\r\n  static async initializeUserAchievements(userId: mongoose.Types.ObjectId) {\r\n    const existingAchievements = await UserAchievement.find({ userId });\r\n    \r\n    if (existingAchievements.length > 0) {\r\n      return; // \u5DF2\u521D\u59CB\u5316\r\n    }\r\n\r\n    // \u4E3A\u7528\u6237\u521B\u5EFA\u6240\u6709\u6210\u5C31\u8BB0\u5F55\r\n    const achievements = ACHIEVEMENT_DEFINITIONS.map(def => ({\r\n      userId,\r\n      achievementId: def.id,\r\n      achievementType: def.type,\r\n      achievementLevel: def.level,\r\n      progress: 0,\r\n      maxProgress: def.requirement,\r\n      completed: false,\r\n    }));\r\n\r\n    await UserAchievement.insertMany(achievements);\r\n    console.log(`[Achievement] \u4E3A\u7528\u6237 ${userId} \u521D\u59CB\u5316\u4E86 ${achievements.length} \u4E2A\u6210\u5C31`);\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u6210\u5C31\u8FDB\u5EA6\r\n   */\r\n  static async updateAchievementProgress(\r\n    userId: mongoose.Types.ObjectId,\r\n    type: AchievementType,\r\n    progress: number\r\n  ) {\r\n    const achievements = await UserAchievement.find({\r\n      userId,\r\n      achievementType: type,\r\n      completed: false,\r\n    });\r\n\r\n    const newlyUnlocked: IAchievementDefinition[] = [];\r\n\r\n    for (const achievement of achievements) {\r\n      const def = ACHIEVEMENT_DEFINITIONS.find(d => d.id === achievement.achievementId);\r\n      if (!def) continue;\r\n\r\n      achievement.progress = Math.min(progress, def.requirement);\r\n\r\n      if (achievement.progress >= def.requirement && !achievement.completed) {\r\n        achievement.completed = true;\r\n        achievement.unlockedAt = new Date();\r\n        newlyUnlocked.push(def);\r\n        console.log(`[Achievement] \u7528\u6237 ${userId} \u89E3\u9501\u6210\u5C31: ${def.name}`);\r\n      }\r\n\r\n      await achievement.save();\r\n    }\r\n\r\n    return newlyUnlocked;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u5E76\u66F4\u65B0\u5B66\u4E60\u65F6\u957F\u6210\u5C31\r\n   */\r\n  static async checkStudyTimeAchievements(userId: mongoose.Types.ObjectId) {\r\n    const sessions = await StudySession.find({ userId, endTime: { $ne: null } });\r\n    const totalSeconds = sessions.reduce((sum, session) => sum + session.duration, 0);\r\n\r\n    return await this.updateAchievementProgress(userId, 'study_time', totalSeconds);\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u5E76\u66F4\u65B0\u77E5\u8BC6\u70B9\u638C\u63E1\u6210\u5C31\r\n   */\r\n  static async checkKnowledgeMasterAchievements(userId: mongoose.Types.ObjectId) {\r\n    const completedCount = await UserProgress.countDocuments({\r\n      userId,\r\n      status: 'completed',\r\n    });\r\n\r\n    return await this.updateAchievementProgress(userId, 'knowledge_master', completedCount);\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u5E76\u66F4\u65B0\u8FDE\u7EED\u5B66\u4E60\u6210\u5C31\r\n   */\r\n  static async checkStreakAchievements(userId: mongoose.Types.ObjectId) {\r\n    const sessions = await StudySession.find({\r\n      userId,\r\n      endTime: { $ne: null },\r\n    }).sort({ startTime: -1 });\r\n\r\n    if (sessions.length === 0) return [];\r\n\r\n    // \u8BA1\u7B97\u8FDE\u7EED\u5B66\u4E60\u5929\u6570\r\n    let streak = 1;\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n\r\n    const lastSessionDate = new Date(sessions[0].startTime);\r\n    lastSessionDate.setHours(0, 0, 0, 0);\r\n\r\n    // \u68C0\u67E5\u6700\u8FD1\u4E00\u6B21\u5B66\u4E60\u662F\u5426\u662F\u4ECA\u5929\u6216\u6628\u5929\r\n    const daysDiff = Math.floor((today.getTime() - lastSessionDate.getTime()) / (1000 * 60 * 60 * 24));\r\n    if (daysDiff > 1) {\r\n      streak = 0; // \u4E2D\u65AD\u4E86\r\n    } else {\r\n      const dates = new Set<string>();\r\n      dates.add(lastSessionDate.toDateString());\r\n\r\n      for (let i = 1; i < sessions.length; i++) {\r\n        const sessionDate = new Date(sessions[i].startTime);\r\n        sessionDate.setHours(0, 0, 0, 0);\r\n        const dateStr = sessionDate.toDateString();\r\n\r\n        if (!dates.has(dateStr)) {\r\n          const prevDate = new Date(sessions[i - 1].startTime);\r\n          prevDate.setHours(0, 0, 0, 0);\r\n          const diff = Math.floor((prevDate.getTime() - sessionDate.getTime()) / (1000 * 60 * 60 * 24));\r\n\r\n          if (diff === 1) {\r\n            dates.add(dateStr);\r\n            streak++;\r\n          } else {\r\n            break; // \u4E2D\u65AD\u4E86\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return await this.updateAchievementProgress(userId, 'streak', streak);\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u5E76\u66F4\u65B0\u5B8C\u7F8E\u7B54\u9898\u6210\u5C31\r\n   */\r\n  static async checkPerfectQuizAchievements(userId: mongoose.Types.ObjectId, score: number) {\r\n    if (score < 100) return [];\r\n\r\n    const achievement = await UserAchievement.findOne({\r\n      userId,\r\n      achievementType: 'quiz_perfect',\r\n      completed: false,\r\n    }).sort({ maxProgress: 1 });\r\n\r\n    if (achievement) {\r\n      achievement.progress += 1;\r\n      if (achievement.progress >= achievement.maxProgress) {\r\n        achievement.completed = true;\r\n        achievement.unlockedAt = new Date();\r\n        await achievement.save();\r\n\r\n        const def = ACHIEVEMENT_DEFINITIONS.find(d => d.id === achievement.achievementId);\r\n        return def ? [def] : [];\r\n      }\r\n      await achievement.save();\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u7528\u6237\u6240\u6709\u6210\u5C31\r\n   */\r\n  static async getUserAchievements(userId: mongoose.Types.ObjectId) {\r\n    const userAchievements = await UserAchievement.find({ userId });\r\n\r\n    return userAchievements.map(ua => {\r\n      const def = ACHIEVEMENT_DEFINITIONS.find(d => d.id === ua.achievementId);\r\n      return {\r\n        ...ua.toObject(),\r\n        definition: def,\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u7528\u6237\u6210\u5C31\u7EDF\u8BA1\r\n   */\r\n  static async getUserAchievementStats(userId: mongoose.Types.ObjectId) {\r\n    const total = ACHIEVEMENT_DEFINITIONS.length;\r\n    const completed = await UserAchievement.countDocuments({ userId, completed: true });\r\n    const totalPoints = await UserAchievement.aggregate([\r\n      { $match: { userId, completed: true } },\r\n      {\r\n        $lookup: {\r\n          from: 'achievements',\r\n          localField: 'achievementId',\r\n          foreignField: 'id',\r\n          as: 'def',\r\n        },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          points: { $sum: '$points' },\r\n        },\r\n      },\r\n    ]);\r\n\r\n    const points = totalPoints.length > 0 ? totalPoints[0].points : 0;\r\n\r\n    // \u8BA1\u7B97\u7528\u6237\u7B49\u7EA7\uFF08\u57FA\u4E8E\u79EF\u5206\uFF09\r\n    const level = Math.floor(points / 100) + 1;\r\n\r\n    return {\r\n      total,\r\n      completed,\r\n      percentage: Math.round((completed / total) * 100),\r\n      points,\r\n      level,\r\n    };\r\n  }\r\n}\r\n\r\n", "// backend/src/utils/response.ts\r\nimport { Response } from 'express';\r\n\r\n/**\r\n * \u7EDF\u4E00\u7684 API \u54CD\u5E94\u683C\u5F0F\r\n */\r\nexport interface APIResponse<T = any> {\r\n  success: boolean;\r\n  message?: string;\r\n  data?: T;\r\n  error?: string;\r\n  timestamp?: string;\r\n}\r\n\r\n/**\r\n * \u6210\u529F\u54CD\u5E94\r\n */\r\nexport const successResponse = <T = any>(\r\n  res: Response,\r\n  data?: T,\r\n  message: string = '\u64CD\u4F5C\u6210\u529F',\r\n  statusCode: number = 200\r\n): Response => {\r\n  return res.status(statusCode).json({\r\n    success: true,\r\n    message,\r\n    data,\r\n    timestamp: new Date().toISOString(),\r\n  } as APIResponse<T>);\r\n};\r\n\r\n/**\r\n * \u9519\u8BEF\u54CD\u5E94\r\n */\r\nexport const errorResponse = (\r\n  res: Response,\r\n  message: string = '\u64CD\u4F5C\u5931\u8D25',\r\n  statusCode: number = 500,\r\n  error?: string\r\n): Response => {\r\n  return res.status(statusCode).json({\r\n    success: false,\r\n    message,\r\n    ...(error && { error }),\r\n    timestamp: new Date().toISOString(),\r\n  } as APIResponse);\r\n};\r\n\r\n/**\r\n * \u5206\u9875\u54CD\u5E94\r\n */\r\nexport interface PaginatedResponse<T> {\r\n  items: T[];\r\n  pagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\nexport const paginatedResponse = <T = any>(\r\n  res: Response,\r\n  items: T[],\r\n  page: number,\r\n  limit: number,\r\n  total: number,\r\n  message: string = '\u83B7\u53D6\u6210\u529F'\r\n): Response => {\r\n  return res.status(200).json({\r\n    success: true,\r\n    message,\r\n    data: {\r\n      items,\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        total,\r\n        totalPages: Math.ceil(total / limit),\r\n      },\r\n    } as PaginatedResponse<T>,\r\n    timestamp: new Date().toISOString(),\r\n  });\r\n};\r\n\r\n", "// backend/src/routes/learning-report.ts\r\nimport { Router, Request, Response } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { generateLearningReport } from '../services/ai';\r\nimport { successResponse, errorResponse } from '../utils/response';\r\nimport UserProgress from '../models/UserProgress';\r\nimport StudySession from '../models/StudySession';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * \u751F\u6210 AI \u5B66\u4E60\u62A5\u544A\r\n */\r\nrouter.post('/generate', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = (req as any).user._id;\r\n    const userName = (req as any).user.username;\r\n\r\n    // \u6536\u96C6\u5B66\u4E60\u6570\u636E\r\n    const [completedProgress, totalPoints, studySessions, wrongQuestions] = await Promise.all([\r\n      UserProgress.find({ userId, status: 'completed' }),\r\n      KnowledgePoint.countDocuments(),\r\n      StudySession.find({ userId, endTime: { $ne: null } }),\r\n      WrongQuestion.find({ userId }),\r\n    ]);\r\n\r\n    // \u8BA1\u7B97\u603B\u5B66\u4E60\u65F6\u957F\r\n    const totalTime = studySessions.reduce((sum, session) => sum + session.duration, 0);\r\n\r\n    // \u5206\u6790\u8584\u5F31\u9886\u57DF\r\n    const subjectStats = wrongQuestions.reduce((acc: any, wq) => {\r\n      acc[wq.subject] = (acc[wq.subject] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    const weakAreas = Object.entries(subjectStats)\r\n      .sort((a: any, b: any) => b[1] - a[1])\r\n      .slice(0, 3)\r\n      .map(([subject]) => subject);\r\n\r\n    // \u5206\u6790\u64C5\u957F\u9886\u57DF\r\n    const completedBySubject = completedProgress.reduce((acc: any, progress) => {\r\n      const point = progress.pointId as any;\r\n      if (point && point.subject) {\r\n        acc[point.subject] = (acc[point.subject] || 0) + 1;\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    const strongAreas = Object.entries(completedBySubject)\r\n      .sort((a: any, b: any) => b[1] - a[1])\r\n      .slice(0, 3)\r\n      .map(([subject]) => subject);\r\n\r\n    // \u8FD1\u671F\u5B66\u4E60\u8FDB\u5C55\r\n    const recentCompleted = completedProgress\r\n      .sort((a, b) => new Date((b as any).updatedAt).getTime() - new Date((a as any).updatedAt).getTime())\r\n      .slice(0, 5)\r\n      .map((progress: any) => (progress.pointId as any)?.title || '\u672A\u77E5\u77E5\u8BC6\u70B9');\r\n\r\n    // \u751F\u6210 AI \u62A5\u544A\r\n    const report = await generateLearningReport(userName, {\r\n      totalTime,\r\n      completedPoints: completedProgress.length,\r\n      totalPoints,\r\n      weakAreas,\r\n      strongAreas,\r\n      recentProgress: recentCompleted,\r\n    });\r\n\r\n    return successResponse(res, {\r\n      report,\r\n      stats: {\r\n        totalTime,\r\n        completedPoints: completedProgress.length,\r\n        totalPoints,\r\n        completionRate: Math.round((completedProgress.length / totalPoints) * 100),\r\n        weakAreas,\r\n        strongAreas,\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error('[Learning Report] \u751F\u6210\u62A5\u544A\u5931\u8D25:', error.message);\r\n    return errorResponse(res, '\u751F\u6210\u5B66\u4E60\u62A5\u544A\u5931\u8D25', 500, error.message);\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u5B66\u4E60\u7EDF\u8BA1\u6570\u636E\r\n */\r\nrouter.get('/stats', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = (req as any).user._id;\r\n\r\n    // \u6700\u8FD17\u5929\u7684\u65F6\u95F4\u8303\u56F4\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n\r\n    const [completedCount, totalPoints, totalTimeResult, recentTimeResult, sessionCount, wrongQuestionsCount] = await Promise.all([\r\n      UserProgress.countDocuments({ userId, status: 'completed' }),\r\n      KnowledgePoint.countDocuments(),\r\n      // \u4F7F\u7528\u805A\u5408\u8BA1\u7B97\u603B\u5B66\u4E60\u65F6\u957F\uFF0C\u800C\u4E0D\u662F\u83B7\u53D6\u6240\u6709\u8BB0\u5F55\r\n      StudySession.aggregate([\r\n        { $match: { userId, endTime: { $ne: null } } },\r\n        { $group: { _id: null, totalDuration: { $sum: '$duration' } } }\r\n      ]),\r\n      // \u4F7F\u7528\u805A\u5408\u8BA1\u7B97\u6700\u8FD17\u5929\u7684\u5B66\u4E60\u65F6\u957F\r\n      StudySession.aggregate([\r\n        { $match: { userId, endTime: { $ne: null }, startTime: { $gte: sevenDaysAgo } } },\r\n        { $group: { _id: null, totalDuration: { $sum: '$duration' } } }\r\n      ]),\r\n      // \u8BA1\u7B97\u603B\u4F1A\u8BDD\u6570\r\n      StudySession.countDocuments({ userId, endTime: { $ne: null } }),\r\n      WrongQuestion.countDocuments({ userId, mastered: false }),\r\n    ]);\r\n\r\n    const totalTime = totalTimeResult.length > 0 ? totalTimeResult[0].totalDuration : 0;\r\n    const recentTime = recentTimeResult.length > 0 ? recentTimeResult[0].totalDuration : 0;\r\n\r\n    return successResponse(res, {\r\n      totalTime,\r\n      recentTime,\r\n      completedPoints: completedCount,\r\n      totalPoints,\r\n      completionRate: totalPoints > 0 ? Math.round((completedCount / totalPoints) * 100) : 0,\r\n      pendingWrongQuestions: wrongQuestionsCount,\r\n      totalSessions: sessionCount,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('[Learning Report] \u83B7\u53D6\u7EDF\u8BA1\u5931\u8D25:', error.message);\r\n    return errorResponse(res, '\u83B7\u53D6\u5B66\u4E60\u7EDF\u8BA1\u5931\u8D25', 500, error.message);\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import { Router } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { getAnalytics, trackEvent } from '../middleware/analytics';\r\nimport { successResponse, errorResponse } from '../utils/response';\r\nimport User from '../models/User';\r\nimport StudySession from '../models/StudySession';\r\nimport UserProgress from '../models/UserProgress';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * \u83B7\u53D6\u7CFB\u7EDF\u5206\u6790\u6570\u636E\uFF08\u7BA1\u7406\u5458\uFF09\r\n * GET /api/analytics/system\r\n */\r\nrouter.get('/system', authMiddleware, async (req, res) => {\r\n  try {\r\n    const analytics = getAnalytics();\r\n    successResponse(res, analytics);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u7CFB\u7EDF\u5206\u6790\u6570\u636E\u5931\u8D25:', error);\r\n    errorResponse(res, '\u83B7\u53D6\u5206\u6790\u6570\u636E\u5931\u8D25');\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u6570\u636E\r\n * GET /api/analytics/users\r\n */\r\nrouter.get('/users', authMiddleware, async (req, res) => {\r\n  try {\r\n    const totalUsers = await User.countDocuments();\r\n    const activeUsers = await StudySession.distinct('userId', {\r\n      startTime: { $gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) },\r\n    }).then(ids => ids.length);\r\n\r\n    const newUsersToday = await User.countDocuments({\r\n      createdAt: { $gte: new Date(new Date().setHours(0, 0, 0, 0)) },\r\n    });\r\n\r\n    successResponse(res, {\r\n      total: totalUsers,\r\n      active: activeUsers,\r\n      newToday: newUsersToday,\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    errorResponse(res, '\u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u5931\u8D25');\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u5B66\u4E60\u7EDF\u8BA1\u6570\u636E\r\n * GET /api/analytics/learning\r\n */\r\nrouter.get('/learning', authMiddleware, async (req, res) => {\r\n  try {\r\n    const totalSessions = await StudySession.countDocuments();\r\n    \r\n    // \u603B\u5B66\u4E60\u65F6\u957F\uFF08\u79D2\uFF09\r\n    const totalDuration = await StudySession.aggregate([\r\n      { $group: { _id: null, total: { $sum: '$duration' } } },\r\n    ]).then(result => result[0]?.total || 0);\r\n\r\n    // \u5B8C\u6210\u7684\u77E5\u8BC6\u70B9\u6570\r\n    const completedPoints = await UserProgress.countDocuments({ status: 'completed' });\r\n\r\n    // \u9519\u9898\u603B\u6570\r\n    const totalWrongQuestions = await WrongQuestion.countDocuments();\r\n\r\n    // \u4ECA\u65E5\u5B66\u4E60\u6570\u636E\r\n    const todayStart = new Date(new Date().setHours(0, 0, 0, 0));\r\n    const todaySessions = await StudySession.countDocuments({\r\n      startTime: { $gte: todayStart },\r\n    });\r\n\r\n    const todayDuration = await StudySession.aggregate([\r\n      { $match: { startTime: { $gte: todayStart } } },\r\n      { $group: { _id: null, total: { $sum: '$duration' } } },\r\n    ]).then(result => result[0]?.total || 0);\r\n\r\n    successResponse(res, {\r\n      all: {\r\n        sessions: totalSessions,\r\n        duration: totalDuration,\r\n        completedPoints,\r\n        wrongQuestions: totalWrongQuestions,\r\n      },\r\n      today: {\r\n        sessions: todaySessions,\r\n        duration: todayDuration,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5B66\u4E60\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    errorResponse(res, '\u83B7\u53D6\u5B66\u4E60\u7EDF\u8BA1\u5931\u8D25');\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u70ED\u95E8\u77E5\u8BC6\u70B9\r\n * GET /api/analytics/popular-topics\r\n */\r\nrouter.get('/popular-topics', authMiddleware, async (req, res) => {\r\n  try {\r\n    const popularTopics = await StudySession.aggregate([\r\n      { $match: { pointId: { $exists: true } } },\r\n      { $group: { _id: '$pointId', count: { $sum: 1 } } },\r\n      { $sort: { count: -1 } },\r\n      { $limit: 10 },\r\n      {\r\n        $lookup: {\r\n          from: 'knowledgepoints',\r\n          localField: '_id',\r\n          foreignField: '_id',\r\n          as: 'point',\r\n        },\r\n      },\r\n      { $unwind: '$point' },\r\n      {\r\n        $project: {\r\n          _id: 1,\r\n          count: 1,\r\n          title: '$point.title',\r\n          subject: '$point.subject',\r\n        },\r\n      },\r\n    ]);\r\n\r\n    successResponse(res, popularTopics);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u70ED\u95E8\u77E5\u8BC6\u70B9\u5931\u8D25:', error);\r\n    errorResponse(res, '\u83B7\u53D6\u70ED\u95E8\u77E5\u8BC6\u70B9\u5931\u8D25');\r\n  }\r\n});\r\n\r\n/**\r\n * \u8BB0\u5F55\u81EA\u5B9A\u4E49\u4E8B\u4EF6\r\n * POST /api/analytics/track\r\n */\r\nrouter.post('/track', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { event, metadata } = req.body;\r\n    const userId = (req as any).user.id;\r\n\r\n    trackEvent(event, userId, metadata);\r\n\r\n    successResponse(res, { message: '\u4E8B\u4EF6\u5DF2\u8BB0\u5F55' });\r\n  } catch (error) {\r\n    console.error('\u8BB0\u5F55\u4E8B\u4EF6\u5931\u8D25:', error);\r\n    errorResponse(res, '\u8BB0\u5F55\u4E8B\u4EF6\u5931\u8D25');\r\n  }\r\n});\r\n\r\n/**\r\n * \u83B7\u53D6\u7528\u6237\u6D3B\u8DC3\u5EA6\uFF08\u6309\u5C0F\u65F6\uFF09\r\n * GET /api/analytics/hourly-activity\r\n */\r\nrouter.get('/hourly-activity', authMiddleware, async (req, res) => {\r\n  try {\r\n    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\r\n\r\n    const activity = await StudySession.aggregate([\r\n      { $match: { startTime: { $gte: sevenDaysAgo } } },\r\n      {\r\n        $project: {\r\n          hour: { $hour: '$startTime' },\r\n        },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: '$hour',\r\n          count: { $sum: 1 },\r\n        },\r\n      },\r\n      { $sort: { _id: 1 } },\r\n    ]);\r\n\r\n    // \u586B\u5145\u6240\u6709\u5C0F\u65F6\r\n    const hourlyData = Array.from({ length: 24 }, (_, hour) => ({\r\n      hour,\r\n      count: activity.find(a => a._id === hour)?.count || 0,\r\n    }));\r\n\r\n    successResponse(res, hourlyData);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5C0F\u65F6\u6D3B\u8DC3\u5EA6\u5931\u8D25:', error);\r\n    errorResponse(res, '\u83B7\u53D6\u6D3B\u8DC3\u5EA6\u6570\u636E\u5931\u8D25');\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import { Request, Response, NextFunction } from 'express';\r\n\r\n/**\r\n * \u7528\u6237\u884C\u4E3A\u5206\u6790\u4E2D\u95F4\u4EF6\r\n * \u6536\u96C6\u7528\u6237\u884C\u4E3A\u6570\u636E\u7528\u4E8E\u540E\u7EED\u5206\u6790\r\n */\r\n\r\ninterface AnalyticsEvent {\r\n  userId?: string;\r\n  sessionId: string;\r\n  event: string;\r\n  path: string;\r\n  method: string;\r\n  timestamp: Date;\r\n  duration?: number;\r\n  statusCode?: number;\r\n  userAgent?: string;\r\n  ip?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n// \u7B80\u5355\u7684\u5185\u5B58\u5B58\u50A8\uFF08\u751F\u4EA7\u73AF\u5883\u5E94\u4F7F\u7528\u6570\u636E\u5E93\u6216\u5206\u6790\u670D\u52A1\uFF09\r\nconst analyticsEvents: AnalyticsEvent[] = [];\r\nconst MAX_EVENTS = 10000; // \u6700\u591A\u4FDD\u5B58 10000 \u6761\u4E8B\u4EF6\r\n\r\n/**\r\n * \u5206\u6790\u4E2D\u95F4\u4EF6\r\n */\r\nexport const analyticsMiddleware = (req: Request, res: Response, next: NextFunction) => {\r\n  const startTime = Date.now();\r\n  const sessionId = req.headers['x-session-id'] as string || generateSessionId();\r\n  \r\n  // \u8BB0\u5F55\u8BF7\u6C42\u5F00\u59CB\r\n  const event: AnalyticsEvent = {\r\n    userId: (req as any).user?.id,\r\n    sessionId,\r\n    event: 'api_request',\r\n    path: req.path,\r\n    method: req.method,\r\n    timestamp: new Date(),\r\n    userAgent: req.headers['user-agent'],\r\n    ip: req.ip || req.connection.remoteAddress,\r\n  };\r\n\r\n  // \u76D1\u542C\u54CD\u5E94\u5B8C\u6210\r\n  res.on('finish', () => {\r\n    event.duration = Date.now() - startTime;\r\n    event.statusCode = res.statusCode;\r\n    \r\n    // \u4FDD\u5B58\u4E8B\u4EF6\r\n    saveEvent(event);\r\n  });\r\n\r\n  next();\r\n};\r\n\r\n/**\r\n * \u4FDD\u5B58\u5206\u6790\u4E8B\u4EF6\r\n */\r\nconst saveEvent = (event: AnalyticsEvent) => {\r\n  analyticsEvents.push(event);\r\n  \r\n  // \u9650\u5236\u6570\u7EC4\u5927\u5C0F\r\n  if (analyticsEvents.length > MAX_EVENTS) {\r\n    analyticsEvents.shift();\r\n  }\r\n};\r\n\r\n/**\r\n * \u751F\u6210\u4F1A\u8BDD ID\r\n */\r\nconst generateSessionId = (): string => {\r\n  return `${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\r\n};\r\n\r\n/**\r\n * \u83B7\u53D6\u7EDF\u8BA1\u6570\u636E\r\n */\r\nexport const getAnalytics = () => {\r\n  const now = Date.now();\r\n  const oneHourAgo = now - 60 * 60 * 1000;\r\n  const oneDayAgo = now - 24 * 60 * 60 * 1000;\r\n\r\n  const recentEvents = analyticsEvents.filter(e => e.timestamp.getTime() > oneHourAgo);\r\n  const todayEvents = analyticsEvents.filter(e => e.timestamp.getTime() > oneDayAgo);\r\n\r\n  return {\r\n    total: analyticsEvents.length,\r\n    lastHour: {\r\n      count: recentEvents.length,\r\n      uniqueUsers: new Set(recentEvents.map(e => e.userId).filter(Boolean)).size,\r\n      averageDuration: calculateAverage(recentEvents.map(e => e.duration).filter(Boolean) as number[]),\r\n    },\r\n    today: {\r\n      count: todayEvents.length,\r\n      uniqueUsers: new Set(todayEvents.map(e => e.userId).filter(Boolean)).size,\r\n      averageDuration: calculateAverage(todayEvents.map(e => e.duration).filter(Boolean) as number[]),\r\n    },\r\n    topPaths: getTopPaths(todayEvents),\r\n    errorRate: calculateErrorRate(todayEvents),\r\n  };\r\n};\r\n\r\n/**\r\n * \u8BA1\u7B97\u5E73\u5747\u503C\r\n */\r\nconst calculateAverage = (numbers: number[]): number => {\r\n  if (numbers.length === 0) return 0;\r\n  return numbers.reduce((sum, n) => sum + n, 0) / numbers.length;\r\n};\r\n\r\n/**\r\n * \u83B7\u53D6\u8BBF\u95EE\u6700\u591A\u7684\u8DEF\u5F84\r\n */\r\nconst getTopPaths = (events: AnalyticsEvent[], limit = 10) => {\r\n  const pathCounts = new Map<string, number>();\r\n  \r\n  events.forEach(e => {\r\n    pathCounts.set(e.path, (pathCounts.get(e.path) || 0) + 1);\r\n  });\r\n\r\n  return Array.from(pathCounts.entries())\r\n    .sort((a, b) => b[1] - a[1])\r\n    .slice(0, limit)\r\n    .map(([path, count]) => ({ path, count }));\r\n};\r\n\r\n/**\r\n * \u8BA1\u7B97\u9519\u8BEF\u7387\r\n */\r\nconst calculateErrorRate = (events: AnalyticsEvent[]): number => {\r\n  if (events.length === 0) return 0;\r\n  \r\n  const errors = events.filter(e => e.statusCode && e.statusCode >= 400).length;\r\n  return (errors / events.length) * 100;\r\n};\r\n\r\n/**\r\n * \u8BB0\u5F55\u81EA\u5B9A\u4E49\u4E8B\u4EF6\r\n */\r\nexport const trackEvent = (\r\n  eventName: string,\r\n  userId?: string,\r\n  metadata?: Record<string, any>\r\n) => {\r\n  const event: AnalyticsEvent = {\r\n    userId,\r\n    sessionId: generateSessionId(),\r\n    event: eventName,\r\n    path: '/custom',\r\n    method: 'TRACK',\r\n    timestamp: new Date(),\r\n    metadata,\r\n  };\r\n\r\n  saveEvent(event);\r\n};\r\n\r\n", "import express, { Request, Response } from 'express';\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport bcrypt from 'bcryptjs';\nimport User from '../models/User';\nimport StudySession from '../models/StudySession';\nimport UserProgress from '../models/UserProgress';\nimport { authMiddleware } from '../middleware/auth';\n\nconst router = express.Router();\n\n// \u914D\u7F6E\u6587\u4EF6\u4E0A\u4F20\nconst storage = multer.diskStorage({\n    destination: function (req: Request, file: Express.Multer.File, cb: (error: Error | null, destination: string) => void) {\n        const uploadDir = path.join(__dirname, '../../uploads/avatars');\n        if (!fs.existsSync(uploadDir)) {\n            fs.mkdirSync(uploadDir, { recursive: true });\n        }\n        cb(null, uploadDir);\n    },\n    filename: function (req: Request, file: Express.Multer.File, cb: (error: Error | null, filename: string) => void) {\n        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n        const ext = path.extname(file.originalname);\n        cb(null, `avatar-${req.user?._id}-${uniqueSuffix}${ext}`);\n    }\n});\n\nconst upload = multer({\n    storage: storage,\n    limits: {\n        fileSize: 2 * 1024 * 1024 // 2MB\n    },\n    fileFilter: function (req: Request, file: Express.Multer.File, cb: multer.FileFilterCallback) {\n        const allowedTypes = /jpeg|jpg|png|gif|webp/;\n        const extname = allowedTypes.test(path.extname(file.originalname).toLowerCase());\n        const mimetype = allowedTypes.test(file.mimetype);\n        \n        if (mimetype && extname) {\n            return cb(null, true);\n        } else {\n            cb(new Error('\u53EA\u652F\u6301 JPEG\u3001PNG\u3001GIF\u3001WebP \u683C\u5F0F\u7684\u56FE\u7247'));\n        }\n    }\n});\n\n// \u4E0A\u4F20\u5934\u50CF\nrouter.post('/avatar', authMiddleware, upload.single('avatar'), async (req: Request, res: Response) => {\n    try {\n        if (!req.file) {\n            return res.status(400).json({ message: '\u8BF7\u9009\u62E9\u8981\u4E0A\u4F20\u7684\u56FE\u7247' });\n        }\n        \n        const userId = req.user?._id;\n        const avatarUrl = `/uploads/avatars/${req.file.filename}`;\n        \n        // \u5220\u9664\u65E7\u5934\u50CF\uFF08\u5982\u679C\u5B58\u5728\u4E14\u4E0D\u662F\u7B2C\u4E09\u65B9\u5934\u50CF\uFF09\n        const user = await User.findById(userId);\n        if (user?.avatarUrl && user.avatarUrl.startsWith('/uploads/')) {\n            const oldAvatarPath = path.join(__dirname, '../../', user.avatarUrl);\n            if (fs.existsSync(oldAvatarPath)) {\n                fs.unlinkSync(oldAvatarPath);\n            }\n        }\n        \n        // \u66F4\u65B0\u6570\u636E\u5E93\n        await User.findByIdAndUpdate(userId, { avatarUrl });\n        \n        console.log('\u7528\u6237\u4E0A\u4F20\u5934\u50CF', {\n            userId,\n            filename: req.file.filename\n        });\n        \n        res.json({\n            message: '\u5934\u50CF\u4E0A\u4F20\u6210\u529F',\n            avatarUrl\n        });\n    } catch (error: any) {\n        console.error('\u5934\u50CF\u4E0A\u4F20\u5931\u8D25', error, {\n            userId: req.user?._id,\n            errorMessage: error.message\n        });\n        res.status(500).json({ message: error.message || '\u5934\u50CF\u4E0A\u4F20\u5931\u8D25' });\n    }\n});\n\n// \u66F4\u65B0\u4E2A\u4EBA\u8D44\u6599\nrouter.put('/profile', authMiddleware, async (req: Request, res: Response) => {\n    try {\n        const userId = req.user?._id;\n        const { username } = req.body;\n        \n        if (!username || username.trim().length < 2) {\n            return res.status(400).json({ message: '\u7528\u6237\u540D\u81F3\u5C11\u9700\u8981 2 \u4E2A\u5B57\u7B26' });\n        }\n        \n        if (username.length > 20) {\n            return res.status(400).json({ message: '\u7528\u6237\u540D\u4E0D\u80FD\u8D85\u8FC7 20 \u4E2A\u5B57\u7B26' });\n        }\n        \n        const user = await User.findByIdAndUpdate(\n            userId,\n            { username: username.trim() },\n            { new: true }\n        ).select('-passwordHash');\n        \n        if (!user) {\n            return res.status(404).json({ message: '\u7528\u6237\u4E0D\u5B58\u5728' });\n        }\n        \n        console.log('\u7528\u6237\u66F4\u65B0\u4E2A\u4EBA\u8D44\u6599', {\n            userId,\n            username: user.username\n        });\n        \n        res.json({\n            message: '\u4E2A\u4EBA\u8D44\u6599\u66F4\u65B0\u6210\u529F',\n            user: {\n                _id: user._id,\n                username: user.username,\n                email: user.email,\n                avatarUrl: user.avatarUrl\n            }\n        });\n    } catch (error: any) {\n        console.error('\u66F4\u65B0\u4E2A\u4EBA\u8D44\u6599\u5931\u8D25', error, {\n            userId: req.user?._id,\n            errorMessage: error.message\n        });\n        res.status(500).json({ message: '\u66F4\u65B0\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5' });\n    }\n});\n\n// \u4FEE\u6539\u5BC6\u7801\nrouter.put('/password', authMiddleware, async (req: Request, res: Response) => {\n    try {\n        const userId = req.user?._id;\n        const { currentPassword, newPassword } = req.body;\n        \n        if (!currentPassword || !newPassword) {\n            return res.status(400).json({ message: '\u8BF7\u8F93\u5165\u5F53\u524D\u5BC6\u7801\u548C\u65B0\u5BC6\u7801' });\n        }\n        \n        if (newPassword.length < 6) {\n            return res.status(400).json({ message: '\u65B0\u5BC6\u7801\u81F3\u5C11\u9700\u8981 6 \u4F4D' });\n        }\n        \n        // \u83B7\u53D6\u7528\u6237\uFF08\u5305\u542B\u5BC6\u7801\uFF09\n        const user = await User.findById(userId).select('+passwordHash');\n        if (!user) {\n            return res.status(404).json({ message: '\u7528\u6237\u4E0D\u5B58\u5728' });\n        }\n        \n        // \u68C0\u67E5\u662F\u5426\u8BBE\u7F6E\u4E86\u5BC6\u7801\uFF08\u7B2C\u4E09\u65B9\u767B\u5F55\u7528\u6237\u53EF\u80FD\u6CA1\u6709\u5BC6\u7801\uFF09\n        if (!user.passwordHash) {\n            return res.status(400).json({ message: '\u60A8\u7684\u8D26\u53F7\u672A\u8BBE\u7F6E\u5BC6\u7801\uFF0C\u65E0\u6CD5\u4FEE\u6539' });\n        }\n        \n        // \u9A8C\u8BC1\u5F53\u524D\u5BC6\u7801\n        const isMatch = await bcrypt.compare(currentPassword, user.passwordHash);\n        if (!isMatch) {\n            return res.status(400).json({ message: '\u5F53\u524D\u5BC6\u7801\u9519\u8BEF' });\n        }\n        \n        // \u52A0\u5BC6\u65B0\u5BC6\u7801\n        const hashedPassword = await bcrypt.hash(newPassword, 10);\n        user.passwordHash = hashedPassword;\n        await user.save();\n        \n        console.log('\u7528\u6237\u4FEE\u6539\u5BC6\u7801', { userId });\n        \n        res.json({ message: '\u5BC6\u7801\u4FEE\u6539\u6210\u529F' });\n    } catch (error: any) {\n        console.error('\u4FEE\u6539\u5BC6\u7801\u5931\u8D25', error, {\n            userId: req.user?._id,\n            errorMessage: error.message\n        });\n        res.status(500).json({ message: '\u4FEE\u6539\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5' });\n    }\n});\n\n// \u6E05\u9664\u7528\u6237\u5B66\u4E60\u6570\u636E\nrouter.delete('/learning-data', authMiddleware, async (req: Request, res: Response) => {\n    try {\n        const userId = req.user?._id;\n        \n        // \u5220\u9664\u5B66\u4E60\u8BB0\u5F55\n        await StudySession.deleteMany({ userId });\n        \n        // \u91CD\u7F6E\u5B66\u4E60\u8FDB\u5EA6\n        await UserProgress.updateMany(\n            { userId },\n            { \n                status: 'not_started',\n                masteryLevel: 0,\n                lastStudiedAt: null,\n                completedAt: null\n            }\n        );\n        \n        console.log('\u7528\u6237\u6E05\u9664\u5B66\u4E60\u6570\u636E', { userId });\n        \n        res.json({ message: '\u5B66\u4E60\u6570\u636E\u5DF2\u6E05\u9664' });\n    } catch (error: any) {\n        console.error('\u6E05\u9664\u5B66\u4E60\u6570\u636E\u5931\u8D25', error, {\n            userId: req.user?._id,\n            errorMessage: error.message\n        });\n        res.status(500).json({ message: '\u6E05\u9664\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5' });\n    }\n});\n\n// \u83B7\u53D6\u7528\u6237\u4E2A\u4EBA\u7EDF\u8BA1\u6570\u636E\nrouter.get('/me/stats', authMiddleware, async (req: Request, res: Response) => {\n    try {\n        const userId = req.user?._id;\n\n        // \u83B7\u53D6\u603B\u5B66\u4E60\u65F6\u957F\uFF08\u79D2\uFF09\n        const totalDuration = await StudySession.aggregate([\n            { $match: { userId } },\n            { $group: { _id: null, total: { $sum: '$duration' } } },\n        ]).then(result => result[0]?.total || 0);\n\n        // \u8F6C\u6362\u4E3A\u5C0F\u65F6\n        const totalHours = Math.floor(totalDuration / 3600);\n\n        // \u83B7\u53D6\u5B8C\u6210\u7684\u77E5\u8BC6\u70B9\u6570\uFF08\u4F5C\u4E3A\"\u5B8C\u6210\u8BFE\u7A0B\"\uFF09\n        const completedCourses = await UserProgress.countDocuments({\n            userId,\n            status: 'completed'\n        });\n\n        // \u8BA1\u7B97\u5B66\u4E60\u79EF\u5206\uFF08\u57FA\u4E8E\u5B66\u4E60\u65F6\u957F\u548C\u5B8C\u6210\u7684\u8BFE\u7A0B\uFF09\n        // \u89C4\u5219\uFF1A\u6BCF\u5C0F\u65F610\u5206\uFF0C\u6BCF\u5B8C\u6210\u4E00\u4E2A\u77E5\u8BC6\u70B950\u5206\n        const points = Math.floor(totalDuration / 360) + (completedCourses * 50);\n\n        // \u83B7\u53D6\u6240\u6709\u7528\u6237\u7684\u603B\u79EF\u5206\u6765\u8BA1\u7B97\u6392\u540D\n        const allUsersStats = await Promise.all(\n            (await User.find().select('_id')).map(async (user) => {\n                const userDuration = await StudySession.aggregate([\n                    { $match: { userId: user._id } },\n                    { $group: { _id: null, total: { $sum: '$duration' } } },\n                ]).then(result => result[0]?.total || 0);\n\n                const userCompleted = await UserProgress.countDocuments({\n                    userId: user._id,\n                    status: 'completed'\n                });\n\n                return Math.floor(userDuration / 360) + (userCompleted * 50);\n            })\n        );\n\n        // \u8BA1\u7B97\u6392\u540D\u767E\u5206\u6BD4\n        const totalUsers = allUsersStats.length;\n        const betterThanCount = allUsersStats.filter(p => p > points).length; // \u4FEE\u590D\uFF1A\u7EDF\u8BA1\u6BD4\u5F53\u524D\u7528\u6237\u79EF\u5206\u9AD8\u7684\u7528\u6237\u6570\n        const rankPercentage = totalUsers > 1 ? Math.round((betterThanCount / (totalUsers - 1)) * 100) : 0; // \u4FEE\u590D\uFF1A\u6392\u9664\u81EA\u5DF1\n\n        // \u83B7\u53D6\u4E0A\u6708\u7684\u7EDF\u8BA1\u6570\u636E\u6765\u8BA1\u7B97\u589E\u957F\u8D8B\u52BF\n        const lastMonthStart = new Date();\n        lastMonthStart.setMonth(lastMonthStart.getMonth() - 1);\n        lastMonthStart.setDate(1);\n        lastMonthStart.setHours(0, 0, 0, 0);\n\n        const thisMonthStart = new Date();\n        thisMonthStart.setDate(1);\n        thisMonthStart.setHours(0, 0, 0, 0);\n\n        const lastMonthDuration = await StudySession.aggregate([\n            { \n                $match: { \n                    userId,\n                    startTime: { $gte: lastMonthStart, $lt: thisMonthStart }\n                } \n            },\n            { $group: { _id: null, total: { $sum: '$duration' } } },\n        ]).then(result => result[0]?.total || 0);\n\n        const thisMonthDuration = await StudySession.aggregate([\n            { \n                $match: { \n                    userId,\n                    startTime: { $gte: thisMonthStart }\n                } \n            },\n            { $group: { _id: null, total: { $sum: '$duration' } } },\n        ]).then(result => result[0]?.total || 0);\n\n        // \u8BA1\u7B97\u589E\u957F\u767E\u5206\u6BD4\n        const durationChange = lastMonthDuration > 0 \n            ? Math.round(((thisMonthDuration - lastMonthDuration) / lastMonthDuration) * 100)\n            : 0;\n\n        res.json({\n            totalStudyTime: {\n                hours: totalHours,\n                seconds: totalDuration,\n                display: `${totalHours}h`,\n                change: durationChange\n            },\n            completedCourses: {\n                count: completedCourses,\n                change: 0 // TODO: \u5B9E\u73B0\u8BFE\u7A0B\u5B8C\u6210\u6570\u7684\u6708\u5EA6\u5BF9\u6BD4\n            },\n            points: {\n                total: points,\n                display: points.toLocaleString(),\n                change: 0 // TODO: \u5B9E\u73B0\u79EF\u5206\u7684\u6708\u5EA6\u5BF9\u6BD4\n            },\n            ranking: {\n                percentage: rankPercentage,\n                display: `Top ${rankPercentage}%`,\n                change: 0 // TODO: \u5B9E\u73B0\u6392\u540D\u7684\u6708\u5EA6\u5BF9\u6BD4\n            }\n        });\n    } catch (error: any) {\n        console.error('\u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u6570\u636E\u5931\u8D25', error);\n        res.status(500).json({ message: '\u83B7\u53D6\u7EDF\u8BA1\u6570\u636E\u5931\u8D25' });\n    }\n});\n\nexport default router;\n", "// backend/src/routes/diagnostic.ts\r\nimport {Router, Request, Response} from 'express';\r\nimport {authMiddleware} from '../middleware/auth';\r\nimport {generateDiagnosticReport} from '../services/aiDiagnosticService';\r\nimport {IUser} from '../models/User';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * \u83B7\u53D6\u5B66\u4E60\u8BCA\u65AD\u62A5\u544A\r\n */\r\nrouter.get('/report', authMiddleware, async (req: Request, res: Response) => {\r\n    try {\r\n        const user = req.user as IUser;\r\n        const userId = user._id;\r\n\r\n        if (!userId) {\r\n            return res.status(401).json({message: '\u672A\u6388\u6743'});\r\n        }\r\n\r\n        const report = await generateDiagnosticReport(userId);\r\n\r\n        res.json({\r\n            success: true,\r\n            report\r\n        });\r\n    } catch (error) {\r\n        console.error('\u751F\u6210\u8BCA\u65AD\u62A5\u544A\u5931\u8D25:', error);\r\n        res.status(500).json({message: '\u751F\u6210\u8BCA\u65AD\u62A5\u544A\u65F6\u53D1\u751F\u9519\u8BEF'});\r\n    }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/services/aiDiagnosticService.ts\r\n// AI\u5B66\u4E60\u8BCA\u65AD\u4E0E\u4E3B\u52A8\u5E72\u9884\u670D\u52A1\r\nimport UserProgress from '../models/UserProgress';\r\nimport StudySession from '../models/StudySession';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport {Types} from 'mongoose';\r\n\r\nexport interface DiagnosticReport {\r\n    userId: string;\r\n    generatedAt: Date;\r\n    overallStatus: 'excellent' | 'good' | 'normal' | 'warning' | 'critical';\r\n    issues: DiagnosticIssue[];\r\n    recommendations: Recommendation[];\r\n    motivationalMessage: string;\r\n}\r\n\r\nexport interface DiagnosticIssue {\r\n    type: 'learning_stagnation' | 'repeated_failures' | 'time_anomaly' | 'knowledge_gap' | 'low_engagement';\r\n    severity: 'low' | 'medium' | 'high';\r\n    title: string;\r\n    description: string;\r\n    affectedPoints?: string[];\r\n}\r\n\r\nexport interface Recommendation {\r\n    priority: 'high' | 'medium' | 'low';\r\n    action: string;\r\n    reason: string;\r\n    relatedPointIds?: string[];\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u7528\u6237\u5B66\u4E60\u8BCA\u65AD\u62A5\u544A\r\n */\r\nexport async function generateDiagnosticReport(userId: Types.ObjectId): Promise<DiagnosticReport> {\r\n    // \u83B7\u53D6\u7528\u6237\u6240\u6709\u5B66\u4E60\u6570\u636E\r\n    const [userProgress, studySessions, wrongQuestions] = await Promise.all([\r\n        UserProgress.find({userId}).lean(),\r\n        StudySession.find({userId}).sort({startTime: -1}).limit(100).lean(),\r\n        WrongQuestion.find({userId}).lean()\r\n    ]);\r\n\r\n    const issues: DiagnosticIssue[] = [];\r\n    const recommendations: Recommendation[] = [];\r\n\r\n    // 1. \u68C0\u6D4B\u5B66\u4E60\u505C\u6EDE\r\n    const stagnationIssue = detectLearningStagnation(studySessions);\r\n    if (stagnationIssue) {\r\n        issues.push(stagnationIssue);\r\n        recommendations.push({\r\n            priority: 'high',\r\n            action: '\u91CD\u65B0\u5F00\u59CB\u5B66\u4E60\uFF0C\u9009\u62E9\u4E00\u95E8\u7B80\u5355\u7684\u8BFE\u7A0B\u6062\u590D\u72B6\u6001',\r\n            reason: '\u957F\u65F6\u95F4\u672A\u5B66\u4E60\u4F1A\u5BFC\u81F4\u77E5\u8BC6\u9057\u5FD8\uFF0C\u5EFA\u8BAE\u5C3D\u5FEB\u6062\u590D\u5B66\u4E60\u8282\u594F'\r\n        });\r\n    }\r\n\r\n    // 2. \u68C0\u6D4B\u53CD\u590D\u5931\u8D25\u7684\u77E5\u8BC6\u70B9\r\n    const failureIssues = await detectRepeatedFailures(userProgress, wrongQuestions);\r\n    if (failureIssues.length > 0) {\r\n        issues.push(...failureIssues);\r\n        \r\n        for (const issue of failureIssues) {\r\n            if (issue.affectedPoints && issue.affectedPoints.length > 0) {\r\n                const pointTitles = await getPointTitles(issue.affectedPoints);\r\n                recommendations.push({\r\n                    priority: 'high',\r\n                    action: `\u91CD\u70B9\u590D\u4E60\uFF1A${pointTitles.join('\u3001')}`,\r\n                    reason: '\u8FD9\u4E9B\u77E5\u8BC6\u70B9\u7684\u9519\u9898\u7387\u8F83\u9AD8\uFF0C\u5EFA\u8BAE\u5148\u56DE\u987E\u524D\u7F6E\u77E5\u8BC6\u518D\u91CD\u65B0\u5B66\u4E60',\r\n                    relatedPointIds: issue.affectedPoints\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 3. \u68C0\u6D4B\u77E5\u8BC6\u7F3A\u53E3\r\n    const gapIssues = await detectKnowledgeGaps(userProgress);\r\n    if (gapIssues.length > 0) {\r\n        issues.push(...gapIssues);\r\n        recommendations.push({\r\n            priority: 'medium',\r\n            action: '\u6309\u63A8\u8350\u8DEF\u5F84\u5B66\u4E60\uFF0C\u786E\u4FDD\u524D\u7F6E\u77E5\u8BC6\u624E\u5B9E',\r\n            reason: '\u53D1\u73B0\u90E8\u5206\u8FDB\u9636\u8BFE\u7A0B\u5B66\u4E60\u56F0\u96BE\uFF0C\u53EF\u80FD\u662F\u57FA\u7840\u77E5\u8BC6\u672A\u638C\u63E1\u7262\u56FA'\r\n        });\r\n    }\r\n\r\n    // 4. \u68C0\u6D4B\u5B66\u4E60\u65F6\u95F4\u5F02\u5E38\r\n    const timeIssue = detectTimeAnomaly(studySessions);\r\n    if (timeIssue) {\r\n        issues.push(timeIssue);\r\n        recommendations.push({\r\n            priority: 'medium',\r\n            action: '\u8C03\u6574\u5B66\u4E60\u8BA1\u5212\uFF0C\u5EFA\u8BAE\u6BCF\u5929\u5B66\u4E6030-60\u5206\u949F\uFF0C\u4FDD\u6301\u89C4\u5F8B',\r\n            reason: '\u5B66\u4E60\u65F6\u95F4\u4E0D\u89C4\u5F8B\u6216\u5355\u6B21\u5B66\u4E60\u65F6\u95F4\u8FC7\u957F/\u8FC7\u77ED\uFF0C\u5F71\u54CD\u5B66\u4E60\u6548\u679C'\r\n        });\r\n    }\r\n\r\n    // 5. \u68C0\u6D4B\u4F4E\u53C2\u4E0E\u5EA6\r\n    const engagementIssue = detectLowEngagement(userProgress, studySessions);\r\n    if (engagementIssue) {\r\n        issues.push(engagementIssue);\r\n        recommendations.push({\r\n            priority: 'low',\r\n            action: '\u5C1D\u8BD5\u6311\u6218\u65B0\u7684\u5B66\u79D1\u6216\u53C2\u4E0E\u6D4B\u9A8C\uFF0C\u63D0\u5347\u5B66\u4E60\u5174\u8DA3',\r\n            reason: '\u5B66\u4E60\u6D3B\u8DC3\u5EA6\u8F83\u4F4E\uFF0C\u53EF\u80FD\u5BF9\u5F53\u524D\u8BFE\u7A0B\u7F3A\u4E4F\u5174\u8DA3'\r\n        });\r\n    }\r\n\r\n    // 6. \u786E\u5B9A\u6574\u4F53\u72B6\u6001\r\n    const overallStatus = determineOverallStatus(issues);\r\n\r\n    // 7. \u751F\u6210\u6FC0\u52B1\u6D88\u606F\r\n    const motivationalMessage = generateMotivationalMessage(overallStatus, userProgress);\r\n\r\n    return {\r\n        userId: userId.toString(),\r\n        generatedAt: new Date(),\r\n        overallStatus,\r\n        issues,\r\n        recommendations,\r\n        motivationalMessage\r\n    };\r\n}\r\n\r\n/**\r\n * \u68C0\u6D4B\u5B66\u4E60\u505C\u6EDE\r\n */\r\nfunction detectLearningStagnation(studySessions: any[]): DiagnosticIssue | null {\r\n    if (studySessions.length === 0) {\r\n        return {\r\n            type: 'learning_stagnation',\r\n            severity: 'high',\r\n            title: '\u5C1A\u672A\u5F00\u59CB\u5B66\u4E60',\r\n            description: '\u60A8\u8FD8\u6CA1\u6709\u5F00\u59CB\u5B66\u4E60\u4EFB\u4F55\u8BFE\u7A0B\uFF0C\u5FEB\u6765\u5F00\u542F\u60A8\u7684\u5B66\u4E60\u4E4B\u65C5\u5427\uFF01'\r\n        };\r\n    }\r\n\r\n    const lastSession = studySessions[0];\r\n    const daysSinceLastStudy = Math.floor(\r\n        (Date.now() - new Date(lastSession.startTime).getTime()) / (1000 * 60 * 60 * 24)\r\n    );\r\n\r\n    if (daysSinceLastStudy > 14) {\r\n        return {\r\n            type: 'learning_stagnation',\r\n            severity: 'high',\r\n            title: '\u5B66\u4E60\u5DF2\u505C\u6EDE\u8D85\u8FC72\u5468',\r\n            description: `\u60A8\u5DF2\u7ECF${daysSinceLastStudy}\u5929\u6CA1\u6709\u5B66\u4E60\u4E86\uFF0C\u957F\u65F6\u95F4\u4E0D\u5B66\u4E60\u4F1A\u5BFC\u81F4\u77E5\u8BC6\u9057\u5FD8\u3002`\r\n        };\r\n    } else if (daysSinceLastStudy > 7) {\r\n        return {\r\n            type: 'learning_stagnation',\r\n            severity: 'medium',\r\n            title: '\u5B66\u4E60\u5DF2\u505C\u6EDE1\u5468',\r\n            description: `\u60A8\u5DF2\u7ECF${daysSinceLastStudy}\u5929\u6CA1\u6709\u5B66\u4E60\u4E86\uFF0C\u5EFA\u8BAE\u5C3D\u5FEB\u6062\u590D\u5B66\u4E60\u3002`\r\n        };\r\n    } else if (daysSinceLastStudy > 3) {\r\n        return {\r\n            type: 'learning_stagnation',\r\n            severity: 'low',\r\n            title: '\u5B66\u4E60\u95F4\u9694\u8F83\u957F',\r\n            description: `\u60A8\u5DF2\u7ECF${daysSinceLastStudy}\u5929\u6CA1\u6709\u5B66\u4E60\u4E86\uFF0C\u8BB0\u5F97\u4FDD\u6301\u5B66\u4E60\u8FDE\u7EED\u6027\u54E6\u3002`\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * \u68C0\u6D4B\u53CD\u590D\u5931\u8D25\u7684\u77E5\u8BC6\u70B9\r\n */\r\nasync function detectRepeatedFailures(\r\n    userProgress: any[],\r\n    wrongQuestions: any[]\r\n): Promise<DiagnosticIssue[]> {\r\n    const issues: DiagnosticIssue[] = [];\r\n\r\n    // \u6309\u77E5\u8BC6\u70B9\u7EDF\u8BA1\u9519\u9898\u6570\r\n    const errorsByPoint = new Map<string, number>();\r\n    wrongQuestions.forEach(wq => {\r\n        if (!wq.mastered) {\r\n            const count = errorsByPoint.get(wq.pointId) || 0;\r\n            errorsByPoint.set(wq.pointId, count + 1);\r\n        }\r\n    });\r\n\r\n    // \u627E\u51FA\u9519\u9898\u6700\u591A\u7684\u77E5\u8BC6\u70B9\r\n    const highErrorPoints: string[] = [];\r\n    errorsByPoint.forEach((count, pointId) => {\r\n        if (count >= 3) {\r\n            highErrorPoints.push(pointId);\r\n        }\r\n    });\r\n\r\n    if (highErrorPoints.length > 0) {\r\n        issues.push({\r\n            type: 'repeated_failures',\r\n            severity: 'high',\r\n            title: '\u90E8\u5206\u77E5\u8BC6\u70B9\u638C\u63E1\u4E0D\u7262',\r\n            description: `\u53D1\u73B0${highErrorPoints.length}\u4E2A\u77E5\u8BC6\u70B9\u7684\u9519\u9898\u6570\u91CF\u8F83\u591A\uFF0C\u5EFA\u8BAE\u91CD\u70B9\u590D\u4E60\u3002`,\r\n            affectedPoints: highErrorPoints\r\n        });\r\n    }\r\n\r\n    // \u68C0\u6D4B\u4F4E\u5206\u6570\u7684\u77E5\u8BC6\u70B9\r\n    const lowScorePoints = userProgress\r\n        .filter(p => p.score !== undefined && p.score < 60)\r\n        .map(p => p.pointId);\r\n\r\n    if (lowScorePoints.length > 0) {\r\n        issues.push({\r\n            type: 'repeated_failures',\r\n            severity: 'medium',\r\n            title: '\u90E8\u5206\u8BFE\u7A0B\u6D4B\u9A8C\u5206\u6570\u8F83\u4F4E',\r\n            description: `\u6709${lowScorePoints.length}\u95E8\u8BFE\u7A0B\u7684\u6D4B\u9A8C\u5206\u6570\u4F4E\u4E8E60\u5206\uFF0C\u5EFA\u8BAE\u91CD\u65B0\u5B66\u4E60\u3002`,\r\n            affectedPoints: lowScorePoints\r\n        });\r\n    }\r\n\r\n    return issues;\r\n}\r\n\r\n/**\r\n * \u68C0\u6D4B\u77E5\u8BC6\u7F3A\u53E3\r\n */\r\nasync function detectKnowledgeGaps(userProgress: any[]): Promise<DiagnosticIssue[]> {\r\n    const issues: DiagnosticIssue[] = [];\r\n\r\n    // \u83B7\u53D6\u6240\u6709\u77E5\u8BC6\u70B9\r\n    const allPoints = await KnowledgePoint.find({}).select('id prerequisites').lean();\r\n    const completedPoints = new Set(\r\n        userProgress.filter(p => p.status === 'completed').map(p => p.pointId)\r\n    );\r\n\r\n    // \u68C0\u6D4B\u8DF3\u8FC7\u7684\u524D\u7F6E\u8BFE\u7A0B\r\n    const skippedPrerequisites: string[] = [];\r\n    userProgress.forEach(progress => {\r\n        if (progress.status === 'in_progress' || progress.status === 'completed') {\r\n            const point = allPoints.find(p => p.id === progress.pointId);\r\n            if (point && point.prerequisites.length > 0) {\r\n                point.prerequisites.forEach(preId => {\r\n                    if (!completedPoints.has(preId) && !skippedPrerequisites.includes(preId)) {\r\n                        skippedPrerequisites.push(preId);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    if (skippedPrerequisites.length > 0) {\r\n        issues.push({\r\n            type: 'knowledge_gap',\r\n            severity: 'medium',\r\n            title: '\u5B58\u5728\u77E5\u8BC6\u7F3A\u53E3',\r\n            description: `\u53D1\u73B0${skippedPrerequisites.length}\u95E8\u524D\u7F6E\u8BFE\u7A0B\u672A\u5B8C\u6210\uFF0C\u53EF\u80FD\u5F71\u54CD\u540E\u7EED\u5B66\u4E60\u6548\u679C\u3002`,\r\n            affectedPoints: skippedPrerequisites\r\n        });\r\n    }\r\n\r\n    return issues;\r\n}\r\n\r\n/**\r\n * \u68C0\u6D4B\u5B66\u4E60\u65F6\u95F4\u5F02\u5E38\r\n */\r\nfunction detectTimeAnomaly(studySessions: any[]): DiagnosticIssue | null {\r\n    if (studySessions.length < 5) {\r\n        return null; // \u6570\u636E\u592A\u5C11\uFF0C\u65E0\u6CD5\u5224\u65AD\r\n    }\r\n\r\n    const recentSessions = studySessions.slice(0, 20);\r\n    const durations = recentSessions.map(s => s.duration || 0);\r\n    const avgDuration = durations.reduce((sum, d) => sum + d, 0) / durations.length;\r\n\r\n    // \u68C0\u6D4B\u5355\u6B21\u5B66\u4E60\u65F6\u95F4\u8FC7\u77ED\uFF08\u5C0F\u4E8E5\u5206\u949F\uFF09\r\n    const shortSessions = durations.filter(d => d < 300).length;\r\n    if (shortSessions / durations.length > 0.5) {\r\n        return {\r\n            type: 'time_anomaly',\r\n            severity: 'medium',\r\n            title: '\u5355\u6B21\u5B66\u4E60\u65F6\u95F4\u8FC7\u77ED',\r\n            description: '\u8D85\u8FC7\u4E00\u534A\u7684\u5B66\u4E60\u65F6\u957F\u4E0D\u8DB35\u5206\u949F\uFF0C\u53EF\u80FD\u5B66\u4E60\u6548\u679C\u4E0D\u4F73\u3002'\r\n        };\r\n    }\r\n\r\n    // \u68C0\u6D4B\u5355\u6B21\u5B66\u4E60\u65F6\u95F4\u8FC7\u957F\uFF08\u8D85\u8FC72\u5C0F\u65F6\uFF09\r\n    const longSessions = durations.filter(d => d > 7200).length;\r\n    if (longSessions / durations.length > 0.3) {\r\n        return {\r\n            type: 'time_anomaly',\r\n            severity: 'low',\r\n            title: '\u5355\u6B21\u5B66\u4E60\u65F6\u95F4\u8FC7\u957F',\r\n            description: '\u90E8\u5206\u5B66\u4E60\u65F6\u957F\u8D85\u8FC72\u5C0F\u65F6\uFF0C\u5EFA\u8BAE\u9002\u5F53\u4F11\u606F\uFF0C\u907F\u514D\u75B2\u52B3\u3002'\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * \u68C0\u6D4B\u4F4E\u53C2\u4E0E\u5EA6\r\n */\r\nfunction detectLowEngagement(userProgress: any[], studySessions: any[]): DiagnosticIssue | null {\r\n    const totalCompleted = userProgress.filter(p => p.status === 'completed').length;\r\n    const totalInProgress = userProgress.filter(p => p.status === 'in_progress').length;\r\n    const recentSessionCount = studySessions.slice(0, 7).length;\r\n\r\n    // \u6700\u8FD17\u5929\u7684\u5B66\u4E60\u6B21\u6570\u5C11\u4E8E2\u6B21\r\n    if (recentSessionCount < 2 && totalCompleted > 0) {\r\n        return {\r\n            type: 'low_engagement',\r\n            severity: 'low',\r\n            title: '\u5B66\u4E60\u9891\u7387\u504F\u4F4E',\r\n            description: '\u6700\u8FD1\u4E00\u5468\u5B66\u4E60\u6B21\u6570\u8F83\u5C11\uFF0C\u5EFA\u8BAE\u589E\u52A0\u5B66\u4E60\u9891\u7387\u4EE5\u4FDD\u6301\u8FDE\u7EED\u6027\u3002'\r\n        };\r\n    }\r\n\r\n    // \u6709\u5F88\u591A\u8FDB\u884C\u4E2D\u7684\u8BFE\u7A0B\u4F46\u5B8C\u6210\u5F88\u5C11\r\n    if (totalInProgress > 5 && totalCompleted < totalInProgress / 2) {\r\n        return {\r\n            type: 'low_engagement',\r\n            severity: 'medium',\r\n            title: '\u8BFE\u7A0B\u5B8C\u6210\u7387\u8F83\u4F4E',\r\n            description: `\u6709${totalInProgress}\u95E8\u8BFE\u7A0B\u6B63\u5728\u5B66\u4E60\uFF0C\u4F46\u5B8C\u6210\u7684\u8F83\u5C11\u3002\u5EFA\u8BAE\u96C6\u4E2D\u7CBE\u529B\u5B8C\u6210\u51E0\u95E8\u8BFE\u7A0B\u3002`\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * \u786E\u5B9A\u6574\u4F53\u72B6\u6001\r\n */\r\nfunction determineOverallStatus(issues: DiagnosticIssue[]): DiagnosticReport['overallStatus'] {\r\n    if (issues.length === 0) {\r\n        return 'excellent';\r\n    }\r\n\r\n    const highSeverityCount = issues.filter(i => i.severity === 'high').length;\r\n    const mediumSeverityCount = issues.filter(i => i.severity === 'medium').length;\r\n\r\n    if (highSeverityCount >= 2) {\r\n        return 'critical';\r\n    } else if (highSeverityCount === 1) {\r\n        return 'warning';\r\n    } else if (mediumSeverityCount >= 2) {\r\n        return 'normal';\r\n    } else {\r\n        return 'good';\r\n    }\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u6FC0\u52B1\u6D88\u606F\r\n */\r\nfunction generateMotivationalMessage(\r\n    status: DiagnosticReport['overallStatus'],\r\n    userProgress: any[]\r\n): string {\r\n    const completedCount = userProgress.filter(p => p.status === 'completed').length;\r\n\r\n    const messages = {\r\n        excellent: [\r\n            '\u592A\u68D2\u4E86\uFF01\u60A8\u7684\u5B66\u4E60\u72B6\u6001\u975E\u5E38\u597D\uFF0C\u7EE7\u7EED\u4FDD\u6301\u8FD9\u79CD\u8282\u594F\uFF01\uD83D\uDCAA',\r\n            '\u5B66\u4E60\u72B6\u6001\u6781\u4F73\uFF01\u60A8\u6B63\u5728\u7A33\u6B65\u524D\u8FDB\uFF0C\u52A0\u6CB9\uFF01\uD83C\uDF89',\r\n            '\u5B8C\u7F8E\u7684\u5B66\u4E60\u72B6\u6001\uFF01\u60A8\u662F\u5B66\u4E60\u7684\u699C\u6837\uFF01\uD83C\uDF1F'\r\n        ],\r\n        good: [\r\n            '\u5B66\u4E60\u72B6\u6001\u4E0D\u9519\uFF01\u7A0D\u4F5C\u8C03\u6574\u4F1A\u66F4\u597D\u3002\uD83D\uDE0A',\r\n            '\u60A8\u505A\u5F97\u5F88\u597D\uFF01\u6CE8\u610F\u4E00\u4E0B\u63D0\u793A\u7684\u5C0F\u95EE\u9898\u5C31\u66F4\u5B8C\u7F8E\u4E86\u3002\uD83D\uDC4D',\r\n            `\u5DF2\u5B8C\u6210${completedCount}\u4E2A\u77E5\u8BC6\u70B9\uFF0C\u7EE7\u7EED\u52A0\u6CB9\uFF01\uD83D\uDCAA`\r\n        ],\r\n        normal: [\r\n            '\u5B66\u4E60\u72B6\u6001\u6B63\u5E38\uFF0C\u4F46\u8FD8\u6709\u63D0\u5347\u7A7A\u95F4\u3002\u770B\u770B\u8BCA\u65AD\u5EFA\u8BAE\u5427\uFF01\uD83D\uDCCA',\r\n            '\u60A8\u7684\u5B66\u4E60\u8FDB\u5EA6\u6B63\u5E38\uFF0C\u6CE8\u610F\u89E3\u51B3\u53D1\u73B0\u7684\u95EE\u9898\u3002\u2728',\r\n            '\u4FDD\u6301\u5B66\u4E60\u72B6\u6001\uFF0C\u6309\u5EFA\u8BAE\u8C03\u6574\u4F1A\u66F4\u597D\uFF01\uD83C\uDFAF'\r\n        ],\r\n        warning: [\r\n            '\u5B66\u4E60\u72B6\u6001\u9700\u8981\u5173\u6CE8\uFF01\u8BF7\u67E5\u770B\u8BCA\u65AD\u5EFA\u8BAE\u53CA\u65F6\u8C03\u6574\u3002\u26A0\uFE0F',\r\n            '\u53D1\u73B0\u4E00\u4E9B\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\uFF0C\u5EFA\u8BAE\u5C3D\u5FEB\u5904\u7406\u3002\uD83D\uDCA1',\r\n            '\u5B66\u4E60\u9047\u5230\u4E86\u4E00\u4E9B\u6311\u6218\uFF0C\u522B\u62C5\u5FC3\uFF0C\u6211\u4EEC\u5E2E\u60A8\u5206\u6790\u4E86\u539F\u56E0\uFF01\uD83D\uDD0D'\r\n        ],\r\n        critical: [\r\n            '\u5B66\u4E60\u72B6\u6001\u9700\u8981\u7ACB\u5373\u8C03\u6574\uFF01\u8BF7\u91CD\u89C6\u8BCA\u65AD\u5EFA\u8BAE\u3002\uD83D\uDEA8',\r\n            '\u53D1\u73B0\u591A\u4E2A\u4E25\u91CD\u95EE\u9898\uFF0C\u8BF7\u5C3D\u5FEB\u6309\u5EFA\u8BAE\u8C03\u6574\u5B66\u4E60\u8BA1\u5212\u3002\u26A1',\r\n            '\u522B\u7070\u5FC3\uFF01\u95EE\u9898\u867D\u7136\u591A\uFF0C\u4F46\u90FD\u6709\u89E3\u51B3\u65B9\u6848\u3002\u8BA9\u6211\u4EEC\u4E00\u8D77\u6539\u8FDB\uFF01\uD83D\uDCAA'\r\n        ]\r\n    };\r\n\r\n    const messageList = messages[status];\r\n    return messageList[Math.floor(Math.random() * messageList.length)];\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u77E5\u8BC6\u70B9\u6807\u9898\r\n */\r\nasync function getPointTitles(pointIds: string[]): Promise<string[]> {\r\n    const points = await KnowledgePoint.find({id: {$in: pointIds}})\r\n        .select('title')\r\n        .lean();\r\n    return points.map(p => p.title);\r\n}\r\n", "// backend/src/routes/ai-quiz-generator.ts\r\nimport { Router, Request, Response } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { Types } from 'mongoose';\r\nimport {\r\n  generatePersonalizedQuiz,\r\n  generateQuickQuiz,\r\n  generateSimilarQuestions,\r\n  QuizGenerationRequest,\r\n} from '../services/aiQuizGenerator';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * POST /api/ai-quiz/generate\r\n * \u751F\u6210\u4E2A\u6027\u5316\u7EC3\u4E60\u9898\r\n */\r\nrouter.post('/generate', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const request: QuizGenerationRequest = {\r\n      subject: req.body.subject,\r\n      weakPoints: req.body.weakPoints || [],\r\n      difficulty: req.body.difficulty || 3,\r\n      count: Math.min(req.body.count || 10, 20), // \u6700\u591A20\u9898\r\n      questionTypes: req.body.questionTypes,\r\n    };\r\n\r\n    // \u9A8C\u8BC1\u5FC5\u586B\u5B57\u6BB5\r\n    if (!request.subject) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '\u7F3A\u5C11\u5FC5\u586B\u5B57\u6BB5: subject',\r\n      });\r\n    }\r\n\r\n    const result = await generatePersonalizedQuiz(userId, request);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: result,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210AI\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'AI\u51FA\u9898\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/ai-quiz/quick/:pointId\r\n * \u5FEB\u901F\u751F\u6210\u77E5\u8BC6\u70B9\u7EC3\u4E60\u9898\r\n */\r\nrouter.post('/quick/:pointId', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const { pointId } = req.params;\r\n    const count = Math.min(parseInt(req.body.count) || 5, 10);\r\n\r\n    const questions = await generateQuickQuiz(pointId, count);\r\n\r\n    res.json({\r\n      success: true,\r\n      questions,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u5FEB\u901F\u51FA\u9898\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u5FEB\u901F\u51FA\u9898\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/ai-quiz/similar/:wrongQuestionId\r\n * \u57FA\u4E8E\u9519\u9898\u751F\u6210\u7C7B\u4F3C\u9898\u76EE\r\n */\r\nrouter.post('/similar/:wrongQuestionId', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n    const wrongQuestionId = new Types.ObjectId(req.params.wrongQuestionId);\r\n    const count = Math.min(parseInt(req.body.count) || 3, 5);\r\n\r\n    const questions = await generateSimilarQuestions(userId, wrongQuestionId, count);\r\n\r\n    res.json({\r\n      success: true,\r\n      questions,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u76F8\u4F3C\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u76F8\u4F3C\u9898\u76EE\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/services/aiQuizGenerator.ts\r\nimport { getChatCompletion, ChatMessage } from './ai';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport UserProgress from '../models/UserProgress';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport { Types } from 'mongoose';\r\n\r\n/**\r\n * AI\u667A\u80FD\u51FA\u9898\u7CFB\u7EDF\r\n * \u57FA\u4E8E\u7528\u6237\u8584\u5F31\u70B9\uFF0CAI\u81EA\u52A8\u751F\u6210\u4E2A\u6027\u5316\u7EC3\u4E60\u9898\r\n */\r\n\r\nexport interface QuizGenerationRequest {\r\n  subject: string;\r\n  weakPoints: string[]; // \u8584\u5F31\u77E5\u8BC6\u70B9\u6807\u9898\r\n  difficulty: number; // 1-5\r\n  count: number; // \u751F\u6210\u9898\u76EE\u6570\u91CF\r\n  questionTypes?: ('single' | 'multiple' | 'boolean' | 'short_answer')[]; // \u9898\u578B\r\n}\r\n\r\nexport interface GeneratedQuestion {\r\n  type: 'single' | 'multiple' | 'boolean' | 'short_answer';\r\n  question: string;\r\n  options?: string[]; // \u9009\u62E9\u9898\u9009\u9879\r\n  correctAnswer: number | number[] | string;\r\n  explanation: string;\r\n  difficulty: number;\r\n  keywords: string[]; // \u5173\u952E\u77E5\u8BC6\u70B9\r\n}\r\n\r\nexport interface QuizGenerationResponse {\r\n  questions: GeneratedQuestion[];\r\n  totalGenerated: number;\r\n  subject: string;\r\n  difficulty: number;\r\n  generatedAt: Date;\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u4E2A\u6027\u5316\u7EC3\u4E60\u9898\r\n */\r\nexport async function generatePersonalizedQuiz(\r\n  userId: Types.ObjectId,\r\n  request: QuizGenerationRequest\r\n): Promise<QuizGenerationResponse> {\r\n  // \u9ED8\u8BA4\u9898\u578B\uFF1A\u5355\u9009\u3001\u591A\u9009\u3001\u5224\u65AD\r\n  const questionTypes = request.questionTypes || ['single', 'multiple', 'boolean'];\r\n\r\n  // 1. \u5206\u6790\u7528\u6237\u7684\u8584\u5F31\u70B9\r\n  const weaknessAnalysis = await analyzeUserWeaknesses(userId, request.subject);\r\n\r\n  // 2. \u6784\u5EFAAI\u63D0\u793A\u8BCD\r\n  const prompt = buildQuizGenerationPrompt(request, weaknessAnalysis);\r\n\r\n  // 3. \u8C03\u7528AI\u751F\u6210\u9898\u76EE\r\n  const aiResponse = await getChatCompletion(\r\n    [\r\n      {\r\n        role: 'system',\r\n        content:\r\n          '\u4F60\u662F\u4E00\u4F4D\u4E13\u4E1A\u7684\u6559\u80B2\u6D4B\u8BC4\u4E13\u5BB6\uFF0C\u64C5\u957F\u6839\u636E\u5B66\u751F\u7684\u8584\u5F31\u70B9\u8BBE\u8BA1\u4E2A\u6027\u5316\u7EC3\u4E60\u9898\u3002\u751F\u6210\u7684\u9898\u76EE\u5E94\u8BE5\u7CBE\u51C6\u3001\u6709\u9488\u5BF9\u6027\uFF0C\u96BE\u5EA6\u9002\u4E2D\u3002',\r\n      },\r\n      {\r\n        role: 'user',\r\n        content: prompt,\r\n      },\r\n    ],\r\n    { maxTokens: 4000 }\r\n  );\r\n\r\n  // 4. \u89E3\u6790AI\u54CD\u5E94\r\n  const questions = parseAIQuizResponse(aiResponse, request.difficulty);\r\n\r\n  return {\r\n    questions,\r\n    totalGenerated: questions.length,\r\n    subject: request.subject,\r\n    difficulty: request.difficulty,\r\n    generatedAt: new Date(),\r\n  };\r\n}\r\n\r\n/**\r\n * \u5206\u6790\u7528\u6237\u8584\u5F31\u70B9\r\n */\r\nasync function analyzeUserWeaknesses(userId: Types.ObjectId, subject: string) {\r\n  // \u83B7\u53D6\u8BE5\u5B66\u79D1\u7684\u9519\u9898\r\n  const wrongQuestions = await WrongQuestion.find({\r\n    userId,\r\n    subject,\r\n    mastered: false,\r\n  })\r\n    .select('pointTitle question')\r\n    .limit(20)\r\n    .lean();\r\n\r\n  // \u6309\u77E5\u8BC6\u70B9\u5206\u7EC4\r\n  const pointFrequency: Map<string, number> = new Map();\r\n  for (const wq of wrongQuestions) {\r\n    const count = pointFrequency.get(wq.pointTitle) || 0;\r\n    pointFrequency.set(wq.pointTitle, count + 1);\r\n  }\r\n\r\n  // \u627E\u51FA\u6700\u8584\u5F31\u76843\u4E2A\u77E5\u8BC6\u70B9\r\n  const weakestPoints = Array.from(pointFrequency.entries())\r\n    .sort((a, b) => b[1] - a[1])\r\n    .slice(0, 3)\r\n    .map(([point]) => point);\r\n\r\n  // \u83B7\u53D6\u5B66\u79D1\u5185\u5B8C\u6210\u5EA6\u8F83\u4F4E\u7684\u77E5\u8BC6\u70B9\r\n  const allSubjectPoints = await KnowledgePoint.find({ subject })\r\n    .select('id title')\r\n    .lean();\r\n\r\n  const userProgress = await UserProgress.find({\r\n    userId,\r\n    pointId: { $in: allSubjectPoints.map(p => p.id) },\r\n  }).lean();\r\n\r\n  const lowScorePoints = userProgress\r\n    .filter(p => p.bestScore && p.bestScore < 70)\r\n    .sort((a, b) => (a.bestScore || 100) - (b.bestScore || 100))\r\n    .slice(0, 3)\r\n    .map(p => {\r\n      const point = allSubjectPoints.find(pt => pt.id === p.pointId);\r\n      return point?.title || '';\r\n    })\r\n    .filter(Boolean);\r\n\r\n  return {\r\n    errorPronePoints: weakestPoints,\r\n    lowScorePoints,\r\n    totalErrors: wrongQuestions.length,\r\n  };\r\n}\r\n\r\n/**\r\n * \u6784\u5EFAAI\u51FA\u9898\u63D0\u793A\u8BCD\r\n */\r\nfunction buildQuizGenerationPrompt(\r\n  request: QuizGenerationRequest,\r\n  weakness: {\r\n    errorPronePoints: string[];\r\n    lowScorePoints: string[];\r\n    totalErrors: number;\r\n  }\r\n): string {\r\n  const weakPointsList = [...new Set([...request.weakPoints, ...weakness.errorPronePoints])];\r\n\r\n  return `\u8BF7\u4E3A\u4EE5\u4E0B\u5B66\u4E60\u9700\u6C42\u751F\u6210 ${request.count} \u9053\u7EC3\u4E60\u9898\uFF1A\r\n\r\n**\u5B66\u79D1**: ${request.subject}\r\n**\u96BE\u5EA6**: ${request.difficulty}/5\r\n**\u91CD\u70B9\u8003\u5BDF\u77E5\u8BC6\u70B9**:\r\n${weakPointsList.map((point, idx) => `${idx + 1}. ${point}`).join('\\n')}\r\n\r\n**\u7528\u6237\u8584\u5F31\u73AF\u8282**:\r\n- \u6700\u5BB9\u6613\u51FA\u9519\u7684\u77E5\u8BC6\u70B9: ${weakness.errorPronePoints.join('\u3001') || '\u65E0'}\r\n- \u5F97\u5206\u8F83\u4F4E\u7684\u77E5\u8BC6\u70B9: ${weakness.lowScorePoints.join('\u3001') || '\u65E0'}\r\n- \u7D2F\u8BA1\u9519\u9898\u6570: ${weakness.totalErrors} \u9053\r\n\r\n**\u8981\u6C42**:\r\n1. \u9898\u578B\u5206\u5E03\uFF1A\u5355\u9009\u9898\u3001\u591A\u9009\u9898\u3001\u5224\u65AD\u9898\u5747\u53EF\r\n2. \u6BCF\u9053\u9898\u90FD\u8981\u7D27\u5BC6\u56F4\u7ED5\u4E0A\u8FF0\u8584\u5F31\u77E5\u8BC6\u70B9\u8BBE\u8BA1\r\n3. \u96BE\u5EA6\u7B49\u7EA7\u4E3A ${request.difficulty} \u7EA7\uFF081=\u57FA\u7840\uFF0C5=\u56F0\u96BE\uFF09\r\n4. \u6BCF\u9053\u9898\u5FC5\u987B\u5305\u542B\u8BE6\u7EC6\u7684\u89E3\u6790\u8BF4\u660E\r\n\r\n**\u8F93\u51FA\u683C\u5F0F** (\u4E25\u683C\u6309\u7167\u4EE5\u4E0BJSON\u683C\u5F0F):\r\n\\`\\`\\`json\r\n{\r\n  \"questions\": [\r\n    {\r\n      \"type\": \"single\",\r\n      \"question\": \"\u9898\u76EE\u5185\u5BB9\",\r\n      \"options\": [\"\u9009\u9879A\", \"\u9009\u9879B\", \"\u9009\u9879C\", \"\u9009\u9879D\"],\r\n      \"correctAnswer\": 0,\r\n      \"explanation\": \"\u8BE6\u7EC6\u89E3\u6790\",\r\n      \"keywords\": [\"\u5173\u952E\u8BCD1\", \"\u5173\u952E\u8BCD2\"]\r\n    },\r\n    {\r\n      \"type\": \"multiple\",\r\n      \"question\": \"\u591A\u9009\u9898\u5185\u5BB9\",\r\n      \"options\": [\"\u9009\u9879A\", \"\u9009\u9879B\", \"\u9009\u9879C\", \"\u9009\u9879D\"],\r\n      \"correctAnswer\": [0, 2],\r\n      \"explanation\": \"\u8BE6\u7EC6\u89E3\u6790\",\r\n      \"keywords\": [\"\u5173\u952E\u8BCD1\", \"\u5173\u952E\u8BCD2\"]\r\n    },\r\n    {\r\n      \"type\": \"boolean\",\r\n      \"question\": \"\u5224\u65AD\u9898\u5185\u5BB9\",\r\n      \"options\": [\"\u6B63\u786E\", \"\u9519\u8BEF\"],\r\n      \"correctAnswer\": 0,\r\n      \"explanation\": \"\u8BE6\u7EC6\u89E3\u6790\",\r\n      \"keywords\": [\"\u5173\u952E\u8BCD1\"]\r\n    }\r\n  ]\r\n}\r\n\\`\\`\\`\r\n\r\n\u8BF7\u786E\u4FDD\u9898\u76EE\u8D28\u91CF\u9AD8\u3001\u6709\u9488\u5BF9\u6027\uFF0C\u80FD\u591F\u5E2E\u52A9\u5B66\u751F\u5F3A\u5316\u8584\u5F31\u73AF\u8282\u3002`;\r\n}\r\n\r\n/**\r\n * \u89E3\u6790AI\u54CD\u5E94\r\n */\r\nfunction parseAIQuizResponse(aiResponse: string, difficulty: number): GeneratedQuestion[] {\r\n  try {\r\n    // \u63D0\u53D6JSON\u90E8\u5206\r\n    const jsonMatch = aiResponse.match(/```json\\s*([\\s\\S]*?)\\s*```/) || aiResponse.match(/{[\\s\\S]*}/);\r\n    if (!jsonMatch) {\r\n      throw new Error('\u65E0\u6CD5\u4ECEAI\u54CD\u5E94\u4E2D\u63D0\u53D6JSON');\r\n    }\r\n\r\n    const jsonStr = jsonMatch[1] || jsonMatch[0];\r\n    const parsed = JSON.parse(jsonStr);\r\n\r\n    if (!parsed.questions || !Array.isArray(parsed.questions)) {\r\n      throw new Error('AI\u54CD\u5E94\u683C\u5F0F\u4E0D\u6B63\u786E');\r\n    }\r\n\r\n    return parsed.questions.map((q: any) => ({\r\n      type: q.type || 'single',\r\n      question: q.question,\r\n      options: q.options || [],\r\n      correctAnswer: q.correctAnswer,\r\n      explanation: q.explanation,\r\n      difficulty,\r\n      keywords: q.keywords || [],\r\n    }));\r\n  } catch (error) {\r\n    console.error('\u89E3\u6790AI\u51FA\u9898\u54CD\u5E94\u5931\u8D25:', error);\r\n    // \u8FD4\u56DE\u7A7A\u6570\u7EC4\uFF0C\u7531\u4E0A\u5C42\u5904\u7406\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * \u5FEB\u901F\u751F\u6210\u7EC3\u4E60\u9898\uFF08\u9488\u5BF9\u7279\u5B9A\u77E5\u8BC6\u70B9\uFF09\r\n */\r\nexport async function generateQuickQuiz(\r\n  pointId: string,\r\n  count: number = 5\r\n): Promise<GeneratedQuestion[]> {\r\n  const point = await KnowledgePoint.findOne({ id: pointId })\r\n    .select('title subject difficulty')\r\n    .lean();\r\n\r\n  if (!point) {\r\n    throw new Error('\u77E5\u8BC6\u70B9\u4E0D\u5B58\u5728');\r\n  }\r\n\r\n  const prompt = `\u8BF7\u4E3A\u4EE5\u4E0B\u77E5\u8BC6\u70B9\u751F\u6210 ${count} \u9053\u7EC3\u4E60\u9898\uFF1A\r\n\r\n**\u77E5\u8BC6\u70B9**: ${point.title}\r\n**\u5B66\u79D1**: ${point.subject}\r\n**\u96BE\u5EA6**: ${point.difficulty}/5\r\n\r\n**\u8981\u6C42**:\r\n1. \u9898\u578B\u591A\u6837\u5316\uFF08\u5355\u9009\u3001\u591A\u9009\u3001\u5224\u65AD\uFF09\r\n2. \u7D27\u6263\u77E5\u8BC6\u70B9\u6838\u5FC3\u6982\u5FF5\r\n3. \u5305\u542B\u8BE6\u7EC6\u89E3\u6790\r\n\r\n**\u8F93\u51FA\u683C\u5F0F** (JSON):\r\n\\`\\`\\`json\r\n{\r\n  \"questions\": [\r\n    {\r\n      \"type\": \"single\",\r\n      \"question\": \"...\",\r\n      \"options\": [\"A\", \"B\", \"C\", \"D\"],\r\n      \"correctAnswer\": 0,\r\n      \"explanation\": \"...\",\r\n      \"keywords\": [\"...\"]\r\n    }\r\n  ]\r\n}\r\n\\`\\`\\``;\r\n\r\n  const aiResponse = await getChatCompletion(\r\n    [\r\n      {\r\n        role: 'system',\r\n        content: '\u4F60\u662F\u4E00\u4F4D\u4E13\u4E1A\u7684\u9898\u5E93\u8BBE\u8BA1\u4E13\u5BB6\u3002',\r\n      },\r\n      {\r\n        role: 'user',\r\n        content: prompt,\r\n      },\r\n    ],\r\n    { maxTokens: 3000 }\r\n  );\r\n\r\n  return parseAIQuizResponse(aiResponse, point.difficulty);\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u9519\u9898\u5F3A\u5316\u7EC3\u4E60\r\n * \u57FA\u4E8E\u7528\u6237\u7684\u9519\u9898\uFF0C\u751F\u6210\u7C7B\u4F3C\u9898\u76EE\r\n */\r\nexport async function generateSimilarQuestions(\r\n  userId: Types.ObjectId,\r\n  wrongQuestionId: Types.ObjectId,\r\n  count: number = 3\r\n): Promise<GeneratedQuestion[]> {\r\n  const wrongQuestion = await WrongQuestion.findById(wrongQuestionId).lean();\r\n  if (!wrongQuestion) {\r\n    throw new Error('\u9519\u9898\u4E0D\u5B58\u5728');\r\n  }\r\n\r\n  const prompt = `\u7528\u6237\u5728\u4EE5\u4E0B\u9898\u76EE\u4E0A\u51FA\u9519\u4E86\uFF0C\u8BF7\u751F\u6210 ${count} \u9053\u7C7B\u4F3C\u7684\u7EC3\u4E60\u9898\u5E2E\u52A9\u5DE9\u56FA\uFF1A\r\n\r\n**\u539F\u9898\u76EE**: ${wrongQuestion.question}\r\n**\u77E5\u8BC6\u70B9**: ${wrongQuestion.pointTitle}\r\n**\u5B66\u79D1**: ${wrongQuestion.subject}\r\n\r\n**\u8981\u6C42**:\r\n1. \u9898\u76EE\u7C7B\u578B\u4E0E\u539F\u9898\u76F8\u540C\uFF08${wrongQuestion.type}\uFF09\r\n2. \u8003\u5BDF\u76F8\u540C\u7684\u77E5\u8BC6\u70B9\u548C\u6982\u5FF5\r\n3. \u96BE\u5EA6\u76F8\u5F53\u6216\u7565\u4F4E\r\n4. \u907F\u514D\u4E0E\u539F\u9898\u5B8C\u5168\u76F8\u540C\r\n\r\n**\u8F93\u51FA\u683C\u5F0F** (JSON):\r\n\\`\\`\\`json\r\n{\r\n  \"questions\": [...]\r\n}\r\n\\`\\`\\``;\r\n\r\n  const aiResponse = await getChatCompletion(\r\n    [\r\n      {\r\n        role: 'system',\r\n        content: '\u4F60\u662F\u4E00\u4F4D\u64C5\u957F\u4E3E\u4E00\u53CD\u4E09\u7684\u6559\u80B2\u4E13\u5BB6\u3002',\r\n      },\r\n      {\r\n        role: 'user',\r\n        content: prompt,\r\n      },\r\n    ],\r\n    { maxTokens: 2500 }\r\n  );\r\n\r\n  return parseAIQuizResponse(aiResponse, wrongQuestion.difficulty || 3);\r\n}\r\n\r\n", "// backend/src/routes/intelligent-path.ts\r\nimport { Router, Request, Response } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport {IUser} from '../models/User';\r\nimport { Types } from 'mongoose';\r\nimport {\r\n  generateIntelligentPath,\r\n} from '../utils/intelligentPathRecommender';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * GET /api/intelligent-path/recommend\r\n * \u83B7\u53D6\u667A\u80FD\u63A8\u8350\u5B66\u4E60\u8DEF\u5F84\uFF08\u57FA\u4E8E\u673A\u5668\u5B66\u4E60\uFF09\r\n */\r\nrouter.get('/recommend', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const userId = user._id;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const recommendations = await generateIntelligentPath(userId);\r\n\r\n    // \u83B7\u53D6\u77E5\u8BC6\u70B9\u8BE6\u7EC6\u4FE1\u606F\r\n    const detailedRecommendations = await Promise.all(\r\n      recommendations.map(async rec => {\r\n        const point = await KnowledgePoint.findOne({ id: rec.pointId })\r\n          .select('title subject difficulty estimatedTime')\r\n          .lean();\r\n\r\n        return {\r\n          ...rec,\r\n          title: point?.title,\r\n          subject: point?.subject,\r\n          difficulty: point?.difficulty,\r\n          estimatedTime: point?.estimatedTime,\r\n        };\r\n      })\r\n    );\r\n\r\n    res.json({\r\n      success: true,\r\n      recommendations: detailedRecommendations,\r\n      totalCount: recommendations.length,\r\n      algorithm: 'intelligent_ml_based',\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u667A\u80FD\u8DEF\u5F84\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u667A\u80FD\u5B66\u4E60\u8DEF\u5F84\u65F6\u53D1\u751F\u9519\u8BEF',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/intelligent-path/recalibrate\r\n * \u68C0\u67E5\u662F\u5426\u9700\u8981\u91CD\u65B0\u6821\u51C6\u8DEF\u5F84 (\u6BCF\u5B8C\u62103\u4E2A\u77E5\u8BC6\u70B9\u540E\u91CD\u65B0\u6821\u51C6)\r\n */\r\nrouter.post('/recalibrate', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const userId = user._id;\r\n    const recentlyCompletedCount = parseInt(req.body.recentlyCompletedCount) || 0;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    // \u7B80\u5355\u903B\u8F91\uFF1A\u6BCF\u5B8C\u62103\u4E2A\u77E5\u8BC6\u70B9\u5EFA\u8BAE\u91CD\u65B0\u6821\u51C6\r\n    const needsRecalibration = recentlyCompletedCount >= 3;\r\n\r\n    res.json({\r\n      success: true,\r\n      needsRecalibration,\r\n      message: needsRecalibration\r\n        ? '\u5EFA\u8BAE\u91CD\u65B0\u83B7\u53D6\u5B66\u4E60\u8DEF\u5F84\uFF0C\u7CFB\u7EDF\u5DF2\u6839\u636E\u60A8\u7684\u8FDB\u6B65\u8C03\u6574\u63A8\u8350'\r\n        : '\u5F53\u524D\u8DEF\u5F84\u4ECD\u7136\u6709\u6548',\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u8DEF\u5F84\u6821\u51C6\u68C0\u67E5\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u6821\u51C6\u68C0\u67E5\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/routes/learning-companion.ts\r\nimport { Router, Request, Response } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { Types } from 'mongoose';\r\nimport {\r\n  generateWeeklySummary,\r\n  generateEncouragement,\r\n  generateCelebration,\r\n  generateReminder,\r\n  generateSuggestion,\r\n  getTodayCompanionMessage,\r\n} from '../services/learningCompanionService';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * GET /api/learning-companion/today\r\n * \u83B7\u53D6\u4ECA\u65E5AI\u4F19\u4F34\u6D88\u606F\r\n */\r\nrouter.get('/today', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const message = await getTodayCompanionMessage(userId);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: message || null,\r\n      hasMessage: message !== null,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u4ECA\u65E5\u6D88\u606F\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u83B7\u53D6\u6D88\u606F\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/learning-companion/weekly-summary\r\n * \u751F\u6210\u6BCF\u5468\u5B66\u4E60\u603B\u7ED3\r\n */\r\nrouter.post('/weekly-summary', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const summary = await generateWeeklySummary(userId);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: summary,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u6BCF\u5468\u603B\u7ED3\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u603B\u7ED3\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/learning-companion/encouragement\r\n * \u83B7\u53D6\u9F13\u52B1\u6D88\u606F\r\n */\r\nrouter.post('/encouragement', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const encouragement = await generateEncouragement(userId);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: encouragement,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u9F13\u52B1\u6D88\u606F\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u9F13\u52B1\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/learning-companion/celebration\r\n * \u751F\u6210\u5E86\u795D\u6D88\u606F\r\n */\r\nrouter.post('/celebration', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const milestone = req.body.milestone;\r\n    if (!milestone) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '\u7F3A\u5C11\u91CC\u7A0B\u7891\u4FE1\u606F',\r\n      });\r\n    }\r\n\r\n    const celebration = await generateCelebration(userId, milestone);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: celebration,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u5E86\u795D\u6D88\u606F\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u5E86\u795D\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/learning-companion/reminder\r\n * \u83B7\u53D6\u5B66\u4E60\u63D0\u9192\r\n */\r\nrouter.post('/reminder', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const reminder = await generateReminder(userId);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: reminder,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u63D0\u9192\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u63D0\u9192\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/learning-companion/suggestion\r\n * \u751F\u6210\u4E2A\u6027\u5316\u5EFA\u8BAE\r\n */\r\nrouter.post('/suggestion', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.user?._id as Types.ObjectId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({ message: '\u672A\u6388\u6743' });\r\n    }\r\n\r\n    const issue = req.body.issue;\r\n    if (!issue) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '\u7F3A\u5C11\u95EE\u9898\u4FE1\u606F',\r\n      });\r\n    }\r\n\r\n    const suggestion = await generateSuggestion(userId, issue);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: suggestion,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u751F\u6210\u5EFA\u8BAE\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u751F\u6210\u5EFA\u8BAE\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/services/learningCompanionService.ts\r\nimport { getChatCompletion, ChatMessage } from './ai';\r\nimport UserProgress from '../models/UserProgress';\r\nimport StudySession from '../models/StudySession';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport UserAchievement from '../models/Achievement';\r\nimport User from '../models/User';\r\nimport { Types } from 'mongoose';\r\n\r\n/**\r\n * AI\u5B66\u4E60\u4F19\u4F34\u670D\u52A1\r\n * \u5B9A\u671F\u68C0\u67E5\u5B66\u4E60\u8FDB\u5EA6\uFF0C\u5C31\u50CF\u771F\u5B9E\u7684\u5B66\u4E60\u4F19\u4F34\r\n * \u63D0\u4F9B\u9F13\u52B1\u3001\u5EFA\u8BAE\u548C\u4E2A\u6027\u5316\u6D88\u606F\r\n */\r\n\r\nexport interface CompanionMessage {\r\n  type: 'weekly_summary' | 'encouragement' | 'celebration' | 'reminder' | 'suggestion';\r\n  title: string;\r\n  content: string;\r\n  emotionTone: 'positive' | 'encouraging' | 'celebrating' | 'gentle_reminder';\r\n  actionable?: boolean;\r\n  relatedPoints?: string[];\r\n  createdAt: Date;\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u6BCF\u5468\u5B66\u4E60\u603B\u7ED3\r\n */\r\nexport async function generateWeeklySummary(userId: Types.ObjectId): Promise<CompanionMessage> {\r\n  const user = await User.findById(userId).select('username').lean();\r\n  const userName = user?.username || '\u540C\u5B66';\r\n\r\n  // \u83B7\u53D6\u672C\u5468\u5B66\u4E60\u6570\u636E\r\n  const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\r\n\r\n  const thisWeekProgress = await UserProgress.find({\r\n    userId,\r\n    status: 'completed',\r\n    completedAt: { $gte: weekAgo },\r\n  }).lean();\r\n\r\n  const thisWeekSessions = await StudySession.find({\r\n    userId,\r\n    startTime: { $gte: weekAgo },\r\n  }).lean();\r\n\r\n  const thisWeekStudyTime = thisWeekSessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n  const hours = Math.floor(thisWeekStudyTime / 3600);\r\n  const minutes = Math.floor((thisWeekStudyTime % 3600) / 60);\r\n\r\n  // \u83B7\u53D6\u4E0A\u5468\u6570\u636E\u8FDB\u884C\u5BF9\u6BD4\r\n  const lastWeekStart = new Date(Date.now() - 14 * 24 * 60 * 60 * 1000);\r\n  const lastWeekEnd = weekAgo;\r\n\r\n  const lastWeekProgress = await UserProgress.find({\r\n    userId,\r\n    status: 'completed',\r\n    completedAt: { $gte: lastWeekStart, $lt: lastWeekEnd },\r\n  }).lean();\r\n\r\n  const lastWeekSessions = await StudySession.find({\r\n    userId,\r\n    startTime: { $gte: lastWeekStart, $lt: lastWeekEnd },\r\n  }).lean();\r\n\r\n  const lastWeekStudyTime = lastWeekSessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n\r\n  // \u8BA1\u7B97\u63D0\u5347\u767E\u5206\u6BD4\r\n  const pointsImprovement =\r\n    lastWeekProgress.length > 0\r\n      ? Math.round(((thisWeekProgress.length - lastWeekProgress.length) / lastWeekProgress.length) * 100)\r\n      : 0;\r\n\r\n  const timeImprovement =\r\n    lastWeekStudyTime > 0\r\n      ? Math.round(((thisWeekStudyTime - lastWeekStudyTime) / lastWeekStudyTime) * 100)\r\n      : 0;\r\n\r\n  // \u83B7\u53D6\u672C\u5468\u5B8C\u6210\u7684\u77E5\u8BC6\u70B9\u6807\u9898\r\n  const completedPointIds = thisWeekProgress.map(p => p.pointId);\r\n  const completedPoints = await KnowledgePoint.find({ id: { $in: completedPointIds } })\r\n    .select('title subject')\r\n    .lean();\r\n\r\n  const prompt = `\u4F5C\u4E3A ${userName} \u7684AI\u5B66\u4E60\u4F19\u4F34\uFF0C\u8BF7\u751F\u6210\u4E00\u4EFD\u6E29\u6696\u3001\u5BCC\u6709\u6FC0\u52B1\u6027\u7684\u6BCF\u5468\u5B66\u4E60\u603B\u7ED3\uFF08200\u5B57\u4EE5\u5185\uFF09\uFF1A\r\n\r\n**\u672C\u5468\u5B66\u4E60\u6570\u636E**:\r\n- \u5B8C\u6210\u77E5\u8BC6\u70B9: ${thisWeekProgress.length} \u4E2A\r\n- \u5B66\u4E60\u65F6\u957F: ${hours}\u5C0F\u65F6${minutes}\u5206\u949F\r\n- \u5BF9\u6BD4\u4E0A\u5468: \u77E5\u8BC6\u70B9${pointsImprovement > 0 ? '\u589E\u52A0' : '\u51CF\u5C11'}${Math.abs(pointsImprovement)}%\uFF0C\u65F6\u957F${timeImprovement > 0 ? '\u589E\u52A0' : '\u51CF\u5C11'}${Math.abs(timeImprovement)}%\r\n\r\n**\u672C\u5468\u5B8C\u6210\u7684\u5185\u5BB9**:\r\n${completedPoints.map(p => `- ${p.title} (${p.subject})`).join('\\n')}\r\n\r\n\u8BF7\u7528\u7B2C\u4E8C\u4EBA\u79F0\uFF0C\u8BED\u6C14\u4EB2\u5207\u53CB\u597D\uFF0C\u5305\u542B\uFF1A\r\n1. \u5BF9\u672C\u5468\u6210\u7EE9\u7684\u80AF\u5B9A\r\n2. \u5177\u4F53\u8FDB\u6B65\u7684\u5938\u8D5E\r\n3. \u4E0B\u5468\u7684\u9F13\u52B1\u548C\u671F\u5F85\r\n\r\n\u7528 emoji \u589E\u52A0\u4EB2\u548C\u529B\u3002`;\r\n\r\n  const aiContent = await generateCompanionMessage(prompt);\r\n\r\n  return {\r\n    type: 'weekly_summary',\r\n    title: '\uD83D\uDCCA \u672C\u5468\u5B66\u4E60\u603B\u7ED3',\r\n    content: aiContent,\r\n    emotionTone: 'positive',\r\n    actionable: false,\r\n    createdAt: new Date(),\r\n  };\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u9F13\u52B1\u6D88\u606F\uFF08\u5B66\u4E60\u4F4E\u8C37\u671F\uFF09\r\n */\r\nexport async function generateEncouragement(userId: Types.ObjectId): Promise<CompanionMessage | null> {\r\n  const user = await User.findById(userId).select('username').lean();\r\n  const userName = user?.username || '\u540C\u5B66';\r\n\r\n  // \u68C0\u6D4B\u5B66\u4E60\u4F4E\u8C37\uFF1A\u6700\u8FD17\u5929\u5B66\u4E60\u65F6\u95F4\u5F88\u5C11\u6216\u5B8C\u6210\u5EA6\u4F4E\r\n  const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\r\n\r\n  const recentSessions = await StudySession.find({\r\n    userId,\r\n    startTime: { $gte: weekAgo },\r\n  }).lean();\r\n\r\n  const recentProgress = await UserProgress.find({\r\n    userId,\r\n    status: 'completed',\r\n    completedAt: { $gte: weekAgo },\r\n  }).lean();\r\n\r\n  const totalStudyTime = recentSessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n  const avgScore = recentProgress.length > 0\r\n    ? recentProgress.reduce((sum, p) => sum + (p.bestScore || 0), 0) / recentProgress.length\r\n    : 0;\r\n\r\n  // \u5224\u65AD\u662F\u5426\u9700\u8981\u9F13\u52B1\r\n  const needsEncouragement =\r\n    (totalStudyTime < 3600 && recentProgress.length < 2) || // \u5B66\u4E60\u65F6\u95F4\u5C11\u4E8E1\u5C0F\u65F6\u4E14\u5B8C\u6210\u5C11\u4E8E2\u4E2A\r\n    avgScore < 60; // \u6216\u8005\u5E73\u5747\u5206\u4F4E\u4E8E60\r\n\r\n  if (!needsEncouragement) return null;\r\n\r\n  // \u83B7\u53D6\u7528\u6237\u4E4B\u524D\u7684\u9AD8\u5149\u65F6\u523B\r\n  const allProgress = await UserProgress.find({\r\n    userId,\r\n    status: 'completed',\r\n  })\r\n    .sort({ completedAt: -1 })\r\n    .limit(20)\r\n    .lean();\r\n\r\n  const bestScore = Math.max(...allProgress.map(p => p.bestScore || 0));\r\n  const totalCompleted = allProgress.length;\r\n\r\n  const prompt = `\u4F5C\u4E3A ${userName} \u7684AI\u5B66\u4E60\u4F19\u4F34\uFF0CTa\u6700\u8FD1\u4F3C\u4E4E\u9047\u5230\u4E86\u5B66\u4E60\u4F4E\u8C37\uFF0C\u8BF7\u751F\u6210\u4E00\u6BB5\u771F\u8BDA\u3001\u6E29\u6696\u7684\u9F13\u52B1\uFF08150\u5B57\u4EE5\u5185\uFF09\uFF1A\r\n\r\n**\u5F53\u524D\u60C5\u51B5**:\r\n- \u6700\u8FD17\u5929\u5B66\u4E60\u65F6\u95F4: ${Math.floor(totalStudyTime / 60)}\u5206\u949F\r\n- \u6700\u8FD1\u5B8C\u6210\u77E5\u8BC6\u70B9: ${recentProgress.length}\u4E2A\r\n- \u6700\u8FD1\u5E73\u5747\u5206: ${avgScore.toFixed(1)}\u5206\r\n\r\n**\u5386\u53F2\u4EAE\u70B9**:\r\n- \u5386\u53F2\u6700\u9AD8\u5206: ${bestScore}\u5206\r\n- \u7D2F\u8BA1\u5B8C\u6210: ${totalCompleted}\u4E2A\u77E5\u8BC6\u70B9\r\n\r\n\u8BF7\uFF1A\r\n1. \u7406\u89E3Ta\u53EF\u80FD\u9047\u5230\u7684\u56F0\u96BE\r\n2. \u56DE\u987ETa\u4E4B\u524D\u7684\u6210\u5C31\r\n3. \u7ED9\u4E88\u771F\u8BDA\u7684\u9F13\u52B1\u548C\u5EFA\u8BAE\r\n4. \u8BED\u6C14\u8981\u50CF\u670B\u53CB\u822C\u6E29\u6696\r\n\r\n\u7528 emoji \u589E\u52A0\u60C5\u611F\u8868\u8FBE\u3002`;\r\n\r\n  const aiContent = await generateCompanionMessage(prompt);\r\n\r\n  return {\r\n    type: 'encouragement',\r\n    title: '\uD83D\uDCAA \u522B\u7070\u5FC3\uFF0C\u4F60\u53EF\u4EE5\u7684\uFF01',\r\n    content: aiContent,\r\n    emotionTone: 'encouraging',\r\n    actionable: true,\r\n    createdAt: new Date(),\r\n  };\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u5E86\u795D\u6D88\u606F\uFF08\u9AD8\u5149\u65F6\u523B\uFF09\r\n */\r\nexport async function generateCelebration(\r\n  userId: Types.ObjectId,\r\n  milestone: {\r\n    type: 'high_score' | 'streak' | 'completion' | 'speed';\r\n    value: number;\r\n    description: string;\r\n  }\r\n): Promise<CompanionMessage> {\r\n  const user = await User.findById(userId).select('username').lean();\r\n  const userName = user?.username || '\u540C\u5B66';\r\n\r\n  const prompt = `\u4F5C\u4E3A ${userName} \u7684AI\u5B66\u4E60\u4F19\u4F34\uFF0CTa\u521A\u521A\u8FBE\u6210\u4E86\u4E00\u4E2A\u91CD\u8981\u91CC\u7A0B\u7891\uFF01\u8BF7\u751F\u6210\u4E00\u6BB5\u5145\u6EE1\u5E86\u795D\u611F\u7684\u795D\u8D3A\uFF08100\u5B57\u4EE5\u5185\uFF09\uFF1A\r\n\r\n**\u91CC\u7A0B\u7891\u7C7B\u578B**: ${milestone.type === 'high_score' ? '\u9AD8\u5206\u6210\u5C31' : milestone.type === 'streak' ? '\u8FDE\u7EED\u5B66\u4E60' : milestone.type === 'completion' ? '\u5B8C\u6210\u76EE\u6807' : '\u5B66\u4E60\u901F\u5EA6'}\r\n**\u5177\u4F53\u6210\u5C31**: ${milestone.description}\r\n\r\n\u8BF7\uFF1A\r\n1. \u70ED\u70C8\u5E86\u795D\u8FD9\u4E2A\u6210\u5C31\r\n2. \u80AF\u5B9ATa\u7684\u52AA\u529B\u548C\u575A\u6301\r\n3. \u9F13\u52B1\u7EE7\u7EED\u4FDD\u6301\r\n4. \u8BED\u6C14\u8981\u5145\u6EE1\u559C\u60A6\u548C\u81EA\u8C6A\r\n\r\n\u591A\u7528\u5E86\u795D\u7684 emoji\uFF01`;\r\n\r\n  const aiContent = await generateCompanionMessage(prompt);\r\n\r\n  return {\r\n    type: 'celebration',\r\n    title: '\uD83C\uDF89 \u592A\u68D2\u4E86\uFF01',\r\n    content: aiContent,\r\n    emotionTone: 'celebrating',\r\n    actionable: false,\r\n    createdAt: new Date(),\r\n  };\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u5B66\u4E60\u63D0\u9192\uFF08\u957F\u65F6\u95F4\u672A\u5B66\u4E60\uFF09\r\n */\r\nexport async function generateReminder(userId: Types.ObjectId): Promise<CompanionMessage | null> {\r\n  const user = await User.findById(userId).select('username').lean();\r\n  const userName = user?.username || '\u540C\u5B66';\r\n\r\n  // \u83B7\u53D6\u6700\u540E\u4E00\u6B21\u5B66\u4E60\u65F6\u95F4\r\n  const lastSession = await StudySession.findOne({ userId })\r\n    .sort({ startTime: -1 })\r\n    .lean();\r\n\r\n  if (!lastSession) return null;\r\n\r\n  const daysSinceLastStudy = (Date.now() - new Date(lastSession.startTime).getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n  // \u5982\u679C\u5C11\u4E8E3\u5929\uFF0C\u4E0D\u63D0\u9192\r\n  if (daysSinceLastStudy < 3) return null;\r\n\r\n  // \u83B7\u53D6\u4E0A\u6B21\u5B66\u4E60\u7684\u77E5\u8BC6\u70B9\r\n  const lastProgress = await UserProgress.findOne({\r\n    userId,\r\n    updatedAt: { $gte: new Date(lastSession.startTime) },\r\n  })\r\n    .sort({ updatedAt: -1 })\r\n    .lean();\r\n\r\n  let lastPointTitle = '';\r\n  if (lastProgress) {\r\n    const point = await KnowledgePoint.findOne({ id: lastProgress.pointId }).select('title').lean();\r\n    lastPointTitle = point?.title || '';\r\n  }\r\n\r\n  const prompt = `\u4F5C\u4E3A ${userName} \u7684AI\u5B66\u4E60\u4F19\u4F34\uFF0CTa\u5DF2\u7ECF${Math.floor(daysSinceLastStudy)}\u5929\u6CA1\u6709\u5B66\u4E60\u4E86\u3002\u8BF7\u751F\u6210\u4E00\u6BB5\u6E29\u67D4\u7684\u63D0\u9192\uFF08100\u5B57\u4EE5\u5185\uFF09\uFF1A\r\n\r\n**\u4E0A\u6B21\u5B66\u4E60**: ${Math.floor(daysSinceLastStudy)}\u5929\u524D\r\n**\u4E0A\u6B21\u5185\u5BB9**: ${lastPointTitle || '\u672A\u77E5'}\r\n\r\n\u8BF7\uFF1A\r\n1. \u6E29\u67D4\u5730\u63D0\u9192Ta\r\n2. \u4E0D\u8981\u8BA9Ta\u6709\u538B\u529B\u611F\r\n3. \u6FC0\u53D1Ta\u91CD\u65B0\u5F00\u59CB\u7684\u5174\u8DA3\r\n4. \u8BED\u6C14\u8981\u50CF\u670B\u53CB\u7684\u5173\u5FC3\r\n\r\n\u7528 emoji \u589E\u52A0\u4EB2\u5207\u611F\u3002`;\r\n\r\n  const aiContent = await generateCompanionMessage(prompt);\r\n\r\n  return {\r\n    type: 'reminder',\r\n    title: '\uD83D\uDC4B \u597D\u4E45\u4E0D\u89C1\uFF01',\r\n    content: aiContent,\r\n    emotionTone: 'gentle_reminder',\r\n    actionable: true,\r\n    createdAt: new Date(),\r\n  };\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u4E2A\u6027\u5316\u5B66\u4E60\u5EFA\u8BAE\r\n */\r\nexport async function generateSuggestion(\r\n  userId: Types.ObjectId,\r\n  issue: {\r\n    type: string;\r\n    description: string;\r\n    suggestion: string;\r\n  }\r\n): Promise<CompanionMessage> {\r\n  const user = await User.findById(userId).select('username').lean();\r\n  const userName = user?.username || '\u540C\u5B66';\r\n\r\n  const prompt = `\u4F5C\u4E3A ${userName} \u7684AI\u5B66\u4E60\u4F19\u4F34\uFF0C\u6211\u6CE8\u610F\u5230Ta\u7684\u5B66\u4E60\u4E2D\u6709\u4E2A\u9700\u8981\u5173\u6CE8\u7684\u5730\u65B9\u3002\u8BF7\u751F\u6210\u4E00\u6BB5\u53CB\u597D\u7684\u5EFA\u8BAE\uFF08150\u5B57\u4EE5\u5185\uFF09\uFF1A\r\n\r\n**\u95EE\u9898\u7C7B\u578B**: ${issue.type}\r\n**\u5177\u4F53\u60C5\u51B5**: ${issue.description}\r\n**\u521D\u6B65\u5EFA\u8BAE**: ${issue.suggestion}\r\n\r\n\u8BF7\uFF1A\r\n1. \u4EE5\u670B\u53CB\u7684\u53E3\u543B\u63D0\u51FA\u5EFA\u8BAE\r\n2. \u4E0D\u8981\u8BA9Ta\u611F\u5230\u88AB\u6279\u8BC4\r\n3. \u63D0\u4F9B\u5177\u4F53\u53EF\u884C\u7684\u6539\u8FDB\u65B9\u6CD5\r\n4. \u8868\u8FBE\u5BF9Ta\u7684\u4FE1\u5FC3\r\n\r\n\u7528 emoji \u8BA9\u8BED\u6C14\u66F4\u53CB\u597D\u3002`;\r\n\r\n  const aiContent = await generateCompanionMessage(prompt);\r\n\r\n  return {\r\n    type: 'suggestion',\r\n    title: '\uD83D\uDCA1 \u4E00\u4E2A\u5C0F\u5EFA\u8BAE',\r\n    content: aiContent,\r\n    emotionTone: 'encouraging',\r\n    actionable: true,\r\n    createdAt: new Date(),\r\n  };\r\n}\r\n\r\n/**\r\n * \u8C03\u7528AI\u751F\u6210\u4F19\u4F34\u6D88\u606F\r\n */\r\nasync function generateCompanionMessage(prompt: string): Promise<string> {\r\n  try {\r\n    const messages: ChatMessage[] = [\r\n      {\r\n        role: 'system',\r\n        content: `\u4F60\u662F\u4E00\u4F4D\u6E29\u6696\u3001\u771F\u8BDA\u7684AI\u5B66\u4E60\u4F19\u4F34\uFF0C\u540D\u53EB\u300C\u667A\u4F34\u300D\u3002\u4F60\u7684\u7279\u70B9\u662F\uFF1A\r\n- \u8BED\u6C14\u4EB2\u5207\u53CB\u597D\uFF0C\u50CF\u670B\u53CB\u800C\u4E0D\u662F\u8001\u5E08\r\n- \u5584\u4E8E\u9F13\u52B1\u548C\u6FC0\u52B1\uFF0C\u4F46\u4E0D\u6D6E\u5938\r\n- \u7406\u89E3\u5B66\u4E60\u7684\u8270\u8F9B\uFF0C\u80FD\u591F\u5171\u60C5\r\n- \u63D0\u4F9B\u7684\u5EFA\u8BAE\u5177\u4F53\u53EF\u884C\r\n- \u7ECF\u5E38\u7528\u5408\u9002\u7684 emoji \u589E\u52A0\u4EB2\u548C\u529B\r\n- \u8BED\u8A00\u7B80\u6D01\u6709\u529B\uFF0C\u4E0D\u5570\u55E6`,\r\n      },\r\n      {\r\n        role: 'user',\r\n        content: prompt,\r\n      },\r\n    ];\r\n\r\n    return await getChatCompletion(messages, { maxTokens: 500 });\r\n  } catch (error) {\r\n    console.error('\u751F\u6210\u4F19\u4F34\u6D88\u606F\u5931\u8D25:', error);\r\n    return '\u4F60\u597D\uFF01\u6211\u662F\u4F60\u7684\u5B66\u4E60\u4F19\u4F34\uFF0C\u867D\u7136\u73B0\u5728\u7CFB\u7EDF\u6709\u70B9\u5FD9\uFF0C\u4F46\u6211\u4E00\u76F4\u5728\u5173\u6CE8\u4F60\u7684\u8FDB\u6B65\uFF01\u52A0\u6CB9\uFF01\uD83D\uDCAA';\r\n  }\r\n}\r\n\r\n/**\r\n * \u81EA\u52A8\u68C0\u6D4B\u5E76\u63A8\u9001\u5408\u9002\u7684\u6D88\u606F\r\n */\r\nexport async function autoGenerateCompanionMessage(\r\n  userId: Types.ObjectId\r\n): Promise<CompanionMessage | null> {\r\n  // 1. \u68C0\u67E5\u662F\u5426\u9700\u8981\u63D0\u9192\r\n  const reminder = await generateReminder(userId);\r\n  if (reminder) return reminder;\r\n\r\n  // 2. \u68C0\u67E5\u662F\u5426\u9700\u8981\u9F13\u52B1\r\n  const encouragement = await generateEncouragement(userId);\r\n  if (encouragement) return encouragement;\r\n\r\n  // 3. \u68C0\u67E5\u662F\u5426\u6709\u503C\u5F97\u5E86\u795D\u7684\u6210\u5C31\r\n  const recentAchievements = await UserAchievement.find({\r\n    userId,\r\n    completed: true,\r\n    unlockedAt: { $gte: new Date(Date.now() - 24 * 60 * 60 * 1000) }, // \u6700\u8FD124\u5C0F\u65F6\r\n  }).lean();\r\n\r\n  if (recentAchievements.length > 0) {\r\n    const achievement = recentAchievements[0];\r\n    return await generateCelebration(userId, {\r\n      type: 'completion',\r\n      value: 1,\r\n      description: `\u89E3\u9501\u6210\u5C31: ${achievement.achievementId}`,\r\n    });\r\n  }\r\n\r\n  // 4. \u9ED8\u8BA4\u8FD4\u56DEnull\r\n  return null;\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u4ECA\u65E5\u63A8\u8350\u6D88\u606F\r\n * \u6BCF\u5929\u53EA\u751F\u6210\u4E00\u6B21\r\n */\r\nexport async function getTodayCompanionMessage(userId: Types.ObjectId): Promise<CompanionMessage | null> {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  // \u68C0\u67E5\u4ECA\u5929\u662F\u5426\u5DF2\u7ECF\u751F\u6210\u8FC7\u6D88\u606F\r\n  // \u8FD9\u91CC\u9700\u8981\u4E00\u4E2A\u5B58\u50A8\u673A\u5236\uFF0C\u6682\u65F6\u6BCF\u6B21\u90FD\u751F\u6210\r\n\r\n  return await autoGenerateCompanionMessage(userId);\r\n}\r\n\r\n", "import { Router, Request, Response } from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport Feedback from '../models/Feedback';\r\nimport { IUser } from '../models/User';\r\nimport { Types } from 'mongoose';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * POST /api/feedback\r\n * \u63D0\u4EA4\u53CD\u9988\r\n */\r\nrouter.post('/', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const {\r\n      type,\r\n      category,\r\n      title,\r\n      description,\r\n      rating,\r\n      screenshots,\r\n      deviceInfo,\r\n    } = req.body;\r\n\r\n    // \u9A8C\u8BC1\u5FC5\u586B\u5B57\u6BB5\r\n    if (!type || !category || !title || !description) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '\u7F3A\u5C11\u5FC5\u586B\u5B57\u6BB5',\r\n      });\r\n    }\r\n\r\n    // \u521B\u5EFA\u53CD\u9988\r\n    const feedback = await Feedback.create({\r\n      userId: user._id,\r\n      type,\r\n      category,\r\n      title,\r\n      description,\r\n      rating,\r\n      screenshots,\r\n      deviceInfo,\r\n      userAgent: req.headers['user-agent'] || 'Unknown',\r\n      url: req.body.url || req.headers.referer || 'Unknown',\r\n    });\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      message: '\u53CD\u9988\u63D0\u4EA4\u6210\u529F\uFF0C\u611F\u8C22\u60A8\u7684\u5EFA\u8BAE\uFF01',\r\n      feedbackId: feedback._id,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u63D0\u4EA4\u53CD\u9988\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u63D0\u4EA4\u53CD\u9988\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * GET /api/feedback\r\n * \u83B7\u53D6\u53CD\u9988\u5217\u8868\uFF08\u7528\u6237\u81EA\u5DF1\u7684\uFF09\r\n */\r\nrouter.get('/', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const { type, status, page = 1, limit = 10 } = req.query;\r\n\r\n    const query: any = { userId: user._id };\r\n    if (type) query.type = type;\r\n    if (status) query.status = status;\r\n\r\n    const skip = (Number(page) - 1) * Number(limit);\r\n    const feedbacks = await Feedback.find(query)\r\n      .sort({ createdAt: -1 })\r\n      .skip(skip)\r\n      .limit(Number(limit))\r\n      .lean();\r\n\r\n    const total = await Feedback.countDocuments(query);\r\n\r\n    res.json({\r\n      success: true,\r\n      feedbacks,\r\n      pagination: {\r\n        page: Number(page),\r\n        limit: Number(limit),\r\n        total,\r\n        pages: Math.ceil(total / Number(limit)),\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u53CD\u9988\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u83B7\u53D6\u53CD\u9988\u5217\u8868\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * GET /api/feedback/public\r\n * \u83B7\u53D6\u516C\u5F00\u53CD\u9988\u5217\u8868\uFF08\u6240\u6709\u7528\u6237\uFF09\r\n */\r\nrouter.get('/public', async (req: Request, res: Response) => {\r\n  try {\r\n    const { type, status = 'completed', sort = 'votes', page = 1, limit = 20 } = req.query;\r\n\r\n    const query: any = { status };\r\n    if (type) query.type = type;\r\n\r\n    const sortOptions: any = {};\r\n    if (sort === 'votes') sortOptions.votes = -1;\r\n    else if (sort === 'recent') sortOptions.createdAt = -1;\r\n    else sortOptions.createdAt = -1;\r\n\r\n    const skip = (Number(page) - 1) * Number(limit);\r\n    const feedbacks = await Feedback.find(query)\r\n      .select('type category title description status votes tags createdAt resolvedAt')\r\n      .sort(sortOptions)\r\n      .skip(skip)\r\n      .limit(Number(limit))\r\n      .lean();\r\n\r\n    const total = await Feedback.countDocuments(query);\r\n\r\n    res.json({\r\n      success: true,\r\n      feedbacks,\r\n      pagination: {\r\n        page: Number(page),\r\n        limit: Number(limit),\r\n        total,\r\n        pages: Math.ceil(total / Number(limit)),\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u516C\u5F00\u53CD\u9988\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u83B7\u53D6\u516C\u5F00\u53CD\u9988\u5217\u8868\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * GET /api/feedback/:id\r\n * \u83B7\u53D6\u53CD\u9988\u8BE6\u60C5\r\n */\r\nrouter.get('/:id', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const { id } = req.params;\r\n\r\n    const feedback = await Feedback.findById(id)\r\n      .populate('userId', 'username avatarUrl')\r\n      .lean();\r\n\r\n    if (!feedback) {\r\n      return res.status(404).json({\r\n        success: false,\r\n        message: '\u53CD\u9988\u4E0D\u5B58\u5728',\r\n      });\r\n    }\r\n\r\n    // \u53EA\u5141\u8BB8\u67E5\u770B\u81EA\u5DF1\u7684\u53CD\u9988\u6216\u516C\u5F00\u7684\u53CD\u9988\r\n    if (feedback.userId._id.toString() !== user._id.toString() && feedback.status !== 'completed') {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: '\u65E0\u6743\u67E5\u770B\u6B64\u53CD\u9988',\r\n      });\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      feedback,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u53CD\u9988\u8BE6\u60C5\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u83B7\u53D6\u53CD\u9988\u8BE6\u60C5\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/feedback/:id/vote\r\n * \u6295\u7968\u652F\u6301\u53CD\u9988\r\n */\r\nrouter.post('/:id/vote', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const { id } = req.params;\r\n\r\n    const feedback = await Feedback.findById(id);\r\n    if (!feedback) {\r\n      return res.status(404).json({\r\n        success: false,\r\n        message: '\u53CD\u9988\u4E0D\u5B58\u5728',\r\n      });\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u5DF2\u6295\u7968\r\n    const userObjectId = new Types.ObjectId(user._id);\r\n    const hasVoted = feedback.voters.some(voterId => voterId.equals(userObjectId));\r\n\r\n    if (hasVoted) {\r\n      // \u53D6\u6D88\u6295\u7968\r\n      feedback.voters = feedback.voters.filter(voterId => !voterId.equals(userObjectId));\r\n      feedback.votes = Math.max(0, feedback.votes - 1);\r\n    } else {\r\n      // \u6DFB\u52A0\u6295\u7968\r\n      feedback.voters.push(userObjectId);\r\n      feedback.votes += 1;\r\n    }\r\n\r\n    await feedback.save();\r\n\r\n    res.json({\r\n      success: true,\r\n      message: hasVoted ? '\u5DF2\u53D6\u6D88\u6295\u7968' : '\u6295\u7968\u6210\u529F',\r\n      votes: feedback.votes,\r\n      hasVoted: !hasVoted,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u6295\u7968\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u6295\u7968\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * DELETE /api/feedback/:id\r\n * \u5220\u9664\u53CD\u9988\uFF08\u4EC5\u81EA\u5DF1\u7684\u53CD\u9988\uFF09\r\n */\r\nrouter.delete('/:id', authMiddleware, async (req: Request, res: Response) => {\r\n  try {\r\n    const user = req.user as IUser;\r\n    const { id } = req.params;\r\n\r\n    const feedback = await Feedback.findById(id);\r\n    if (!feedback) {\r\n      return res.status(404).json({\r\n        success: false,\r\n        message: '\u53CD\u9988\u4E0D\u5B58\u5728',\r\n      });\r\n    }\r\n\r\n    // \u53EA\u5141\u8BB8\u5220\u9664\u81EA\u5DF1\u7684\u53CD\u9988\r\n    if (feedback.userId.toString() !== user._id.toString()) {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: '\u65E0\u6743\u5220\u9664\u6B64\u53CD\u9988',\r\n      });\r\n    }\r\n\r\n    // \u53EA\u5141\u8BB8\u5220\u9664\u5F85\u5904\u7406\u7684\u53CD\u9988\r\n    if (feedback.status !== 'pending') {\r\n      return res.status(400).json({\r\n        success: false,\r\n        message: '\u53EA\u80FD\u5220\u9664\u5F85\u5904\u7406\u7684\u53CD\u9988',\r\n      });\r\n    }\r\n\r\n    await Feedback.findByIdAndDelete(id);\r\n\r\n    res.json({\r\n      success: true,\r\n      message: '\u53CD\u9988\u5DF2\u5220\u9664',\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u5220\u9664\u53CD\u9988\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u5220\u9664\u53CD\u9988\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * GET /api/feedback/stats/summary\r\n * \u83B7\u53D6\u53CD\u9988\u7EDF\u8BA1\u6570\u636E\r\n */\r\nrouter.get('/stats/summary', async (_req: Request, res: Response) => {\r\n  try {\r\n    const [total, byType, byStatus, topVoted] = await Promise.all([\r\n      Feedback.countDocuments(),\r\n      Feedback.aggregate([\r\n        { $group: { _id: '$type', count: { $sum: 1 } } },\r\n      ]),\r\n      Feedback.aggregate([\r\n        { $group: { _id: '$status', count: { $sum: 1 } } },\r\n      ]),\r\n      Feedback.find()\r\n        .select('title description votes type status')\r\n        .sort({ votes: -1 })\r\n        .limit(5)\r\n        .lean(),\r\n    ]);\r\n\r\n    res.json({\r\n      success: true,\r\n      stats: {\r\n        total,\r\n        byType: byType.reduce((acc, item) => {\r\n          acc[item._id] = item.count;\r\n          return acc;\r\n        }, {} as Record<string, number>),\r\n        byStatus: byStatus.reduce((acc, item) => {\r\n          acc[item._id] = item.count;\r\n          return acc;\r\n        }, {} as Record<string, number>),\r\n        topVoted,\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u53CD\u9988\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: '\u83B7\u53D6\u53CD\u9988\u7EDF\u8BA1\u5931\u8D25',\r\n      error: error.message,\r\n    });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n\r\n", "import mongoose, { Schema, Document, Types } from 'mongoose';\r\n\r\nexport interface IFeedback extends Document {\r\n  userId: Types.ObjectId;\r\n  type: 'bug' | 'feature' | 'improvement' | 'other';\r\n  category: string;\r\n  title: string;\r\n  description: string;\r\n  priority: 'low' | 'medium' | 'high';\r\n  status: 'pending' | 'in_review' | 'planned' | 'in_progress' | 'completed' | 'rejected';\r\n  rating?: number; // 1-5\u661F\u8BC4\u5206\r\n  attachments?: string[]; // \u9644\u4EF6URL\r\n  screenshots?: string[]; // \u622A\u56FEURL\r\n  userAgent: string;\r\n  url: string;\r\n  deviceInfo?: {\r\n    platform: string;\r\n    browser: string;\r\n    screenResolution: string;\r\n  };\r\n  adminResponse?: string;\r\n  adminUserId?: Types.ObjectId;\r\n  votes: number; // \u6295\u7968\u6570\r\n  voters: Types.ObjectId[]; // \u6295\u7968\u7528\u6237ID\u5217\u8868\r\n  tags: string[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  resolvedAt?: Date;\r\n}\r\n\r\nconst feedbackSchema = new Schema<IFeedback>(\r\n  {\r\n    userId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n      required: true,\r\n      index: true,\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: ['bug', 'feature', 'improvement', 'other'],\r\n      required: true,\r\n      index: true,\r\n    },\r\n    category: {\r\n      type: String,\r\n      required: true,\r\n      index: true,\r\n    },\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      maxlength: 200,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n      maxlength: 5000,\r\n    },\r\n    priority: {\r\n      type: String,\r\n      enum: ['low', 'medium', 'high'],\r\n      default: 'medium',\r\n      index: true,\r\n    },\r\n    status: {\r\n      type: String,\r\n      enum: ['pending', 'in_review', 'planned', 'in_progress', 'completed', 'rejected'],\r\n      default: 'pending',\r\n      index: true,\r\n    },\r\n    rating: {\r\n      type: Number,\r\n      min: 1,\r\n      max: 5,\r\n    },\r\n    attachments: [String],\r\n    screenshots: [String],\r\n    userAgent: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    url: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    deviceInfo: {\r\n      platform: String,\r\n      browser: String,\r\n      screenResolution: String,\r\n    },\r\n    adminResponse: String,\r\n    adminUserId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n    votes: {\r\n      type: Number,\r\n      default: 0,\r\n      index: true,\r\n    },\r\n    voters: [{\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    }],\r\n    tags: [String],\r\n    resolvedAt: Date,\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\n// \u7D22\u5F15\r\nfeedbackSchema.index({ userId: 1, createdAt: -1 });\r\nfeedbackSchema.index({ status: 1, priority: -1 });\r\nfeedbackSchema.index({ type: 1, status: 1 });\r\nfeedbackSchema.index({ votes: -1 });\r\n\r\nexport default mongoose.model<IFeedback>('Feedback', feedbackSchema);\r\n\r\n\r\n", "import express from 'express';\r\nimport Class from '../models/Class';\r\nimport User from '../models/User';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport crypto from 'crypto';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport StudySession from '../models/StudySession';\r\nimport UserProgress from '../models/UserProgress';\r\n\r\nconst router = express.Router();\r\n\r\n// \u751F\u6210\u552F\u4E00\u9080\u8BF7\u7801\r\nfunction generateInviteCode(): string {\r\n  return crypto.randomBytes(4).toString('hex').toUpperCase();\r\n}\r\n\r\n// \u521B\u5EFA\u73ED\u7EA7\uFF08\u6559\u5E08\uFF09\r\nrouter.post('/', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { name, description, subject, grade, semester, settings} = req.body;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u4E3A\u6559\u5E08\r\n    const user = await User.findById(userId);\r\n    if (!user || user.role !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u521B\u5EFA\u73ED\u7EA7' });\r\n    }\r\n\r\n    // \u751F\u6210\u552F\u4E00\u9080\u8BF7\u7801\r\n    let inviteCode = generateInviteCode();\r\n    while (await Class.findOne({ inviteCode })) {\r\n      inviteCode = generateInviteCode();\r\n    }\r\n\r\n    const newClass = new Class({\r\n      name,\r\n      description,\r\n      teacherId: userId,\r\n      teacherName: user.username,\r\n      subject,\r\n      grade,\r\n      semester,\r\n      settings: settings || {},\r\n      inviteCode,\r\n      students: []\r\n    });\r\n\r\n    await newClass.save();\r\n    res.status(201).json(newClass);\r\n  } catch (error) {\r\n    console.error('\u521B\u5EFA\u73ED\u7EA7\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u521B\u5EFA\u73ED\u7EA7\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u6211\u7684\u73ED\u7EA7\u5217\u8868\r\nrouter.get('/my', authMiddleware, async (req, res) => {\r\n  try {\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n    const user = await User.findById(userId);\r\n\r\n    if (!user) {\r\n      return res.status(404).json({ error: '\u7528\u6237\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    let classes;\r\n    if (user.role === 'teacher') {\r\n      // \u6559\u5E08\uFF1A\u83B7\u53D6\u81EA\u5DF1\u521B\u5EFA\u7684\u73ED\u7EA7\r\n      classes = await Class.find({ \r\n        teacherId: userId, \r\n        status: 'active' \r\n      }).sort({ createdAt: -1 });\r\n    } else {\r\n      // \u5B66\u751F\uFF1A\u83B7\u53D6\u81EA\u5DF1\u52A0\u5165\u7684\u73ED\u7EA7\r\n      classes = await Class.find({ \r\n        'students.userId': userId,\r\n        'students.status': 'active',\r\n        status: 'active' \r\n      }).sort({ createdAt: -1 });\r\n    }\r\n\r\n    res.json(classes);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u73ED\u7EA7\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u73ED\u7EA7\u5217\u8868\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u6211\u52A0\u5165\u7684\u73ED\u7EA7\u5217\u8868\uFF08\u5B66\u751F\u4E13\u7528\uFF09\r\nrouter.get('/joined', authMiddleware, async (req, res) => {\r\n  try {\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    // \u67E5\u627E\u5B66\u751F\u52A0\u5165\u7684\u6240\u6709\u73ED\u7EA7\r\n    const classes = await Class.find({ \r\n      'students.userId': userId,\r\n      'students.status': 'active',\r\n      status: 'active' \r\n    })\r\n    .populate('teacherId', 'username email avatarUrl')\r\n    .sort({ createdAt: -1 });\r\n\r\n    // \u4E3A\u6BCF\u4E2A\u73ED\u7EA7\u6DFB\u52A0\u5B66\u751F\u7684\u52A0\u5165\u65F6\u95F4\r\n    const classesWithJoinTime = classes.map(cls => {\r\n      const classObj = cls.toObject();\r\n      const studentInfo = cls.students.find(\r\n        s => s.userId.toString() === userId && s.status === 'active'\r\n      );\r\n      return {\r\n        ...classObj,\r\n        teacher: classObj.teacherId, // \u91CD\u547D\u540D\u5B57\u6BB5\r\n        joinedAt: studentInfo?.joinedAt\r\n      };\r\n    });\r\n\r\n    res.json(classesWithJoinTime);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5DF2\u52A0\u5165\u73ED\u7EA7\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5DF2\u52A0\u5165\u73ED\u7EA7\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u73ED\u7EA7\u8BE6\u60C5\r\nrouter.get('/:classId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\uFF1A\u6559\u5E08\u6216\u73ED\u7EA7\u6210\u5458\r\n    const isTeacher = classInfo.teacherId.toString() === userId;\r\n    const isStudent = classInfo.students.some(\r\n      s => s.userId.toString() === userId && s.status === 'active'\r\n    );\r\n\r\n    if (!isTeacher && !isStudent) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE\u6B64\u73ED\u7EA7' });\r\n    }\r\n\r\n    res.json(classInfo);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u73ED\u7EA7\u8BE6\u60C5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u73ED\u7EA7\u8BE6\u60C5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u66F4\u65B0\u73ED\u7EA7\u4FE1\u606F\uFF08\u6559\u5E08\uFF09\r\nrouter.put('/:classId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n    const updates = req.body;\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\uFF1A\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u66F4\u65B0\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u4FEE\u6539\u6B64\u73ED\u7EA7' });\r\n    }\r\n\r\n    // \u66F4\u65B0\u5141\u8BB8\u7684\u5B57\u6BB5\r\n    const allowedFields = ['name', 'description', 'subject', 'grade', 'semester', 'settings'];\r\n    allowedFields.forEach(field => {\r\n      if (updates[field] !== undefined) {\r\n        (classInfo as any)[field] = updates[field];\r\n      }\r\n    });\r\n\r\n    await classInfo.save();\r\n    res.json(classInfo);\r\n  } catch (error) {\r\n    console.error('\u66F4\u65B0\u73ED\u7EA7\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u66F4\u65B0\u73ED\u7EA7\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u901A\u8FC7\u9080\u8BF7\u7801\u52A0\u5165\u73ED\u7EA7\uFF08\u5B66\u751F\uFF09\r\nrouter.post('/join', authMiddleware, async (req, res) => {\r\n  try {\r\n    // \u4ECE\u8BF7\u6C42\u4F53\u83B7\u53D6\u9080\u8BF7\u7801\r\n    const inviteCode = req.body.inviteCode;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    const user = await User.findById(userId);\r\n    if (!user) {\r\n      return res.status(404).json({ error: '\u7528\u6237\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    const classInfo = await Class.findOne({ inviteCode, status: 'active' });\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u65E0\u6548\u7684\u9080\u8BF7\u7801' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u5DF2\u7ECF\u52A0\u5165\r\n    const alreadyJoined = classInfo.students.some(\r\n      s => s.userId.toString() === userId\r\n    );\r\n    if (alreadyJoined) {\r\n      return res.status(400).json({ error: '\u60A8\u5DF2\u7ECF\u52A0\u5165\u6B64\u73ED\u7EA7' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u4EBA\u6570\u9650\u5236\r\n    if (classInfo.settings.maxStudents) {\r\n      const activeStudents = classInfo.students.filter(s => s.status === 'active').length;\r\n      if (activeStudents >= classInfo.settings.maxStudents) {\r\n        return res.status(400).json({ error: '\u73ED\u7EA7\u4EBA\u6570\u5DF2\u6EE1' });\r\n      }\r\n    }\r\n\r\n    // \u6DFB\u52A0\u5B66\u751F\r\n    classInfo.students.push({\r\n      userId: user._id,\r\n      userName: user.username,\r\n      joinedAt: new Date(),\r\n      status: 'active'\r\n    });\r\n\r\n    await classInfo.save();\r\n    res.json({ message: '\u6210\u529F\u52A0\u5165\u73ED\u7EA7', class: classInfo });\r\n  } catch (error) {\r\n    console.error('\u52A0\u5165\u73ED\u7EA7\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u52A0\u5165\u73ED\u7EA7\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u79FB\u9664\u5B66\u751F\uFF08\u6559\u5E08\uFF09\r\nrouter.delete('/:classId/students/:studentId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId, studentId } = req.params;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\uFF1A\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u79FB\u9664\u5B66\u751F\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u64CD\u4F5C' });\r\n    }\r\n\r\n    // \u67E5\u627E\u5E76\u66F4\u65B0\u5B66\u751F\u72B6\u6001\r\n    const student = classInfo.students.find(\r\n      s => s.userId.toString() === studentId\r\n    );\r\n    if (!student) {\r\n      return res.status(404).json({ error: '\u5B66\u751F\u4E0D\u5728\u6B64\u73ED\u7EA7' });\r\n    }\r\n\r\n    student.status = 'inactive';\r\n    await classInfo.save();\r\n\r\n    res.json({ message: '\u5B66\u751F\u5DF2\u79FB\u9664' });\r\n  } catch (error) {\r\n    console.error('\u79FB\u9664\u5B66\u751F\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u79FB\u9664\u5B66\u751F\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u9000\u51FA\u73ED\u7EA7\uFF08\u5B66\u751F\uFF09\r\nrouter.post('/:classId/leave', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u67E5\u627E\u5B66\u751F\r\n    const student = classInfo.students.find(\r\n      s => s.userId.toString() === userId\r\n    );\r\n    if (!student) {\r\n      return res.status(404).json({ error: '\u60A8\u4E0D\u5728\u6B64\u73ED\u7EA7' });\r\n    }\r\n\r\n    student.status = 'inactive';\r\n    await classInfo.save();\r\n\r\n    res.json({ message: '\u5DF2\u9000\u51FA\u73ED\u7EA7' });\r\n  } catch (error) {\r\n    console.error('\u9000\u51FA\u73ED\u7EA7\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u9000\u51FA\u73ED\u7EA7\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5F52\u6863\u73ED\u7EA7\uFF08\u6559\u5E08\uFF09\r\nrouter.post('/:classId/archive', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u64CD\u4F5C' });\r\n    }\r\n\r\n    classInfo.status = 'archived';\r\n    await classInfo.save();\r\n\r\n    res.json({ message: '\u73ED\u7EA7\u5DF2\u5F52\u6863' });\r\n  } catch (error) {\r\n    console.error('\u5F52\u6863\u73ED\u7EA7\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u5F52\u6863\u73ED\u7EA7\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u73ED\u7EA7\u5B66\u751F\u5B66\u4E60\u7EDF\u8BA1\uFF08\u6559\u5E08\uFF09\r\nrouter.get('/:classId/students/stats', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const authUser = req.user as any;\r\n    const userId = authUser._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    // \u83B7\u53D6\u5B66\u751F\u5B66\u4E60\u6570\u636E\r\n    const StudySession = (await import('../models/StudySession')).default;\r\n    const KnowledgePoint = (await import('../models/KnowledgePoint')).default;\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const studentStats = await Promise.all(\r\n      activeStudents.map(async (student) => {\r\n        // \u5B66\u4E60\u65F6\u957F\r\n        const sessions = await StudySession.find({ userId: student.userId });\r\n        const totalTime = sessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n        const sessionCount = sessions.length;\r\n\r\n        // \u77E5\u8BC6\u70B9\u638C\u63E1\u60C5\u51B5\r\n        const userProgress = await UserProgress.find({ userId: student.userId });\r\n        const masteredCount = userProgress.filter(up => up.bestScore >= 80).length;\r\n        const totalKnowledge = userProgress.length;\r\n\r\n        // \u5E73\u5747\u5206\u6570\r\n        const avgScore = userProgress.length > 0\r\n          ? userProgress.reduce((sum, up) => sum + up.bestScore, 0) / userProgress.length\r\n          : 0;\r\n\r\n        return {\r\n          userId: student.userId,\r\n          userName: student.userName,\r\n          joinedAt: student.joinedAt,\r\n          totalTime,\r\n          sessionCount,\r\n          masteredCount,\r\n          totalKnowledge,\r\n          avgScore: Math.round(avgScore),\r\n          lastActive: sessions.length > 0 \r\n            ? (sessions[sessions.length - 1] as any).createdAt \r\n            : student.joinedAt\r\n        };\r\n      })\r\n    );\r\n\r\n    res.json({\r\n      classId,\r\n      className: classInfo.name,\r\n      totalStudents: activeStudents.length,\r\n      students: studentStats\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5B66\u751F\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5B66\u751F\u7EDF\u8BA1\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import mongoose, { Schema, Document } from 'mongoose';\r\n\r\nexport interface IClass extends Document {\r\n  name: string;\r\n  description?: string;\r\n  teacherId: mongoose.Types.ObjectId;\r\n  teacherName: string;\r\n  students: {\r\n    userId: mongoose.Types.ObjectId;\r\n    userName: string;\r\n    joinedAt: Date;\r\n    status: 'active' | 'inactive';\r\n  }[];\r\n  subject?: string;\r\n  grade?: string;\r\n  semester?: string;\r\n  settings: {\r\n    allowStudentInvite: boolean;\r\n    requireApproval: boolean;\r\n    maxStudents?: number;\r\n  };\r\n  inviteCode: string;\r\n  status: 'active' | 'archived';\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst ClassSchema = new Schema<IClass>({\r\n  name: { type: String, required: true },\r\n  description: { type: String },\r\n  teacherId: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n  teacherName: { type: String, required: true },\r\n  students: [{\r\n    userId: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n    userName: { type: String, required: true },\r\n    joinedAt: { type: Date, default: Date.now },\r\n    status: { type: String, enum: ['active', 'inactive'], default: 'active' }\r\n  }],\r\n  subject: { type: String },\r\n  grade: { type: String },\r\n  semester: { type: String },\r\n  settings: {\r\n    allowStudentInvite: { type: Boolean, default: false },\r\n    requireApproval: { type: Boolean, default: true },\r\n    maxStudents: { type: Number }\r\n  },\r\n  inviteCode: { type: String, required: true, unique: true },\r\n  status: { type: String, enum: ['active', 'archived'], default: 'active' }\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\n// \u7D22\u5F15\r\nClassSchema.index({ teacherId: 1, status: 1 });\r\nClassSchema.index({ inviteCode: 1 });\r\nClassSchema.index({ 'students.userId': 1 });\r\n\r\nexport default mongoose.model<IClass>('Class', ClassSchema);\r\n\r\n", "import express from 'express';\r\nimport Assignment from '../models/Assignment';\r\nimport Class from '../models/Class';\r\nimport User from '../models/User';\r\nimport { Notification } from '../models/Notification';\r\nimport { authMiddleware } from '../middleware/auth';\r\n\r\nconst router = express.Router();\r\n\r\n// \u521B\u5EFA\u4F5C\u4E1A\uFF08\u6559\u5E08\uFF09\r\nrouter.post('/', authMiddleware, async (req, res) => {\r\n  try {\r\n    const {\r\n      title,\r\n      description,\r\n      classId,\r\n      knowledgePoints,\r\n      type,\r\n      difficulty,\r\n      totalScore,\r\n      passingScore,\r\n      questions,\r\n      dueDate,\r\n      startDate,\r\n      duration,\r\n      settings\r\n    } = req.body;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    // \u68C0\u67E5\u73ED\u7EA7\u662F\u5426\u5B58\u5728\u4E14\u7528\u6237\u662F\u6559\u5E08\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u73ED\u7EA7\u6559\u5E08\u53EF\u4EE5\u521B\u5EFA\u4F5C\u4E1A' });\r\n    }\r\n\r\n    const assignment = new Assignment({\r\n      title,\r\n      description,\r\n      classId,\r\n      teacherId: userId,\r\n      knowledgePoints: knowledgePoints || [],\r\n      type: type || 'homework',\r\n      difficulty: difficulty || 'medium',\r\n      totalScore: totalScore || 100,\r\n      passingScore: passingScore || 60,\r\n      questions: questions || [],\r\n      dueDate,\r\n      startDate,\r\n      duration,\r\n      settings: {\r\n        allowRetake: true, // \u9ED8\u8BA4\u5141\u8BB8\u91CD\u65B0\u63D0\u4EA4\r\n        showAnswers: true,\r\n        showScore: true,\r\n        randomOrder: false,\r\n        ...settings // \u5141\u8BB8\u524D\u7AEF\u8986\u76D6\u9ED8\u8BA4\u503C\r\n      },\r\n      submissions: []\r\n    });\r\n\r\n    await assignment.save();\r\n    res.status(201).json(assignment);\r\n  } catch (error) {\r\n    console.error('\u521B\u5EFA\u4F5C\u4E1A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u521B\u5EFA\u4F5C\u4E1A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u73ED\u7EA7\u4F5C\u4E1A\u5217\u8868\r\nrouter.get('/class/:classId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const { status } = req.query;\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    const isTeacher = classInfo.teacherId.toString() === userId;\r\n    const isStudent = classInfo.students.some(\r\n      s => s.userId.toString() === userId && s.status === 'active'\r\n    );\r\n\r\n    if (!isTeacher && !isStudent) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    // \u6784\u5EFA\u67E5\u8BE2\r\n    const query: any = { classId };\r\n    if (status) {\r\n      query.status = status;\r\n    } else if (isStudent) {\r\n      // \u5B66\u751F\u53EA\u80FD\u770B\u5230\u5DF2\u53D1\u5E03\u7684\u4F5C\u4E1A\r\n      query.status = 'published';\r\n    } else {\r\n      // \u6559\u5E08\u9ED8\u8BA4\u4E0D\u663E\u793A\u5F52\u6863\u7684\u4F5C\u4E1A\r\n      query.status = { $ne: 'archived' };\r\n    }\r\n\r\n    const assignments = await Assignment.find(query)\r\n      .sort({ createdAt: -1 })\r\n      .select('-submissions.answers'); // \u4E0D\u8FD4\u56DE\u7B54\u6848\u8BE6\u60C5\r\n\r\n    // \u5982\u679C\u662F\u5B66\u751F\uFF0C\u6DFB\u52A0\u63D0\u4EA4\u72B6\u6001\r\n    if (isStudent) {\r\n      const assignmentsWithStatus = assignments.map(assignment => {\r\n        const submission = assignment.submissions.find(\r\n          s => s.userId.toString() === userId\r\n        );\r\n        return {\r\n          ...assignment.toObject(),\r\n          mySubmission: submission ? {\r\n            submittedAt: submission.submittedAt,\r\n            score: submission.score,\r\n            attempt: submission.attempt,\r\n            status: submission.status\r\n          } : null,\r\n          submissionCount: assignment.submissions.length\r\n        };\r\n      });\r\n      return res.json(assignmentsWithStatus);\r\n    }\r\n\r\n    res.json(assignments);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u4F5C\u4E1A\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u4F5C\u4E1A\u5217\u8868\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u4F5C\u4E1A\u8BE6\u60C5\r\nrouter.get('/:assignmentId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const assignment = await Assignment.findById(assignmentId);\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    const classInfo = await Class.findById(assignment.classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    const isTeacher = classInfo.teacherId.toString() === userId;\r\n    const isStudent = classInfo.students.some(\r\n      s => s.userId.toString() === userId && s.status === 'active'\r\n    );\r\n\r\n    if (!isTeacher && !isStudent) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    // \u5B66\u751F\u4E0D\u80FD\u770B\u8349\u7A3F\r\n    if (isStudent && assignment.status === 'draft') {\r\n      return res.status(403).json({ error: '\u4F5C\u4E1A\u672A\u53D1\u5E03' });\r\n    }\r\n\r\n    res.json(assignment);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u4F5C\u4E1A\u8BE6\u60C5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u4F5C\u4E1A\u8BE6\u60C5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u66F4\u65B0\u4F5C\u4E1A\uFF08\u6559\u5E08\uFF09\r\nrouter.put('/:assignmentId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const updates = req.body;\r\n\r\n    const assignment = await Assignment.findById(assignmentId);\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    if (assignment.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u4FEE\u6539\u6B64\u4F5C\u4E1A' });\r\n    }\r\n\r\n    // \u66F4\u65B0\u5141\u8BB8\u7684\u5B57\u6BB5\r\n    const allowedFields = [\r\n      'title', 'description', 'knowledgePoints', 'type', 'difficulty',\r\n      'totalScore', 'passingScore', 'questions', 'dueDate', 'startDate',\r\n      'duration', 'settings'\r\n    ];\r\n    \r\n    allowedFields.forEach(field => {\r\n      if (updates[field] !== undefined) {\r\n        (assignment as any)[field] = updates[field];\r\n      }\r\n    });\r\n\r\n    await assignment.save();\r\n    res.json(assignment);\r\n  } catch (error) {\r\n    console.error('\u66F4\u65B0\u4F5C\u4E1A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u66F4\u65B0\u4F5C\u4E1A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u53D1\u5E03\u4F5C\u4E1A\uFF08\u6559\u5E08\uFF09\r\nrouter.post('/:assignmentId/publish', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const assignment = await Assignment.findById(assignmentId);\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (assignment.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u64CD\u4F5C' });\r\n    }\r\n\r\n    if (assignment.questions.length === 0) {\r\n      return res.status(400).json({ error: '\u4F5C\u4E1A\u81F3\u5C11\u9700\u8981\u4E00\u9053\u9898\u76EE' });\r\n    }\r\n\r\n    assignment.status = 'published';\r\n    await assignment.save();\r\n\r\n    // \u521B\u5EFA\u901A\u77E5 - \u5411\u73ED\u7EA7\u6240\u6709\u5B66\u751F\u53D1\u9001\u4F5C\u4E1A\u901A\u77E5\r\n    try {\r\n      const classDoc = await Class.findById(assignment.classId);\r\n      if (!classDoc) {\r\n        console.warn('\u26A0 \u672A\u627E\u5230\u73ED\u7EA7\uFF0C\u65E0\u6CD5\u53D1\u9001\u901A\u77E5');\r\n      } else {\r\n        const activeStudents = classDoc.students\r\n          .filter((s: any) => s.status === 'active')\r\n          .map((s: any) => s.userId);\r\n\r\n        console.log(`\uD83D\uDCE2 \u51C6\u5907\u5411 ${activeStudents.length} \u540D\u5B66\u751F\u53D1\u9001\u4F5C\u4E1A\u901A\u77E5`);\r\n\r\n        if (activeStudents.length === 0) {\r\n          console.warn('\u26A0 \u73ED\u7EA7\u4E2D\u6CA1\u6709\u6D3B\u8DC3\u5B66\u751F');\r\n        } else {\r\n          const dueDate = assignment.dueDate ? new Date(assignment.dueDate) : null;\r\n          const dueDateStr = dueDate ? dueDate.toLocaleDateString('zh-CN', {\r\n            year: 'numeric',\r\n            month: '2-digit',\r\n            day: '2-digit'\r\n          }) : '\u65E0\u622A\u6B62\u65F6\u95F4';\r\n\r\n          const notifications = activeStudents.map((studentId: any) => ({\r\n            recipientId: studentId,\r\n            recipientType: 'student' as const,\r\n            senderId: userId,\r\n            type: 'assignment' as const,\r\n            title: '\u65B0\u4F5C\u4E1A\u53D1\u5E03',\r\n            content: `${classDoc.name} \u53D1\u5E03\u4E86\u65B0\u4F5C\u4E1A\uFF1A${assignment.title}`,\r\n            priority: 'normal' as const,\r\n            relatedId: assignment._id,\r\n            relatedType: 'assignment' as const,\r\n            actionUrl: `/app/my-classes`,\r\n            metadata: {\r\n              assignmentTitle: assignment.title,\r\n              className: classDoc.name,\r\n              dueDate: dueDate,\r\n              dueDateStr: dueDateStr,\r\n              totalScore: assignment.totalScore\r\n            },\r\n            read: false\r\n          }));\r\n\r\n          const created = await Notification.insertMany(notifications);\r\n          console.log(`\u2705 \u6210\u529F\u521B\u5EFA ${created.length} \u6761\u901A\u77E5\u8BB0\u5F55`);\r\n          console.log(`\uD83D\uDCE7 \u5DF2\u5411\u4EE5\u4E0B\u5B66\u751FID\u53D1\u9001\u901A\u77E5: ${activeStudents.slice(0, 3).join(', ')}${activeStudents.length > 3 ? '...' : ''}`);\r\n        }\r\n      }\r\n    } catch (notifError) {\r\n      console.error('\u274C \u521B\u5EFA\u901A\u77E5\u5931\u8D25:', notifError);\r\n      // \u4E0D\u5F71\u54CD\u4F5C\u4E1A\u53D1\u5E03\u7684\u4E3B\u6D41\u7A0B\r\n    }\r\n\r\n    res.json({ message: '\u4F5C\u4E1A\u5DF2\u53D1\u5E03', assignment });\r\n  } catch (error) {\r\n    console.error('\u53D1\u5E03\u4F5C\u4E1A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u53D1\u5E03\u4F5C\u4E1A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u63D0\u4EA4\u4F5C\u4E1A\uFF08\u5B66\u751F\uFF09\r\nrouter.post('/:assignmentId/submit', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const { answers, timeSpent } = req.body;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const assignment = await Assignment.findById(assignmentId)\r\n      .populate('questions.questionId');\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u4F5C\u4E1A\u72B6\u6001\r\n    if (assignment.status !== 'published') {\r\n      return res.status(400).json({ error: '\u4F5C\u4E1A\u672A\u5F00\u653E\u63D0\u4EA4' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u5728\u622A\u6B62\u65F6\u95F4\u5185\r\n    if (assignment.dueDate && new Date() > assignment.dueDate) {\r\n      return res.status(400).json({ error: '\u4F5C\u4E1A\u5DF2\u622A\u6B62' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u5728\u5F00\u59CB\u65F6\u95F4\u540E\r\n    if (assignment.startDate && new Date() < assignment.startDate) {\r\n      return res.status(400).json({ error: '\u4F5C\u4E1A\u5C1A\u672A\u5F00\u59CB' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u5B66\u751F\u662F\u5426\u5728\u73ED\u7EA7\u4E2D\r\n    const classInfo = await Class.findById(assignment.classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    const isStudent = classInfo.students.some(\r\n      s => s.userId.toString() === userId && s.status === 'active'\r\n    );\r\n    if (!isStudent) {\r\n      return res.status(403).json({ error: '\u60A8\u4E0D\u5728\u6B64\u73ED\u7EA7\u4E2D' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u63D0\u4EA4\u6B21\u6570\r\n    const previousSubmissions = assignment.submissions.filter(\r\n      s => s.userId.toString() === userId\r\n    );\r\n    \r\n    if (!assignment.settings.allowRetake && previousSubmissions.length > 0) {\r\n      return res.status(400).json({ error: '\u4E0D\u5141\u8BB8\u91CD\u590D\u63D0\u4EA4' });\r\n    }\r\n\r\n    if (assignment.settings.maxAttempts && \r\n        previousSubmissions.length >= assignment.settings.maxAttempts) {\r\n      return res.status(400).json({ error: '\u5DF2\u8FBE\u5230\u6700\u5927\u63D0\u4EA4\u6B21\u6570' });\r\n    }\r\n\r\n    // \u8BA1\u7B97\u5206\u6570 - \u5B9E\u73B0\u6B63\u786E\u7684\u81EA\u52A8\u6279\u6539\u903B\u8F91\r\n    let score = 0;\r\n    const processedAnswers = answers.map((answer: any, index: number) => {\r\n      // \u901A\u8FC7 questionId \u67E5\u627E\u5BF9\u5E94\u7684\u9898\u76EE\uFF0C\u800C\u4E0D\u662F\u7528\u7D22\u5F15\r\n      const assignmentQuestion = assignment.questions.find(\r\n        (q: any) => q.questionId._id.toString() === answer.questionId.toString()\r\n      );\r\n      \r\n      if (!assignmentQuestion) {\r\n        return {\r\n          questionIndex: index,\r\n          questionId: answer.questionId,\r\n          answer: answer.answer,\r\n          isCorrect: false,\r\n          score: 0\r\n        };\r\n      }\r\n\r\n      // \u83B7\u53D6\u9898\u76EE\u8BE6\u7EC6\u4FE1\u606F\r\n      const question = assignmentQuestion.questionId as any;\r\n      const correctAnswer = question.correctAnswer;\r\n      const studentAnswer = answer.answer;\r\n      \r\n      let isCorrect = false;\r\n      let earnedScore = 0;\r\n\r\n      // \u6839\u636E\u9898\u578B\u5224\u65AD\u7B54\u6848\u6B63\u786E\u6027\r\n      if (question.type === 'multiple') {\r\n        // \u591A\u9009\u9898\uFF1A\u9700\u8981\u5B8C\u5168\u5339\u914D\uFF08\u6392\u5E8F\u540E\u6BD4\u8F83\uFF09\r\n        const studentAns = Array.isArray(studentAnswer) \r\n          ? [...studentAnswer].sort() \r\n          : [];\r\n        const correctAns = Array.isArray(correctAnswer)\r\n          ? [...correctAnswer].sort()\r\n          : [];\r\n        isCorrect = JSON.stringify(studentAns) === JSON.stringify(correctAns);\r\n      } else if (question.type === 'single' || question.type === 'truefalse') {\r\n        // \u5355\u9009\u9898\u548C\u5224\u65AD\u9898\uFF1A\u76F4\u63A5\u6BD4\u8F83\r\n        console.log(`[\u5224\u65AD\u9898\u8C03\u8BD5] \u9898\u76EE: ${question.title}`);\r\n        console.log(`[\u5224\u65AD\u9898\u8C03\u8BD5] \u5B66\u751F\u7B54\u6848:`, studentAnswer, `\u7C7B\u578B: ${typeof studentAnswer}`);\r\n        console.log(`[\u5224\u65AD\u9898\u8C03\u8BD5] \u6B63\u786E\u7B54\u6848:`, correctAnswer, `\u7C7B\u578B: ${typeof correctAnswer}`);\r\n        isCorrect = studentAnswer === correctAnswer;\r\n        console.log(`[\u5224\u65AD\u9898\u8C03\u8BD5] \u662F\u5426\u6B63\u786E:`, isCorrect);\r\n      } else if (question.type === 'short' || question.type === 'essay') {\r\n        // \u7B80\u7B54\u9898\u548C\u8BBA\u8FF0\u9898\uFF1A\u4E0D\u81EA\u52A8\u6279\u6539\uFF0C\u9700\u8981\u6559\u5E08\u624B\u52A8\u6279\u6539\r\n        isCorrect = false; // \u9ED8\u8BA4\u4E0D\u7ED9\u5206\uFF0C\u7B49\u5F85\u6559\u5E08\u6279\u6539\r\n      }\r\n\r\n      // \u5982\u679C\u7B54\u5BF9\uFF0C\u7ED9\u6EE1\u5206\r\n      if (isCorrect) {\r\n        earnedScore = assignmentQuestion.score;\r\n        score += earnedScore;\r\n      }\r\n\r\n      return {\r\n        questionIndex: index,\r\n        questionId: answer.questionId,\r\n        answer: studentAnswer,\r\n        isCorrect,\r\n        score: earnedScore\r\n      };\r\n    });\r\n\r\n    // \u83B7\u53D6\u7528\u6237\u540D\r\n    const user = await User.findById(userId);\r\n    if (!user) {\r\n      return res.status(404).json({ error: '\u7528\u6237\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u5224\u65AD\u662F\u5426\u8FDF\u4EA4\r\n    const isLate = assignment.dueDate && new Date() > assignment.dueDate;\r\n    const submissionStatus = isLate ? 'late' : 'submitted';\r\n\r\n    // \u6DFB\u52A0\u63D0\u4EA4\u8BB0\u5F55\uFF08\u4F7F\u7528\u5904\u7406\u540E\u7684\u7B54\u6848\uFF0C\u5305\u542B\u6279\u6539\u7ED3\u679C\uFF09\r\n    assignment.submissions.push({\r\n      userId: user._id,\r\n      userName: user.username,\r\n      submittedAt: new Date(),\r\n      score,\r\n      answers: processedAnswers,\r\n      timeSpent: timeSpent || 0,\r\n      attempt: previousSubmissions.length + 1,\r\n      status: submissionStatus\r\n    });\r\n\r\n    await assignment.save();\r\n\r\n    res.json({\r\n      message: '\u4F5C\u4E1A\u63D0\u4EA4\u6210\u529F',\r\n      score,\r\n      totalScore: assignment.totalScore,\r\n      passed: score >= assignment.passingScore,\r\n      attempt: previousSubmissions.length + 1\r\n    });\r\n  } catch (error) {\r\n    console.error('\u63D0\u4EA4\u4F5C\u4E1A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u63D0\u4EA4\u4F5C\u4E1A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u5B66\u751F\u81EA\u5DF1\u7684\u63D0\u4EA4\u8BE6\u60C5\r\nrouter.get('/:assignmentId/my-submission', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    // \u53EA\u5141\u8BB8\u5B66\u751F\u8BBF\u95EE\r\n    if (userRole !== 'student') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u5B66\u751F\u53EF\u4EE5\u67E5\u770B\u81EA\u5DF1\u7684\u63D0\u4EA4' });\r\n    }\r\n\r\n    const assignment = await Assignment.findById(assignmentId)\r\n      .populate('questions.questionId');\r\n    \r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u67E5\u627E\u5B66\u751F\u7684\u63D0\u4EA4\u8BB0\u5F55\r\n    const mySubmissions = assignment.submissions.filter(\r\n      s => s.userId.toString() === userId\r\n    ).sort((a, b) => b.submittedAt.getTime() - a.submittedAt.getTime());\r\n\r\n    if (mySubmissions.length === 0) {\r\n      return res.status(404).json({ error: '\u8FD8\u6CA1\u6709\u63D0\u4EA4\u8BB0\u5F55' });\r\n    }\r\n\r\n    // \u8FD4\u56DE\u6240\u6709\u63D0\u4EA4\u8BB0\u5F55\uFF08\u6700\u65B0\u7684\u5728\u524D\u9762\uFF09\r\n    const submissionsData = mySubmissions.map((submission, index) => {\r\n      // \u8BA1\u7B97\u6BCF\u9053\u9898\u7684\u5F97\u5206 - \u901A\u8FC7 questionId \u5339\u914D\u7B54\u6848\uFF0C\u800C\u4E0D\u662F\u7D22\u5F15\r\n      const questionResults = assignment.questions.map((q: any, qIndex: number) => {\r\n        const question = q.questionId;\r\n        // \u901A\u8FC7 questionId \u627E\u5230\u5BF9\u5E94\u7684\u7B54\u6848\r\n        const answer = submission.answers.find(\r\n          (ans: any) => ans.questionId?.toString() === question?._id?.toString()\r\n        );\r\n        \r\n        return {\r\n          questionIndex: qIndex + 1,\r\n          questionTitle: question?.title || '',\r\n          questionType: question?.type || '',\r\n          score: answer?.score || 0,\r\n          maxScore: q.score,\r\n          isCorrect: answer?.isCorrect || false,\r\n          userAnswer: assignment.settings.showAnswers ? answer?.answer : undefined,\r\n          correctAnswer: assignment.settings.showAnswers ? question?.correctAnswer : undefined\r\n        };\r\n      });\r\n\r\n      return {\r\n        attempt: submission.attempt,\r\n        submittedAt: submission.submittedAt,\r\n        score: submission.score,\r\n        totalScore: assignment.totalScore,\r\n        timeSpent: submission.timeSpent,\r\n        status: submission.status,\r\n        isPassed: submission.score >= assignment.passingScore,\r\n        isLatest: index === 0,\r\n        questionResults: assignment.settings.showAnswers ? questionResults : undefined\r\n      };\r\n    });\r\n\r\n    res.json({\r\n      assignmentId,\r\n      assignmentTitle: assignment.title,\r\n      assignmentType: assignment.type,\r\n      passingScore: assignment.passingScore,\r\n      totalScore: assignment.totalScore,\r\n      allowRetake: assignment.settings.allowRetake,\r\n      maxAttempts: assignment.settings.maxAttempts,\r\n      showAnswers: assignment.settings.showAnswers,\r\n      showScore: assignment.settings.showScore,\r\n      submissions: submissionsData\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u63D0\u4EA4\u8BE6\u60C5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u63D0\u4EA4\u8BE6\u60C5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u4F5C\u4E1A\u63D0\u4EA4\u7EDF\u8BA1\uFF08\u6559\u5E08\uFF09\r\nrouter.get('/:assignmentId/submissions/stats', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const assignment = await Assignment.findById(assignmentId);\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    if (assignment.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    // \u83B7\u53D6\u73ED\u7EA7\u4FE1\u606F\r\n    const classInfo = await Class.findById(assignment.classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const totalStudents = activeStudents.length;\r\n    const submittedCount = new Set(\r\n      assignment.submissions.map(s => s.userId.toString())\r\n    ).size;\r\n    const notSubmittedCount = totalStudents - submittedCount;\r\n\r\n    // \u8BA1\u7B97\u5E73\u5747\u5206\r\n    const scores = assignment.submissions.map(s => s.score);\r\n    const avgScore = scores.length > 0\r\n      ? scores.reduce((sum, s) => sum + s, 0) / scores.length\r\n      : 0;\r\n\r\n    // \u53CA\u683C\u7387\r\n    const passedCount = scores.filter(s => s >= assignment.passingScore).length;\r\n    const passRate = submittedCount > 0 ? (passedCount / submittedCount) * 100 : 0;\r\n\r\n    // \u5206\u6570\u5206\u5E03\r\n    const scoreRanges = {\r\n      excellent: scores.filter(s => s >= 90).length, // \u4F18\u79C0\r\n      good: scores.filter(s => s >= 80 && s < 90).length, // \u826F\u597D\r\n      pass: scores.filter(s => s >= 60 && s < 80).length, // \u53CA\u683C\r\n      fail: scores.filter(s => s < 60).length // \u4E0D\u53CA\u683C\r\n    };\r\n\r\n    res.json({\r\n      assignmentId,\r\n      title: assignment.title,\r\n      totalStudents,\r\n      submittedCount,\r\n      notSubmittedCount,\r\n      submissionRate: totalStudents > 0 ? (submittedCount / totalStudents) * 100 : 0,\r\n      avgScore: Math.round(avgScore * 100) / 100,\r\n      passRate: Math.round(passRate * 100) / 100,\r\n      scoreRanges,\r\n      submissions: assignment.submissions.map((s: any) => ({\r\n        _id: s._id,\r\n        userId: s.userId,\r\n        userName: s.userName,\r\n        submittedAt: s.submittedAt,\r\n        score: s.score,\r\n        attempt: s.attempt,\r\n        status: s.status,\r\n        timeSpent: s.timeSpent\r\n      }))\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u63D0\u4EA4\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u63D0\u4EA4\u7EDF\u8BA1\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u5355\u4E2A\u63D0\u4EA4\u8BE6\u60C5\uFF08\u6559\u5E08\uFF09\r\nrouter.get('/submission/:submissionId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { submissionId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    // \u67E5\u627E\u5305\u542B\u6B64\u63D0\u4EA4\u7684\u4F5C\u4E1A\r\n    const assignment = await Assignment.findOne({\r\n      'submissions._id': submissionId\r\n    });\r\n\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u63D0\u4EA4\u8BB0\u5F55\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\uFF08\u4EC5\u6559\u5E08\u53EF\u67E5\u770B\uFF09\r\n    if (assignment.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    // \u627E\u5230\u5177\u4F53\u7684\u63D0\u4EA4\u8BB0\u5F55\r\n    const submission = assignment.submissions.find(\r\n      (s: any) => s._id.toString() === submissionId\r\n    ) as any;\r\n\r\n    if (!submission) {\r\n      return res.status(404).json({ error: '\u63D0\u4EA4\u8BB0\u5F55\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u5408\u5E76\u9898\u76EE\u548C\u5B66\u751F\u7B54\u6848\uFF0C\u65B9\u4FBF\u524D\u7AEF\u663E\u793A\r\n    const questionsWithAnswers = assignment.questions.map((question: any, index: number) => {\r\n      const studentAnswer = submission.answers.find((a: any) => a.questionIndex === index);\r\n      return {\r\n        ...question.toObject(),\r\n        studentAnswer: studentAnswer?.answer,\r\n        correctAnswer: question.correctAnswer\r\n      };\r\n    });\r\n\r\n    // \u8FD4\u56DE\u8BE6\u7EC6\u4FE1\u606F\r\n    res.json({\r\n      _id: submission._id, // \u6DFB\u52A0_id\u5B57\u6BB5\uFF0C\u4FDD\u6301\u4E0E\u524D\u7AEF\u4E00\u81F4\r\n      submissionId: submission._id,\r\n      studentId: submission.userId,\r\n      studentName: submission.userName,\r\n      submittedAt: submission.submittedAt,\r\n      score: submission.score,\r\n      status: submission.status,\r\n      attempt: submission.attempt,\r\n      timeSpent: submission.timeSpent,\r\n      feedback: submission.feedback,\r\n      answers: submission.answers,\r\n      assignmentId: assignment._id, // \u6DFB\u52A0assignmentId\u5B57\u6BB5\r\n      questions: questionsWithAnswers, // \u6DFB\u52A0\u5408\u5E76\u540E\u7684\u9898\u76EE\u6570\u7EC4\r\n      assignment: {\r\n        id: assignment._id,\r\n        title: assignment.title,\r\n        questions: assignment.questions\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u63D0\u4EA4\u8BE6\u60C5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u63D0\u4EA4\u8BE6\u60C5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u6279\u6539\u4F5C\u4E1A\uFF08\u6559\u5E08\uFF09\r\nrouter.post('/submission/:submissionId/grade', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { submissionId } = req.params;\r\n    const { score, feedback } = req.body;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    // \u9A8C\u8BC1\u8F93\u5165\r\n    if (typeof score !== 'number' || score < 0 || score > 100) {\r\n      return res.status(400).json({ error: '\u5206\u6570\u5FC5\u987B\u57280-100\u4E4B\u95F4' });\r\n    }\r\n\r\n    // \u67E5\u627E\u5305\u542B\u6B64\u63D0\u4EA4\u7684\u4F5C\u4E1A\r\n    const assignment = await Assignment.findOne({\r\n      'submissions._id': submissionId\r\n    });\r\n\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u63D0\u4EA4\u8BB0\u5F55\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\uFF08\u4EC5\u6559\u5E08\u53EF\u6279\u6539\uFF09\r\n    if (assignment.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u6279\u6539\u6B64\u4F5C\u4E1A' });\r\n    }\r\n\r\n    // \u627E\u5230\u5E76\u66F4\u65B0\u63D0\u4EA4\u8BB0\u5F55\r\n    const submission = assignment.submissions.find(\r\n      (s: any) => s._id.toString() === submissionId\r\n    ) as any;\r\n\r\n    if (!submission) {\r\n      return res.status(404).json({ error: '\u63D0\u4EA4\u8BB0\u5F55\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u66F4\u65B0\u5206\u6570\u548C\u8BC4\u8BED\r\n    submission.score = score;\r\n    submission.feedback = feedback || '';\r\n    submission.status = 'graded';\r\n\r\n    await assignment.save();\r\n\r\n    res.json({\r\n      message: '\u6279\u6539\u6210\u529F',\r\n      submission: {\r\n        id: submission._id,\r\n        score: submission.score,\r\n        feedback: submission.feedback,\r\n        status: submission.status\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u6279\u6539\u4F5C\u4E1A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u6279\u6539\u4F5C\u4E1A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5220\u9664\u4F5C\u4E1A\uFF08\u6559\u5E08\uFF09\r\nrouter.delete('/:assignmentId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { assignmentId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const assignment = await Assignment.findById(assignmentId);\r\n    if (!assignment) {\r\n      return res.status(404).json({ error: '\u4F5C\u4E1A\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (assignment.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u5220\u9664\u6B64\u4F5C\u4E1A' });\r\n    }\r\n\r\n    // \u5982\u679C\u6709\u63D0\u4EA4\u8BB0\u5F55\uFF0C\u5F52\u6863\u800C\u4E0D\u662F\u5220\u9664\r\n    if (assignment.submissions.length > 0) {\r\n      assignment.status = 'archived';\r\n      await assignment.save();\r\n      return res.json({ message: '\u4F5C\u4E1A\u5DF2\u5F52\u6863' });\r\n    }\r\n\r\n    await Assignment.findByIdAndDelete(assignmentId);\r\n    res.json({ message: '\u4F5C\u4E1A\u5DF2\u5220\u9664' });\r\n  } catch (error) {\r\n    console.error('\u5220\u9664\u4F5C\u4E1A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u5220\u9664\u4F5C\u4E1A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import mongoose, { Schema, Document } from 'mongoose';\r\n\r\nexport interface IAssignment extends Document {\r\n  title: string;\r\n  description?: string;\r\n  classId: mongoose.Types.ObjectId;\r\n  teacherId: mongoose.Types.ObjectId;\r\n  knowledgePoints: mongoose.Types.ObjectId[];\r\n  type: 'practice' | 'quiz' | 'homework' | 'exam';\r\n  difficulty: 'easy' | 'medium' | 'hard';\r\n  totalScore: number;\r\n  passingScore: number;\r\n  questions: {\r\n    questionId: mongoose.Types.ObjectId;\r\n    score: number;\r\n  }[];\r\n  dueDate?: Date;\r\n  startDate?: Date;\r\n  duration?: number; // \u5206\u949F\r\n  settings: {\r\n    allowRetake: boolean;\r\n    maxAttempts?: number;\r\n    showAnswers: boolean;\r\n    showScore: boolean;\r\n    randomOrder: boolean;\r\n  };\r\n  submissions: {\r\n    userId: mongoose.Types.ObjectId;\r\n    userName: string;\r\n    submittedAt: Date;\r\n    score: number;\r\n    answers: any[];\r\n    timeSpent: number;\r\n    attempt: number;\r\n    status: 'submitted' | 'graded' | 'late';\r\n  }[];\r\n  status: 'draft' | 'published' | 'closed' | 'archived';\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst AssignmentSchema = new Schema<IAssignment>({\r\n  title: { type: String, required: true },\r\n  description: { type: String },\r\n  classId: { type: Schema.Types.ObjectId, ref: 'Class', required: true },\r\n  teacherId: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n  knowledgePoints: [{ type: Schema.Types.ObjectId, ref: 'KnowledgePoint' }],\r\n  type: { \r\n    type: String, \r\n    enum: ['practice', 'quiz', 'homework', 'exam'], \r\n    default: 'homework' \r\n  },\r\n  difficulty: { \r\n    type: String, \r\n    enum: ['easy', 'medium', 'hard'], \r\n    default: 'medium' \r\n  },\r\n  totalScore: { type: Number, required: true, default: 100 },\r\n  passingScore: { type: Number, required: true, default: 60 },\r\n  questions: [{\r\n    questionId: { type: Schema.Types.ObjectId, ref: 'Question', required: true },\r\n    score: { type: Number, required: true }\r\n  }],\r\n  dueDate: { type: Date },\r\n  startDate: { type: Date },\r\n  duration: { type: Number },\r\n  settings: {\r\n    allowRetake: { type: Boolean, default: false },\r\n    maxAttempts: { type: Number },\r\n    showAnswers: { type: Boolean, default: true },\r\n    showScore: { type: Boolean, default: true },\r\n    randomOrder: { type: Boolean, default: false }\r\n  },\r\n  submissions: [{\r\n    userId: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n    userName: { type: String, required: true },\r\n    submittedAt: { type: Date, default: Date.now },\r\n    score: { type: Number },\r\n    answers: [{ type: Schema.Types.Mixed }],\r\n    timeSpent: { type: Number },\r\n    attempt: { type: Number, default: 1 },\r\n    status: { \r\n      type: String, \r\n      enum: ['submitted', 'graded', 'late'], \r\n      default: 'submitted' \r\n    }\r\n  }],\r\n  status: { \r\n    type: String, \r\n    enum: ['draft', 'published', 'closed', 'archived'], \r\n    default: 'draft' \r\n  }\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\n// \u7D22\u5F15\r\nAssignmentSchema.index({ classId: 1, status: 1 });\r\nAssignmentSchema.index({ teacherId: 1 });\r\nAssignmentSchema.index({ 'submissions.userId': 1 });\r\nAssignmentSchema.index({ dueDate: 1 });\r\n\r\nexport default mongoose.model<IAssignment>('Assignment', AssignmentSchema);\r\n\r\n", "import mongoose, { Schema, Document } from 'mongoose';\r\n\r\nexport interface INotification extends Document {\r\n  recipientId: mongoose.Types.ObjectId;\r\n  recipientType: 'student' | 'teacher' | 'all';\r\n  senderId?: mongoose.Types.ObjectId;\r\n  type: 'assignment' | 'grade' | 'class' | 'system' | 'announcement';\r\n  title: string;\r\n  content: string;\r\n  relatedId?: mongoose.Types.ObjectId;\r\n  relatedType?: 'assignment' | 'class' | 'submission';\r\n  priority: 'low' | 'normal' | 'high' | 'urgent';\r\n  read: boolean;\r\n  readAt?: Date;\r\n  actionUrl?: string;\r\n  metadata?: {\r\n    assignmentTitle?: string;\r\n    className?: string;\r\n    dueDate?: Date;\r\n    score?: number;\r\n    [key: string]: any;\r\n  };\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst NotificationSchema = new Schema({\r\n  recipientId: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'User',\r\n    required: true,\r\n    index: true\r\n  },\r\n  recipientType: {\r\n    type: String,\r\n    enum: ['student', 'teacher', 'all'],\r\n    default: 'student'\r\n  },\r\n  senderId: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'User'\r\n  },\r\n  type: {\r\n    type: String,\r\n    enum: ['assignment', 'grade', 'class', 'system', 'announcement'],\r\n    required: true,\r\n    index: true\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  content: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  relatedId: {\r\n    type: Schema.Types.ObjectId\r\n  },\r\n  relatedType: {\r\n    type: String,\r\n    enum: ['assignment', 'class', 'submission']\r\n  },\r\n  priority: {\r\n    type: String,\r\n    enum: ['low', 'normal', 'high', 'urgent'],\r\n    default: 'normal'\r\n  },\r\n  read: {\r\n    type: Boolean,\r\n    default: false,\r\n    index: true\r\n  },\r\n  readAt: {\r\n    type: Date\r\n  },\r\n  actionUrl: {\r\n    type: String\r\n  },\r\n  metadata: {\r\n    type: Schema.Types.Mixed\r\n  }\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\n// \u7D22\u5F15\u4F18\u5316\r\nNotificationSchema.index({ recipientId: 1, read: 1, createdAt: -1 });\r\nNotificationSchema.index({ recipientId: 1, type: 1, createdAt: -1 });\r\n\r\nexport const Notification = mongoose.model<INotification>('Notification', NotificationSchema);\r\n\r\n", "import express from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport StudySession from '../models/StudySession';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport User from '../models/User';\r\nimport UserProgress from '../models/UserProgress';\r\n\r\nconst router = express.Router();\r\n\r\n// \u5B66\u4E60\u65F6\u95F4\u5206\u5E03\u7EDF\u8BA1\r\nrouter.get('/time-distribution', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    const { period = '7d' } = req.query;\r\n\r\n    // \u8BA1\u7B97\u65F6\u95F4\u8303\u56F4\r\n    const now = new Date();\r\n    let startDate = new Date();\r\n    switch (period) {\r\n      case '7d':\r\n        startDate.setDate(now.getDate() - 7);\r\n        break;\r\n      case '30d':\r\n        startDate.setDate(now.getDate() - 30);\r\n        break;\r\n      case '90d':\r\n        startDate.setDate(now.getDate() - 90);\r\n        break;\r\n      default:\r\n        startDate.setDate(now.getDate() - 7);\r\n    }\r\n\r\n    // \u83B7\u53D6\u5B66\u4E60\u4F1A\u8BDD\r\n    const sessions = await StudySession.find({\r\n      userId,\r\n      createdAt: { $gte: startDate }\r\n    }).sort({ createdAt: 1 });\r\n\r\n    // \u6309\u65E5\u671F\u5206\u7EC4\u7EDF\u8BA1\r\n    const dailyStats: { [key: string]: number } = {};\r\n    sessions.forEach(session => {\r\n      const date = session.createdAt.toISOString().split('T')[0];\r\n      dailyStats[date] = (dailyStats[date] || 0) + (session.duration || 0);\r\n    });\r\n\r\n    // \u6309\u5C0F\u65F6\u5206\u7EC4\u7EDF\u8BA1\uFF08\u4E00\u5929\u4E2D\u7684\u5B66\u4E60\u65F6\u95F4\u5206\u5E03\uFF09\r\n    const hourlyStats: { [key: number]: number } = {};\r\n    sessions.forEach(session => {\r\n      const hour = session.createdAt.getHours();\r\n      hourlyStats[hour] = (hourlyStats[hour] || 0) + (session.duration || 0);\r\n    });\r\n\r\n    // \u6309\u661F\u671F\u5206\u7EC4\u7EDF\u8BA1\r\n    const weekdayStats: { [key: number]: number } = {};\r\n    sessions.forEach(session => {\r\n      const weekday = session.createdAt.getDay();\r\n      weekdayStats[weekday] = (weekdayStats[weekday] || 0) + (session.duration || 0);\r\n    });\r\n\r\n    res.json({\r\n      daily: Object.entries(dailyStats).map(([date, duration]) => ({\r\n        date,\r\n        duration\r\n      })),\r\n      hourly: Array.from({ length: 24 }, (_, hour) => ({\r\n        hour,\r\n        duration: hourlyStats[hour] || 0\r\n      })),\r\n      weekday: Array.from({ length: 7 }, (_, day) => ({\r\n        day,\r\n        dayName: ['\u5468\u65E5', '\u5468\u4E00', '\u5468\u4E8C', '\u5468\u4E09', '\u5468\u56DB', '\u5468\u4E94', '\u5468\u516D'][day],\r\n        duration: weekdayStats[day] || 0\r\n      }))\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u65F6\u95F4\u5206\u5E03\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u65F6\u95F4\u5206\u5E03\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u5206\u6790\r\nrouter.get('/knowledge-mastery', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n\r\n    // \u4ECEUserProgress\u83B7\u53D6\u638C\u63E1\u5EA6\u6570\u636E\r\n    const userProgress = await UserProgress.find({ userId }).populate('pointId');\r\n\r\n    // \u6309\u638C\u63E1\u5EA6\u5206\u7EC4\r\n    const masteryDistribution = {\r\n      expert: 0,      // 90-100\r\n      proficient: 0,  // 70-89\r\n      intermediate: 0, // 50-69\r\n      beginner: 0,    // 30-49\r\n      novice: 0       // 0-29\r\n    };\r\n\r\n    userProgress.forEach(up => {\r\n      const level = up.bestScore;\r\n      if (level >= 90) masteryDistribution.expert++;\r\n      else if (level >= 70) masteryDistribution.proficient++;\r\n      else if (level >= 50) masteryDistribution.intermediate++;\r\n      else if (level >= 30) masteryDistribution.beginner++;\r\n      else masteryDistribution.novice++;\r\n    });\r\n\r\n    // \u6309\u5B66\u79D1\u5206\u7C7B\u7EDF\u8BA1\r\n    const subjectStats: { [key: string]: any } = {};\r\n    for (const up of userProgress) {\r\n      const kp = await KnowledgePoint.findOne({ id: up.pointId });\r\n      const subject = kp?.subject || '\u672A\u5206\u7C7B';\r\n      if (!subjectStats[subject]) {\r\n        subjectStats[subject] = {\r\n          total: 0,\r\n          mastered: 0,\r\n          avgMastery: 0,\r\n          totalMastery: 0\r\n        };\r\n      }\r\n      subjectStats[subject].total++;\r\n      subjectStats[subject].totalMastery += up.bestScore;\r\n      if (up.bestScore >= 80) {\r\n        subjectStats[subject].mastered++;\r\n      }\r\n    }\r\n\r\n    // \u8BA1\u7B97\u5E73\u5747\u638C\u63E1\u5EA6\r\n    Object.keys(subjectStats).forEach(subject => {\r\n      const stats = subjectStats[subject];\r\n      stats.avgMastery = Math.round(stats.totalMastery / stats.total);\r\n      delete stats.totalMastery;\r\n    });\r\n\r\n    // \u6309\u96BE\u5EA6\u7EDF\u8BA1\r\n    const difficultyStats: { [key: number]: any } = {};\r\n    for (const up of userProgress) {\r\n      const kp = await KnowledgePoint.findOne({ id: up.pointId });\r\n      const difficulty = kp?.difficulty || 3;\r\n      if (!difficultyStats[difficulty]) {\r\n        difficultyStats[difficulty] = {\r\n          total: 0,\r\n          mastered: 0,\r\n          avgMastery: 0,\r\n          totalMastery: 0\r\n        };\r\n      }\r\n      difficultyStats[difficulty].total++;\r\n      difficultyStats[difficulty].totalMastery += up.bestScore;\r\n      if (up.bestScore >= 80) {\r\n        difficultyStats[difficulty].mastered++;\r\n      }\r\n    }\r\n\r\n    Object.keys(difficultyStats).forEach(difficulty => {\r\n      const stats = difficultyStats[difficulty];\r\n      stats.avgMastery = Math.round(stats.totalMastery / stats.total);\r\n      delete stats.totalMastery;\r\n    });\r\n\r\n    res.json({\r\n      distribution: masteryDistribution,\r\n      bySubject: Object.entries(subjectStats).map(([subject, stats]) => ({\r\n        subject,\r\n        ...stats\r\n      })),\r\n      byDifficulty: Object.entries(difficultyStats).map(([difficulty, stats]) => ({\r\n        difficulty: Number(difficulty),\r\n        difficultyName: Number(difficulty) <= 2 ? '\u7B80\u5355' : Number(difficulty) <= 3 ? '\u4E2D\u7B49' : '\u56F0\u96BE',\r\n        ...stats\r\n      })),\r\n      total: userProgress.length,\r\n      avgMastery: userProgress.length > 0\r\n        ? Math.round(userProgress.reduce((sum, up) => sum + up.bestScore, 0) / userProgress.length)\r\n        : 0\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5B66\u4E60\u80FD\u529B\u96F7\u8FBE\u56FE\u6570\u636E\r\nrouter.get('/ability-radar', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n\r\n    const userProgress = await UserProgress.find({ userId });\r\n    const sessions = await StudySession.find({ userId });\r\n    const wrongQuestions = await WrongQuestion.find({ userId });\r\n\r\n    // \u8BA1\u7B97\u5404\u7EF4\u5EA6\u80FD\u529B\r\n    const abilities = {\r\n      memory: 0,        // \u8BB0\u5FC6\u529B\r\n      understanding: 0, // \u7406\u89E3\u529B\r\n      application: 0,   // \u5E94\u7528\u529B\r\n      analysis: 0,      // \u5206\u6790\u529B\r\n      synthesis: 0,     // \u7EFC\u5408\u529B\r\n      evaluation: 0     // \u8BC4\u4EF7\u529B\r\n    };\r\n\r\n    // \u7B80\u5316\u8BA1\u7B97\uFF1A\u57FA\u4E8E\u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u548C\u5B66\u4E60\u5386\u53F2\r\n    if (userProgress.length > 0) {\r\n      const avgMastery = userProgress.reduce((sum, up) => sum + up.bestScore, 0) / userProgress.length;\r\n      \r\n      // \u8BB0\u5FC6\u529B\uFF1A\u57FA\u4E8E\u638C\u63E1\u5EA6\r\n      abilities.memory = Math.min(100, avgMastery);\r\n      \r\n      // \u7406\u89E3\u529B\uFF1A\u57FA\u4E8E\u5B66\u4E60\u6B21\u6570\u548C\u638C\u63E1\u5EA6\r\n      const avgAttempts = userProgress.reduce((sum, up) => sum + up.quizAttempts, 0) / userProgress.length;\r\n      abilities.understanding = Math.min(100, avgMastery * 0.7 + Math.min(avgAttempts * 5, 30));\r\n      \r\n      // \u5E94\u7528\u529B\uFF1A\u57FA\u4E8E\u7EC3\u4E60\u60C5\u51B5\r\n      const practiceRate = sessions.length / userProgress.length;\r\n      abilities.application = Math.min(100, avgMastery * 0.6 + Math.min(practiceRate * 20, 40));\r\n      \r\n      // \u5206\u6790\u529B\uFF1A\u57FA\u4E8E\u9519\u9898\u6539\u6B63\u7387\r\n      const masteredWrong = wrongQuestions.filter(wq => wq.mastered).length;\r\n      const wrongRate = wrongQuestions.length > 0\r\n        ? masteredWrong / wrongQuestions.length\r\n        : 0.5;\r\n      abilities.analysis = Math.min(100, avgMastery * 0.5 + wrongRate * 50);\r\n      \r\n      // \u7EFC\u5408\u529B\uFF1A\u7EFC\u5408\u8BC4\u4F30\r\n      abilities.synthesis = Math.min(100, (abilities.memory + abilities.understanding + abilities.application) / 3);\r\n      \r\n      // \u8BC4\u4EF7\u529B\uFF1A\u57FA\u4E8E\u81EA\u6211\u53CD\u601D\uFF08\u5B66\u4E60\u9891\u7387\uFF09\r\n      const recentSessions = sessions.filter(s => {\r\n        const daysDiff = (Date.now() - s.createdAt.getTime()) / (1000 * 60 * 60 * 24);\r\n        return daysDiff <= 30;\r\n      });\r\n      const studyFrequency = recentSessions.length / 30;\r\n      abilities.evaluation = Math.min(100, avgMastery * 0.6 + Math.min(studyFrequency * 100, 40));\r\n    }\r\n\r\n    res.json({\r\n      abilities: [\r\n        { name: '\u8BB0\u5FC6\u529B', value: Math.round(abilities.memory) },\r\n        { name: '\u7406\u89E3\u529B', value: Math.round(abilities.understanding) },\r\n        { name: '\u5E94\u7528\u529B', value: Math.round(abilities.application) },\r\n        { name: '\u5206\u6790\u529B', value: Math.round(abilities.analysis) },\r\n        { name: '\u7EFC\u5408\u529B', value: Math.round(abilities.synthesis) },\r\n        { name: '\u8BC4\u4EF7\u529B', value: Math.round(abilities.evaluation) }\r\n      ]\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u80FD\u529B\u96F7\u8FBE\u56FE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u80FD\u529B\u96F7\u8FBE\u56FE\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5B66\u4E60\u8D8B\u52BF\u9884\u6D4B\r\nrouter.get('/learning-trend', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n\r\n    // \u83B7\u53D6\u6700\u8FD190\u5929\u7684\u5B66\u4E60\u6570\u636E\r\n    const startDate = new Date();\r\n    startDate.setDate(startDate.getDate() - 90);\r\n\r\n    const sessions = await StudySession.find({\r\n      userId,\r\n      createdAt: { $gte: startDate }\r\n    }).sort({ createdAt: 1 });\r\n\r\n    const userProgress = await UserProgress.find({ \r\n      userId,\r\n      createdAt: { $gte: startDate }\r\n    });\r\n\r\n    // \u6309\u5468\u7EDF\u8BA1\r\n    const weeklyStats: { [key: string]: any } = {};\r\n    sessions.forEach(session => {\r\n      const weekStart = new Date(session.createdAt);\r\n      weekStart.setDate(weekStart.getDate() - weekStart.getDay());\r\n      const weekKey = weekStart.toISOString().split('T')[0];\r\n\r\n      if (!weeklyStats[weekKey]) {\r\n        weeklyStats[weekKey] = {\r\n          duration: 0,\r\n          sessionCount: 0,\r\n          knowledgeCount: 0\r\n        };\r\n      }\r\n\r\n      weeklyStats[weekKey].duration += session.duration || 0;\r\n      weeklyStats[weekKey].sessionCount++;\r\n    });\r\n\r\n    // \u8BA1\u7B97\u6BCF\u5468\u65B0\u589E\u77E5\u8BC6\u70B9\r\n    userProgress.forEach(up => {\r\n      if (up.createdAt) {\r\n        const weekStart = new Date(up.createdAt);\r\n        weekStart.setDate(weekStart.getDate() - weekStart.getDay());\r\n        const weekKey = weekStart.toISOString().split('T')[0];\r\n\r\n        if (weeklyStats[weekKey]) {\r\n          weeklyStats[weekKey].knowledgeCount++;\r\n        }\r\n      }\r\n    });\r\n\r\n    // \u8F6C\u6362\u4E3A\u6570\u7EC4\u5E76\u6392\u5E8F\r\n    const trendData = Object.entries(weeklyStats)\r\n      .map(([week, stats]) => ({\r\n        week,\r\n        ...stats\r\n      }))\r\n      .sort((a, b) => a.week.localeCompare(b.week));\r\n\r\n    // \u7B80\u5355\u7EBF\u6027\u9884\u6D4B\u672A\u67654\u5468\r\n    if (trendData.length >= 4) {\r\n      const recentWeeks = trendData.slice(-4);\r\n      const avgDuration = recentWeeks.reduce((sum, w) => sum + w.duration, 0) / 4;\r\n      const avgSessions = recentWeeks.reduce((sum, w) => sum + w.sessionCount, 0) / 4;\r\n      const avgKnowledge = recentWeeks.reduce((sum, w) => sum + w.knowledgeCount, 0) / 4;\r\n\r\n      // \u8BA1\u7B97\u589E\u957F\u7387\r\n      const firstWeek = recentWeeks[0];\r\n      const lastWeek = recentWeeks[recentWeeks.length - 1];\r\n      const durationGrowth = firstWeek.duration > 0 \r\n        ? (lastWeek.duration - firstWeek.duration) / firstWeek.duration / 3\r\n        : 0.1;\r\n\r\n      // \u9884\u6D4B\u672A\u67654\u5468\r\n      const predictions = [];\r\n      for (let i = 1; i <= 4; i++) {\r\n        const lastDate = new Date(trendData[trendData.length - 1].week);\r\n        lastDate.setDate(lastDate.getDate() + 7 * i);\r\n        predictions.push({\r\n          week: lastDate.toISOString().split('T')[0],\r\n          duration: Math.round(avgDuration * (1 + durationGrowth * i)),\r\n          sessionCount: Math.round(avgSessions * (1 + durationGrowth * i * 0.5)),\r\n          knowledgeCount: Math.round(avgKnowledge * (1 + durationGrowth * i * 0.3)),\r\n          isPrediction: true\r\n        });\r\n      }\r\n\r\n      res.json({\r\n        historical: trendData,\r\n        predictions,\r\n        summary: {\r\n          avgWeeklyDuration: Math.round(avgDuration),\r\n          avgWeeklySessions: Math.round(avgSessions),\r\n          avgWeeklyKnowledge: Math.round(avgKnowledge),\r\n          growthRate: Math.round(durationGrowth * 100)\r\n        }\r\n      });\r\n    } else {\r\n      res.json({\r\n        historical: trendData,\r\n        predictions: [],\r\n        summary: {\r\n          avgWeeklyDuration: 0,\r\n          avgWeeklySessions: 0,\r\n          avgWeeklyKnowledge: 0,\r\n          growthRate: 0\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5B66\u4E60\u8D8B\u52BF\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5B66\u4E60\u8D8B\u52BF\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u9519\u9898\u5206\u6790\r\nrouter.get('/wrong-questions-analysis', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n\r\n    const wrongQuestions = await WrongQuestion.find({ userId });\r\n\r\n    // \u6309\u77E5\u8BC6\u70B9\u5206\u7EC4\r\n    const byKnowledge: { [key: string]: any } = {};\r\n    for (const wq of wrongQuestions) {\r\n      const kpId = wq.pointId || 'unknown';\r\n      const kpTitle = wq.pointTitle || '\u672A\u77E5\u77E5\u8BC6\u70B9';\r\n\r\n      if (!byKnowledge[kpId]) {\r\n        byKnowledge[kpId] = {\r\n          knowledgePoint: kpTitle,\r\n          count: 0,\r\n          corrected: 0,\r\n          avgAttempts: 0,\r\n          totalAttempts: 0\r\n        };\r\n      }\r\n\r\n      byKnowledge[kpId].count++;\r\n      if (wq.mastered) {\r\n        byKnowledge[kpId].corrected++;\r\n      }\r\n      byKnowledge[kpId].totalAttempts += wq.retryCount;\r\n    }\r\n\r\n    // \u8BA1\u7B97\u5E73\u5747\u5C1D\u8BD5\u6B21\u6570\r\n    Object.keys(byKnowledge).forEach(kpId => {\r\n      const stats = byKnowledge[kpId];\r\n      stats.avgAttempts = stats.count > 0 \r\n        ? Math.round((stats.totalAttempts / stats.count) * 10) / 10\r\n        : 0;\r\n      stats.correctionRate = stats.count > 0\r\n        ? Math.round((stats.corrected / stats.count) * 100)\r\n        : 0;\r\n      delete stats.totalAttempts;\r\n    });\r\n\r\n    // \u6309\u9898\u578B\u5206\u7EC4\r\n    const byType: { [key: string]: number } = {};\r\n    wrongQuestions.forEach(wq => {\r\n      const type = wq.type || 'unknown';\r\n      byType[type] = (byType[type] || 0) + 1;\r\n    });\r\n\r\n    // \u6700\u8FD1\u7684\u9519\u9898\u8D8B\u52BF\r\n    const last30Days = new Date();\r\n    last30Days.setDate(last30Days.getDate() - 30);\r\n    const recentWrong = wrongQuestions.filter(wq => wq.createdAt >= last30Days);\r\n\r\n    res.json({\r\n      total: wrongQuestions.length,\r\n      corrected: wrongQuestions.filter(wq => wq.mastered).length,\r\n      correctionRate: wrongQuestions.length > 0\r\n        ? Math.round((wrongQuestions.filter(wq => wq.mastered).length / wrongQuestions.length) * 100)\r\n        : 0,\r\n      byKnowledge: Object.entries(byKnowledge)\r\n        .map(([_, stats]) => stats)\r\n        .sort((a, b) => b.count - a.count)\r\n        .slice(0, 10),\r\n      byType: Object.entries(byType).map(([type, count]) => ({\r\n        type,\r\n        typeName: type === 'single' ? '\u5355\u9009' : type === 'multiple' ? '\u591A\u9009' : type === 'boolean' ? '\u5224\u65AD' : '\u5176\u4ED6',\r\n        count\r\n      })),\r\n      recentTrend: {\r\n        last30Days: recentWrong.length,\r\n        avgPerDay: Math.round((recentWrong.length / 30) * 10) / 10\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u9519\u9898\u5206\u6790\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u9519\u9898\u5206\u6790\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u7EFC\u5408\u5B66\u4E60\u62A5\u544A\r\nrouter.get('/comprehensive-report', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n\r\n    const user = await User.findById(userId);\r\n    const userProgress = await UserProgress.find({ userId });\r\n    const sessions = await StudySession.find({ userId });\r\n    const wrongQuestions = await WrongQuestion.find({ userId });\r\n\r\n    // \u8BA1\u7B97\u603B\u5B66\u4E60\u65F6\u957F\r\n    const totalDuration = sessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n\r\n    // \u8BA1\u7B97\u5E73\u5747\u638C\u63E1\u5EA6\r\n    const avgMastery = userProgress.length > 0\r\n      ? userProgress.reduce((sum, up) => sum + up.bestScore, 0) / userProgress.length\r\n      : 0;\r\n\r\n    // \u6700\u8FD17\u5929\u6D3B\u8DC3\u5EA6\r\n    const last7Days = new Date();\r\n    last7Days.setDate(last7Days.getDate() - 7);\r\n    const recentSessions = sessions.filter(s => s.createdAt >= last7Days);\r\n    const recentDuration = recentSessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n\r\n    // \u5B66\u4E60\u6392\u540D\uFF08\u7B80\u5316\uFF1A\u57FA\u4E8E\u5B66\u4E60\u65F6\u957F\uFF09\r\n    const allUsers = await User.find();\r\n    // \u8FD9\u91CC\u9700\u8981\u5B9E\u9645\u8BA1\u7B97\u6240\u6709\u7528\u6237\u7684\u5B66\u4E60\u65F6\u957F\uFF0C\u7B80\u5316\u5904\u7406\r\n    const rank = Math.floor(Math.random() * allUsers.length) + 1;\r\n    const percentile = Math.round((1 - rank / allUsers.length) * 100);\r\n\r\n    // \u5B66\u4E60\u5EFA\u8BAE\r\n    const suggestions = [];\r\n    if (avgMastery < 60) {\r\n      suggestions.push('\u5EFA\u8BAE\u52A0\u5F3A\u57FA\u7840\u77E5\u8BC6\u7684\u5B66\u4E60\uFF0C\u63D0\u9AD8\u6574\u4F53\u638C\u63E1\u5EA6');\r\n    }\r\n    if (recentDuration < 3600) {\r\n      suggestions.push('\u6700\u8FD1\u4E00\u5468\u5B66\u4E60\u65F6\u95F4\u8F83\u5C11\uFF0C\u5EFA\u8BAE\u4FDD\u6301\u6BCF\u5929\u81F3\u5C111\u5C0F\u65F6\u7684\u5B66\u4E60');\r\n    }\r\n    if (wrongQuestions.length > 20) {\r\n      suggestions.push('\u9519\u9898\u8F83\u591A\uFF0C\u5EFA\u8BAE\u91CD\u70B9\u590D\u4E60\u8584\u5F31\u77E5\u8BC6\u70B9');\r\n    }\r\n    if (suggestions.length === 0) {\r\n      suggestions.push('\u5B66\u4E60\u72B6\u6001\u826F\u597D\uFF0C\u7EE7\u7EED\u4FDD\u6301\uFF01');\r\n    }\r\n\r\n    res.json({\r\n      user: {\r\n        username: user?.username,\r\n        joinDate: (user as any)?.createdAt\r\n      },\r\n      overview: {\r\n        totalKnowledge: userProgress.length,\r\n        masteredKnowledge: userProgress.filter(up => up.bestScore >= 80).length,\r\n        avgMastery: Math.round(avgMastery),\r\n        totalDuration,\r\n        totalSessions: sessions.length,\r\n        wrongQuestions: wrongQuestions.length\r\n      },\r\n      recent: {\r\n        last7DaysSessions: recentSessions.length,\r\n        last7DaysDuration: recentDuration,\r\n        avgDailyDuration: Math.round(recentDuration / 7)\r\n      },\r\n      ranking: {\r\n        rank,\r\n        totalUsers: allUsers.length,\r\n        percentile\r\n      },\r\n      suggestions\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u7EFC\u5408\u62A5\u544A\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u7EFC\u5408\u62A5\u544A\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import express from 'express';\r\nimport Membership from '../models/Membership';\r\nimport Points from '../models/Points';\r\nimport User from '../models/User';\r\nimport { authMiddleware } from '../middleware/auth';\r\n\r\nconst router = express.Router();\r\n\r\n// \u83B7\u53D6\u6211\u7684\u4F1A\u5458\u4FE1\u606F\r\nrouter.get('/me', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n\r\n    let membership = await Membership.findOne({ userId });\r\n    \r\n    // \u5982\u679C\u6CA1\u6709\u4F1A\u5458\u8BB0\u5F55\uFF0C\u521B\u5EFA\u514D\u8D39\u4F1A\u5458\r\n    if (!membership) {\r\n      const features = (Membership as any).getTierFeatures('free');\r\n      membership = new Membership({\r\n        userId,\r\n        tier: 'free',\r\n        features,\r\n        usage: {\r\n          knowledgePoints: 0,\r\n          aiQuestions: 0,\r\n          lastResetDate: new Date()\r\n        }\r\n      });\r\n      await membership.save();\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\r\n    if (membership.endDate && membership.endDate < new Date()) {\r\n      membership.status = 'expired';\r\n      membership.tier = 'free';\r\n      membership.features = (Membership as any).getTierFeatures('free');\r\n      await membership.save();\r\n    }\r\n\r\n    res.json(membership);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u4F1A\u5458\u4FE1\u606F\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u4F1A\u5458\u4FE1\u606F\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u6240\u6709\u4F1A\u5458\u5957\u9910\r\nrouter.get('/plans', async (req, res) => {\r\n  try {\r\n    const plans = [\r\n      {\r\n        tier: 'free',\r\n        name: '\u514D\u8D39\u7248',\r\n        price: 0,\r\n        period: '\u6C38\u4E45',\r\n        features: (Membership as any).getTierFeatures('free'),\r\n        description: '\u9002\u5408\u521D\u5B66\u8005\uFF0C\u4F53\u9A8C\u57FA\u7840\u529F\u80FD'\r\n      },\r\n      {\r\n        tier: 'basic',\r\n        name: '\u57FA\u7840\u7248',\r\n        price: 29,\r\n        period: '\u6708',\r\n        features: (Membership as any).getTierFeatures('basic'),\r\n        description: '\u9002\u5408\u65E5\u5E38\u5B66\u4E60\uFF0C\u89E3\u9501\u66F4\u591A\u529F\u80FD'\r\n      },\r\n      {\r\n        tier: 'premium',\r\n        name: '\u9AD8\u7EA7\u7248',\r\n        price: 99,\r\n        period: '\u6708',\r\n        features: (Membership as any).getTierFeatures('premium'),\r\n        description: '\u9002\u5408\u6DF1\u5EA6\u5B66\u4E60\uFF0C\u4EAB\u53D7\u5168\u90E8\u7279\u6743'\r\n      },\r\n      {\r\n        tier: 'enterprise',\r\n        name: '\u4F01\u4E1A\u7248',\r\n        price: 999,\r\n        period: '\u5E74',\r\n        features: (Membership as any).getTierFeatures('enterprise'),\r\n        description: '\u9002\u5408\u56E2\u961F\u4F7F\u7528\uFF0C\u65E0\u9650\u5236\u4F7F\u7528'\r\n      }\r\n    ];\r\n\r\n    res.json(plans);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5957\u9910\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5957\u9910\u5217\u8868\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5347\u7EA7\u4F1A\u5458\uFF08\u7B80\u5316\u7248\uFF0C\u5B9E\u9645\u9700\u8981\u5BF9\u63A5\u652F\u4ED8\uFF09\r\nrouter.post('/upgrade', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { tier, period = 'month' } = req.body;\r\n\r\n    if (!['basic', 'premium', 'enterprise'].includes(tier)) {\r\n      return res.status(400).json({ error: '\u65E0\u6548\u7684\u4F1A\u5458\u7B49\u7EA7' });\r\n    }\r\n\r\n    let membership = await Membership.findOne({ userId });\r\n    if (!membership) {\r\n      membership = new Membership({ userId });\r\n    }\r\n\r\n    // \u8BA1\u7B97\u7ED3\u675F\u65F6\u95F4\r\n    const startDate = new Date();\r\n    const endDate = new Date();\r\n    if (period === 'month') {\r\n      endDate.setMonth(endDate.getMonth() + 1);\r\n    } else if (period === 'year') {\r\n      endDate.setFullYear(endDate.getFullYear() + 1);\r\n    }\r\n\r\n    // \u66F4\u65B0\u4F1A\u5458\u4FE1\u606F\r\n    membership.tier = tier as any;\r\n    membership.status = 'active';\r\n    membership.startDate = startDate;\r\n    membership.endDate = endDate;\r\n    membership.features = (Membership as any).getTierFeatures(tier);\r\n\r\n    // \u6DFB\u52A0\u4EA4\u6613\u8BB0\u5F55\uFF08\u7B80\u5316\u7248\uFF09\r\n    const prices: any = {\r\n      basic: { month: 29, year: 290 },\r\n      premium: { month: 99, year: 990 },\r\n      enterprise: { year: 999 }\r\n    };\r\n    const amount = prices[tier][period] || 0;\r\n\r\n    membership.transactions.push({\r\n      transactionId: `TXN${Date.now()}`,\r\n      amount,\r\n      currency: 'CNY',\r\n      status: 'completed',\r\n      createdAt: new Date()\r\n    });\r\n\r\n    await membership.save();\r\n\r\n    // \u8D60\u9001\u79EF\u5206\r\n    const points = await Points.findOne({ userId });\r\n    if (points) {\r\n      await points.addPoints(amount * 10, 'membership_upgrade', `\u5347\u7EA7\u5230${tier}\u4F1A\u5458`);\r\n    }\r\n\r\n    res.json({\r\n      message: '\u4F1A\u5458\u5347\u7EA7\u6210\u529F',\r\n      membership\r\n    });\r\n  } catch (error) {\r\n    console.error('\u5347\u7EA7\u4F1A\u5458\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u5347\u7EA7\u4F1A\u5458\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u53D6\u6D88\u4F1A\u5458\r\nrouter.post('/cancel', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n\r\n    const membership = await Membership.findOne({ userId });\r\n    if (!membership) {\r\n      return res.status(404).json({ error: '\u4F1A\u5458\u4FE1\u606F\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (membership.tier === 'free') {\r\n      return res.status(400).json({ error: '\u514D\u8D39\u4F1A\u5458\u65E0\u9700\u53D6\u6D88' });\r\n    }\r\n\r\n    membership.status = 'cancelled';\r\n    membership.autoRenew = false;\r\n    await membership.save();\r\n\r\n    res.json({ message: '\u4F1A\u5458\u5DF2\u53D6\u6D88\uFF0C\u5C06\u5728\u5230\u671F\u540E\u5931\u6548' });\r\n  } catch (error) {\r\n    console.error('\u53D6\u6D88\u4F1A\u5458\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u53D6\u6D88\u4F1A\u5458\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u68C0\u67E5\u4F7F\u7528\u9650\u5236\r\nrouter.post('/check-limit', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { type } = req.body; // 'knowledgePoints' | 'aiQuestions'\r\n\r\n    const membership = await Membership.findOne({ userId });\r\n    if (!membership) {\r\n      return res.json({ allowed: false, reason: '\u4F1A\u5458\u4FE1\u606F\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u9700\u8981\u91CD\u7F6E\u4F7F\u7528\u91CF\uFF08\u6BCF\u6708\u91CD\u7F6E\uFF09\r\n    const now = new Date();\r\n    const lastReset = membership.usage.lastResetDate;\r\n    if (now.getMonth() !== lastReset.getMonth() || now.getFullYear() !== lastReset.getFullYear()) {\r\n      membership.usage.knowledgePoints = 0;\r\n      membership.usage.aiQuestions = 0;\r\n      membership.usage.lastResetDate = now;\r\n      await membership.save();\r\n    }\r\n\r\n    const maxLimit = type === 'knowledgePoints' \r\n      ? membership.features.maxKnowledgePoints\r\n      : membership.features.maxAIQuestions;\r\n\r\n    const currentUsage = type === 'knowledgePoints'\r\n      ? membership.usage.knowledgePoints\r\n      : membership.usage.aiQuestions;\r\n\r\n    // -1 \u8868\u793A\u65E0\u9650\u5236\r\n    if (maxLimit === -1) {\r\n      return res.json({ allowed: true });\r\n    }\r\n\r\n    if (currentUsage >= maxLimit) {\r\n      return res.json({\r\n        allowed: false,\r\n        reason: `\u5DF2\u8FBE\u5230${type === 'knowledgePoints' ? '\u77E5\u8BC6\u70B9' : 'AI\u63D0\u95EE'}\u6570\u91CF\u4E0A\u9650`,\r\n        current: currentUsage,\r\n        max: maxLimit\r\n      });\r\n    }\r\n\r\n    res.json({ allowed: true, current: currentUsage, max: maxLimit });\r\n  } catch (error) {\r\n    console.error('\u68C0\u67E5\u9650\u5236\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u68C0\u67E5\u9650\u5236\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u589E\u52A0\u4F7F\u7528\u91CF\r\nrouter.post('/increment-usage', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { type } = req.body;\r\n\r\n    const membership = await Membership.findOne({ userId });\r\n    if (!membership) {\r\n      return res.status(404).json({ error: '\u4F1A\u5458\u4FE1\u606F\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (type === 'knowledgePoints') {\r\n      membership.usage.knowledgePoints++;\r\n    } else if (type === 'aiQuestions') {\r\n      membership.usage.aiQuestions++;\r\n    }\r\n\r\n    await membership.save();\r\n    res.json({ success: true });\r\n  } catch (error) {\r\n    console.error('\u589E\u52A0\u4F7F\u7528\u91CF\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u589E\u52A0\u4F7F\u7528\u91CF\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u4F1A\u5458\u7EDF\u8BA1\r\nrouter.get('/stats', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n\r\n    const membership = await Membership.findOne({ userId });\r\n    if (!membership) {\r\n      return res.status(404).json({ error: '\u4F1A\u5458\u4FE1\u606F\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    const stats = {\r\n      tier: membership.tier,\r\n      status: membership.status,\r\n      daysRemaining: membership.endDate \r\n        ? Math.ceil((membership.endDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24))\r\n        : null,\r\n      usage: {\r\n        knowledgePoints: {\r\n          current: membership.usage.knowledgePoints,\r\n          max: membership.features.maxKnowledgePoints,\r\n          percentage: membership.features.maxKnowledgePoints === -1 \r\n            ? 0 \r\n            : (membership.usage.knowledgePoints / membership.features.maxKnowledgePoints) * 100\r\n        },\r\n        aiQuestions: {\r\n          current: membership.usage.aiQuestions,\r\n          max: membership.features.maxAIQuestions,\r\n          percentage: membership.features.maxAIQuestions === -1 \r\n            ? 0 \r\n            : (membership.usage.aiQuestions / membership.features.maxAIQuestions) * 100\r\n        }\r\n      },\r\n      totalSpent: membership.transactions\r\n        .filter(t => t.status === 'completed')\r\n        .reduce((sum, t) => sum + t.amount, 0)\r\n    };\r\n\r\n    res.json(stats);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u4F1A\u5458\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u4F1A\u5458\u7EDF\u8BA1\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import mongoose, { Schema, Document } from 'mongoose';\r\n\r\nexport interface IMembership extends Document {\r\n  userId: mongoose.Types.ObjectId;\r\n  tier: 'free' | 'basic' | 'premium' | 'enterprise';\r\n  status: 'active' | 'expired' | 'cancelled';\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  autoRenew: boolean;\r\n  paymentMethod?: string;\r\n  features: {\r\n    maxKnowledgePoints: number;\r\n    maxAIQuestions: number;\r\n    advancedAnalytics: boolean;\r\n    prioritySupport: boolean;\r\n    customThemes: boolean;\r\n    exportData: boolean;\r\n    adFree: boolean;\r\n  };\r\n  usage: {\r\n    knowledgePoints: number;\r\n    aiQuestions: number;\r\n    lastResetDate: Date;\r\n  };\r\n  transactions: {\r\n    transactionId: string;\r\n    amount: number;\r\n    currency: string;\r\n    status: 'pending' | 'completed' | 'failed' | 'refunded';\r\n    createdAt: Date;\r\n  }[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst MembershipSchema = new Schema<IMembership>({\r\n  userId: { type: Schema.Types.ObjectId, ref: 'User', required: true, unique: true },\r\n  tier: {\r\n    type: String,\r\n    enum: ['free', 'basic', 'premium', 'enterprise'],\r\n    default: 'free'\r\n  },\r\n  status: {\r\n    type: String,\r\n    enum: ['active', 'expired', 'cancelled'],\r\n    default: 'active'\r\n  },\r\n  startDate: { type: Date, default: Date.now },\r\n  endDate: { type: Date },\r\n  autoRenew: { type: Boolean, default: false },\r\n  paymentMethod: { type: String },\r\n  features: {\r\n    maxKnowledgePoints: { type: Number, default: 50 },\r\n    maxAIQuestions: { type: Number, default: 20 },\r\n    advancedAnalytics: { type: Boolean, default: false },\r\n    prioritySupport: { type: Boolean, default: false },\r\n    customThemes: { type: Boolean, default: false },\r\n    exportData: { type: Boolean, default: false },\r\n    adFree: { type: Boolean, default: false }\r\n  },\r\n  usage: {\r\n    knowledgePoints: { type: Number, default: 0 },\r\n    aiQuestions: { type: Number, default: 0 },\r\n    lastResetDate: { type: Date, default: Date.now }\r\n  },\r\n  transactions: [{\r\n    transactionId: { type: String, required: true },\r\n    amount: { type: Number, required: true },\r\n    currency: { type: String, default: 'CNY' },\r\n    status: {\r\n      type: String,\r\n      enum: ['pending', 'completed', 'failed', 'refunded'],\r\n      default: 'pending'\r\n    },\r\n    createdAt: { type: Date, default: Date.now }\r\n  }]\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\n// \u7D22\u5F15\r\nMembershipSchema.index({ userId: 1 });\r\nMembershipSchema.index({ tier: 1, status: 1 });\r\nMembershipSchema.index({ endDate: 1 });\r\n\r\n// \u9759\u6001\u65B9\u6CD5\uFF1A\u83B7\u53D6\u4F1A\u5458\u7B49\u7EA7\u7279\u6743\r\nMembershipSchema.statics.getTierFeatures = function(tier: string) {\r\n  const features: any = {\r\n    free: {\r\n      maxKnowledgePoints: 50,\r\n      maxAIQuestions: 20,\r\n      advancedAnalytics: false,\r\n      prioritySupport: false,\r\n      customThemes: false,\r\n      exportData: false,\r\n      adFree: false\r\n    },\r\n    basic: {\r\n      maxKnowledgePoints: 200,\r\n      maxAIQuestions: 100,\r\n      advancedAnalytics: true,\r\n      prioritySupport: false,\r\n      customThemes: true,\r\n      exportData: true,\r\n      adFree: true\r\n    },\r\n    premium: {\r\n      maxKnowledgePoints: 1000,\r\n      maxAIQuestions: 500,\r\n      advancedAnalytics: true,\r\n      prioritySupport: true,\r\n      customThemes: true,\r\n      exportData: true,\r\n      adFree: true\r\n    },\r\n    enterprise: {\r\n      maxKnowledgePoints: -1, // \u65E0\u9650\u5236\r\n      maxAIQuestions: -1,\r\n      advancedAnalytics: true,\r\n      prioritySupport: true,\r\n      customThemes: true,\r\n      exportData: true,\r\n      adFree: true\r\n    }\r\n  };\r\n  return features[tier] || features.free;\r\n};\r\n\r\nexport default mongoose.model<IMembership>('Membership', MembershipSchema);\r\n\r\n", "import mongoose, { Schema, Document } from 'mongoose';\r\n\r\nexport interface IPoints extends Document {\r\n  userId: mongoose.Types.ObjectId;\r\n  balance: number;\r\n  totalEarned: number;\r\n  totalSpent: number;\r\n  level: number;\r\n  levelName: string;\r\n  nextLevelPoints: number;\r\n  history: {\r\n    type: 'earn' | 'spend' | 'expire';\r\n    amount: number;\r\n    reason: string;\r\n    description?: string;\r\n    relatedId?: mongoose.Types.ObjectId;\r\n    relatedType?: string;\r\n    createdAt: Date;\r\n  }[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst PointsSchema = new Schema<IPoints>({\r\n  userId: { type: Schema.Types.ObjectId, ref: 'User', required: true, unique: true },\r\n  balance: { type: Number, default: 0 },\r\n  totalEarned: { type: Number, default: 0 },\r\n  totalSpent: { type: Number, default: 0 },\r\n  level: { type: Number, default: 1 },\r\n  levelName: { type: String, default: '\u521D\u5B66\u8005' },\r\n  nextLevelPoints: { type: Number, default: 100 },\r\n  history: [{\r\n    type: {\r\n      type: String,\r\n      enum: ['earn', 'spend', 'expire'],\r\n      required: true\r\n    },\r\n    amount: { type: Number, required: true },\r\n    reason: { type: String, required: true },\r\n    description: { type: String },\r\n    relatedId: { type: Schema.Types.ObjectId },\r\n    relatedType: { type: String },\r\n    createdAt: { type: Date, default: Date.now }\r\n  }]\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\n// \u7D22\u5F15\r\nPointsSchema.index({ userId: 1 });\r\nPointsSchema.index({ level: 1 });\r\n\r\n// \u9759\u6001\u65B9\u6CD5\uFF1A\u83B7\u53D6\u7B49\u7EA7\u4FE1\u606F\r\nPointsSchema.statics.getLevelInfo = function(totalPoints: number) {\r\n  const levels = [\r\n    { level: 1, name: '\u521D\u5B66\u8005', minPoints: 0, maxPoints: 99 },\r\n    { level: 2, name: '\u5B66\u5F92', minPoints: 100, maxPoints: 299 },\r\n    { level: 3, name: '\u5B66\u8005', minPoints: 300, maxPoints: 599 },\r\n    { level: 4, name: '\u4E13\u5BB6', minPoints: 600, maxPoints: 999 },\r\n    { level: 5, name: '\u5927\u5E08', minPoints: 1000, maxPoints: 1999 },\r\n    { level: 6, name: '\u5B97\u5E08', minPoints: 2000, maxPoints: 3999 },\r\n    { level: 7, name: '\u4F20\u5947', minPoints: 4000, maxPoints: 7999 },\r\n    { level: 8, name: '\u795E\u8BDD', minPoints: 8000, maxPoints: 15999 },\r\n    { level: 9, name: '\u81F3\u5C0A', minPoints: 16000, maxPoints: 31999 },\r\n    { level: 10, name: '\u65E0\u4E0A', minPoints: 32000, maxPoints: Infinity }\r\n  ];\r\n\r\n  for (const levelInfo of levels) {\r\n    if (totalPoints >= levelInfo.minPoints && totalPoints <= levelInfo.maxPoints) {\r\n      return {\r\n        ...levelInfo,\r\n        nextLevelPoints: levelInfo.maxPoints === Infinity ? 0 : levelInfo.maxPoints + 1\r\n      };\r\n    }\r\n  }\r\n\r\n  return levels[0];\r\n};\r\n\r\n// \u5B9E\u4F8B\u65B9\u6CD5\uFF1A\u6DFB\u52A0\u79EF\u5206\r\nPointsSchema.methods.addPoints = function(amount: number, reason: string, description?: string) {\r\n  this.balance += amount;\r\n  this.totalEarned += amount;\r\n  this.history.push({\r\n    type: 'earn',\r\n    amount,\r\n    reason,\r\n    description,\r\n    createdAt: new Date()\r\n  });\r\n\r\n  // \u66F4\u65B0\u7B49\u7EA7\r\n  const levelInfo = (this.constructor as any).getLevelInfo(this.totalEarned);\r\n  this.level = levelInfo.level;\r\n  this.levelName = levelInfo.name;\r\n  this.nextLevelPoints = levelInfo.nextLevelPoints;\r\n\r\n  return this.save();\r\n};\r\n\r\n// \u5B9E\u4F8B\u65B9\u6CD5\uFF1A\u6D88\u8D39\u79EF\u5206\r\nPointsSchema.methods.spendPoints = function(amount: number, reason: string, description?: string) {\r\n  if (this.balance < amount) {\r\n    throw new Error('\u79EF\u5206\u4E0D\u8DB3');\r\n  }\r\n\r\n  this.balance -= amount;\r\n  this.totalSpent += amount;\r\n  this.history.push({\r\n    type: 'spend',\r\n    amount,\r\n    reason,\r\n    description,\r\n    createdAt: new Date()\r\n  });\r\n\r\n  return this.save();\r\n};\r\n\r\nexport default mongoose.model<IPoints>('Points', PointsSchema);\r\n\r\n", "import express from 'express';\r\nimport Points from '../models/Points';\r\nimport { authMiddleware } from '../middleware/auth';\r\n\r\nconst router = express.Router();\r\n\r\n// \u83B7\u53D6\u6211\u7684\u79EF\u5206\u4FE1\u606F\r\nrouter.get('/me', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n\r\n    let points = await Points.findOne({ userId });\r\n    \r\n    // \u5982\u679C\u6CA1\u6709\u79EF\u5206\u8BB0\u5F55\uFF0C\u521B\u5EFA\u4E00\u4E2A\r\n    if (!points) {\r\n      const levelInfo = (Points as any).getLevelInfo(0);\r\n      points = new Points({\r\n        userId,\r\n        balance: 0,\r\n        totalEarned: 0,\r\n        totalSpent: 0,\r\n        level: levelInfo.level,\r\n        levelName: levelInfo.name,\r\n        nextLevelPoints: levelInfo.nextLevelPoints,\r\n        history: []\r\n      });\r\n      await points.save();\r\n    }\r\n\r\n    res.json(points);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u79EF\u5206\u4FE1\u606F\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u79EF\u5206\u4FE1\u606F\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u79EF\u5206\u5386\u53F2\r\nrouter.get('/history', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { page = 1, limit = 20, type } = req.query;\r\n\r\n    const points = await Points.findOne({ userId });\r\n    if (!points) {\r\n      return res.json({ history: [], total: 0 });\r\n    }\r\n\r\n    let history = points.history;\r\n    \r\n    // \u6309\u7C7B\u578B\u8FC7\u6EE4\r\n    if (type && ['earn', 'spend', 'expire'].includes(type as string)) {\r\n      history = history.filter(h => h.type === type);\r\n    }\r\n\r\n    // \u6392\u5E8F\uFF08\u6700\u65B0\u7684\u5728\u524D\uFF09\r\n    history = history.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\r\n\r\n    // \u5206\u9875\r\n    const pageNum = parseInt(page as string);\r\n    const limitNum = parseInt(limit as string);\r\n    const startIndex = (pageNum - 1) * limitNum;\r\n    const endIndex = startIndex + limitNum;\r\n    const paginatedHistory = history.slice(startIndex, endIndex);\r\n\r\n    res.json({\r\n      history: paginatedHistory,\r\n      total: history.length,\r\n      page: pageNum,\r\n      totalPages: Math.ceil(history.length / limitNum)\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u79EF\u5206\u5386\u53F2\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u79EF\u5206\u5386\u53F2\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u8D5A\u53D6\u79EF\u5206\uFF08\u7CFB\u7EDF\u8C03\u7528\uFF09\r\nrouter.post('/earn', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { amount, reason, description } = req.body;\r\n\r\n    if (!amount || amount <= 0) {\r\n      return res.status(400).json({ error: '\u79EF\u5206\u6570\u91CF\u5FC5\u987B\u5927\u4E8E0' });\r\n    }\r\n\r\n    if (!reason) {\r\n      return res.status(400).json({ error: '\u8BF7\u63D0\u4F9B\u79EF\u5206\u83B7\u53D6\u539F\u56E0' });\r\n    }\r\n\r\n    let points = await Points.findOne({ userId });\r\n    if (!points) {\r\n      const levelInfo = (Points as any).getLevelInfo(0);\r\n      points = new Points({\r\n        userId,\r\n        level: levelInfo.level,\r\n        levelName: levelInfo.name,\r\n        nextLevelPoints: levelInfo.nextLevelPoints\r\n      });\r\n    }\r\n\r\n    await points.addPoints(amount, reason, description);\r\n\r\n    res.json({\r\n      message: '\u79EF\u5206\u83B7\u53D6\u6210\u529F',\r\n      points: {\r\n        balance: points.balance,\r\n        earned: amount,\r\n        level: points.level,\r\n        levelName: points.levelName\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u8D5A\u53D6\u79EF\u5206\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u8D5A\u53D6\u79EF\u5206\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u6D88\u8D39\u79EF\u5206\r\nrouter.post('/spend', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { amount, reason, description } = req.body;\r\n\r\n    if (!amount || amount <= 0) {\r\n      return res.status(400).json({ error: '\u79EF\u5206\u6570\u91CF\u5FC5\u987B\u5927\u4E8E0' });\r\n    }\r\n\r\n    if (!reason) {\r\n      return res.status(400).json({ error: '\u8BF7\u63D0\u4F9B\u79EF\u5206\u6D88\u8D39\u539F\u56E0' });\r\n    }\r\n\r\n    const points = await Points.findOne({ userId });\r\n    if (!points) {\r\n      return res.status(404).json({ error: '\u79EF\u5206\u4FE1\u606F\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (points.balance < amount) {\r\n      return res.status(400).json({ error: '\u79EF\u5206\u4E0D\u8DB3' });\r\n    }\r\n\r\n    await points.spendPoints(amount, reason, description);\r\n\r\n    res.json({\r\n      message: '\u79EF\u5206\u6D88\u8D39\u6210\u529F',\r\n      points: {\r\n        balance: points.balance,\r\n        spent: amount\r\n      }\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u6D88\u8D39\u79EF\u5206\u5931\u8D25:', error);\r\n    res.status(500).json({ error: error.message || '\u6D88\u8D39\u79EF\u5206\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u79EF\u5206\u89C4\u5219\r\nrouter.get('/rules', async (req, res) => {\r\n  try {\r\n    const rules = [\r\n      {\r\n        category: '\u5B66\u4E60\u6D3B\u52A8',\r\n        items: [\r\n          { action: '\u5B8C\u6210\u4E00\u4E2A\u77E5\u8BC6\u70B9\u5B66\u4E60', points: 10, description: '\u9996\u6B21\u5B8C\u6210\u8BE5\u77E5\u8BC6\u70B9\u5B66\u4E60' },\r\n          { action: '\u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u8FBE\u523080%', points: 20, description: '\u5355\u4E2A\u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u8FBE\u6807' },\r\n          { action: '\u77E5\u8BC6\u70B9\u638C\u63E1\u5EA6\u8FBE\u5230100%', points: 50, description: '\u5B8C\u5168\u638C\u63E1\u4E00\u4E2A\u77E5\u8BC6\u70B9' },\r\n          { action: '\u8FDE\u7EED\u5B66\u4E607\u5929', points: 100, description: '\u4FDD\u6301\u5B66\u4E60\u4E60\u60EF' },\r\n          { action: '\u5355\u65E5\u5B66\u4E60\u8D85\u8FC71\u5C0F\u65F6', points: 30, description: '\u6BCF\u65E5\u5B66\u4E60\u65F6\u957F\u5956\u52B1' }\r\n        ]\r\n      },\r\n      {\r\n        category: '\u7EC3\u4E60\u4E0E\u6D4B\u8BD5',\r\n        items: [\r\n          { action: '\u5B8C\u6210\u4E00\u6B21\u7EC3\u4E60', points: 5, description: '\u5B8C\u6210\u4EFB\u610F\u7EC3\u4E60' },\r\n          { action: '\u7EC3\u4E60\u5F97\u520690\u5206\u4EE5\u4E0A', points: 15, description: '\u4F18\u79C0\u6210\u7EE9\u5956\u52B1' },\r\n          { action: '\u6539\u6B63\u4E00\u4E2A\u9519\u9898', points: 8, description: '\u9519\u9898\u8BA2\u6B63\u5956\u52B1' },\r\n          { action: '\u5B8C\u6210AI\u667A\u80FD\u51FA\u9898', points: 12, description: '\u4F7F\u7528AI\u529F\u80FD' }\r\n        ]\r\n      },\r\n      {\r\n        category: '\u793E\u4EA4\u4E92\u52A8',\r\n        items: [\r\n          { action: '\u9080\u8BF7\u597D\u53CB\u6CE8\u518C', points: 200, description: '\u6210\u529F\u9080\u8BF7\u65B0\u7528\u6237' },\r\n          { action: '\u63D0\u4EA4\u53CD\u9988\u5EFA\u8BAE', points: 50, description: '\u5E2E\u52A9\u6539\u8FDB\u4EA7\u54C1' },\r\n          { action: '\u5206\u4EAB\u5B66\u4E60\u6210\u679C', points: 20, description: '\u5206\u4EAB\u5230\u793E\u4EA4\u5E73\u53F0' }\r\n        ]\r\n      },\r\n      {\r\n        category: '\u6210\u5C31\u89E3\u9501',\r\n        items: [\r\n          { action: '\u89E3\u9501\u9752\u94DC\u6210\u5C31', points: 50, description: '\u5B8C\u6210\u57FA\u7840\u6210\u5C31' },\r\n          { action: '\u89E3\u9501\u767D\u94F6\u6210\u5C31', points: 100, description: '\u5B8C\u6210\u8FDB\u9636\u6210\u5C31' },\r\n          { action: '\u89E3\u9501\u9EC4\u91D1\u6210\u5C31', points: 200, description: '\u5B8C\u6210\u9AD8\u7EA7\u6210\u5C31' },\r\n          { action: '\u89E3\u9501\u94BB\u77F3\u6210\u5C31', points: 500, description: '\u5B8C\u6210\u9876\u7EA7\u6210\u5C31' }\r\n        ]\r\n      }\r\n    ];\r\n\r\n    res.json(rules);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u79EF\u5206\u89C4\u5219\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u79EF\u5206\u89C4\u5219\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u7B49\u7EA7\u6392\u884C\u699C\r\nrouter.get('/leaderboard', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { limit = 50 } = req.query;\r\n    const userId = req.user!.userId;\r\n\r\n    // \u83B7\u53D6\u6392\u884C\u699C\r\n    const topUsers = await Points.find()\r\n      .sort({ totalEarned: -1 })\r\n      .limit(parseInt(limit as string))\r\n      .populate('userId', 'username avatar');\r\n\r\n    // \u83B7\u53D6\u5F53\u524D\u7528\u6237\u6392\u540D\r\n    const allUsers = await Points.find().sort({ totalEarned: -1 });\r\n    const myRank = allUsers.findIndex(p => p.userId.toString() === userId) + 1;\r\n    const myPoints = await Points.findOne({ userId });\r\n\r\n    res.json({\r\n      leaderboard: topUsers.map((p, index) => ({\r\n        rank: index + 1,\r\n        userId: p.userId,\r\n        level: p.level,\r\n        levelName: p.levelName,\r\n        totalPoints: p.totalEarned\r\n      })),\r\n      myRank: {\r\n        rank: myRank || null,\r\n        level: myPoints?.level || 1,\r\n        levelName: myPoints?.levelName || '\u521D\u5B66\u8005',\r\n        totalPoints: myPoints?.totalEarned || 0\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u6392\u884C\u699C\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u6392\u884C\u699C\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5151\u6362\u5546\u54C1\uFF08\u793A\u4F8B\uFF09\r\nrouter.post('/redeem', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!.userId;\r\n    const { itemId, itemName, cost } = req.body;\r\n\r\n    if (!itemId || !cost || cost <= 0) {\r\n      return res.status(400).json({ error: '\u65E0\u6548\u7684\u5151\u6362\u8BF7\u6C42' });\r\n    }\r\n\r\n    const points = await Points.findOne({ userId });\r\n    if (!points) {\r\n      return res.status(404).json({ error: '\u79EF\u5206\u4FE1\u606F\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (points.balance < cost) {\r\n      return res.status(400).json({ error: '\u79EF\u5206\u4E0D\u8DB3' });\r\n    }\r\n\r\n    await points.spendPoints(cost, 'redeem', `\u5151\u6362\uFF1A${itemName}`);\r\n\r\n    res.json({\r\n      message: '\u5151\u6362\u6210\u529F',\r\n      item: { itemId, itemName, cost },\r\n      remainingPoints: points.balance\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u5151\u6362\u5931\u8D25:', error);\r\n    res.status(500).json({ error: error.message || '\u5151\u6362\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u53EF\u5151\u6362\u5546\u54C1\u5217\u8868\r\nrouter.get('/shop', authMiddleware, async (req, res) => {\r\n  try {\r\n    const items = [\r\n      {\r\n        id: 'theme_1',\r\n        name: '\u661F\u7A7A\u4E3B\u9898',\r\n        description: '\u89E3\u9501\u7CBE\u7F8E\u7684\u661F\u7A7A\u4E3B\u9898',\r\n        cost: 500,\r\n        category: 'theme',\r\n        image: '/themes/starry.png'\r\n      },\r\n      {\r\n        id: 'theme_2',\r\n        name: '\u6D77\u6D0B\u4E3B\u9898',\r\n        description: '\u89E3\u9501\u6E05\u65B0\u7684\u6D77\u6D0B\u4E3B\u9898',\r\n        cost: 500,\r\n        category: 'theme',\r\n        image: '/themes/ocean.png'\r\n      },\r\n      {\r\n        id: 'badge_1',\r\n        name: '\u5B66\u9738\u5FBD\u7AE0',\r\n        description: '\u5C55\u793A\u4F60\u7684\u5B66\u4E60\u6210\u5C31',\r\n        cost: 1000,\r\n        category: 'badge',\r\n        image: '/badges/scholar.png'\r\n      },\r\n      {\r\n        id: 'vip_trial',\r\n        name: '7\u5929VIP\u4F53\u9A8C',\r\n        description: '\u4F53\u9A8C\u9AD8\u7EA7\u4F1A\u5458\u529F\u80FD',\r\n        cost: 2000,\r\n        category: 'membership',\r\n        image: '/items/vip-trial.png'\r\n      },\r\n      {\r\n        id: 'ai_boost',\r\n        name: 'AI\u63D0\u95EE\u6B21\u6570+50',\r\n        description: '\u989D\u5916\u589E\u52A050\u6B21AI\u63D0\u95EE\u673A\u4F1A',\r\n        cost: 800,\r\n        category: 'boost',\r\n        image: '/items/ai-boost.png'\r\n      }\r\n    ];\r\n\r\n    res.json(items);\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5546\u54C1\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5546\u54C1\u5217\u8868\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import express from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport { Notification } from '../models/Notification';\r\nimport { User } from '../models/User';\r\nimport Class from '../models/Class';\r\n\r\nconst router = express.Router();\r\n\r\n// \u83B7\u53D6\u5F53\u524D\u7528\u6237\u7684\u901A\u77E5\u5217\u8868\r\nrouter.get('/my', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    const { page = 1, limit = 20, unreadOnly = false, type } = req.query;\r\n\r\n    const query: any = { recipientId: userId };\r\n    \r\n    if (unreadOnly === 'true') {\r\n      query.read = false;\r\n    }\r\n    \r\n    if (type) {\r\n      query.type = type;\r\n    }\r\n\r\n    const skip = (Number(page) - 1) * Number(limit);\r\n\r\n    const [notifications, total, unreadCount] = await Promise.all([\r\n      Notification.find(query)\r\n        .sort({ createdAt: -1 })\r\n        .skip(skip)\r\n        .limit(Number(limit))\r\n        .populate('senderId', 'username avatarUrl')\r\n        .lean(),\r\n      Notification.countDocuments(query),\r\n      Notification.countDocuments({ recipientId: userId, read: false })\r\n    ]);\r\n\r\n    res.json({\r\n      notifications,\r\n      total,\r\n      unreadCount,\r\n      page: Number(page),\r\n      limit: Number(limit),\r\n      totalPages: Math.ceil(total / Number(limit))\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u901A\u77E5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u901A\u77E5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u672A\u8BFB\u901A\u77E5\u6570\u91CF\r\nrouter.get('/unread-count', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    const count = await Notification.countDocuments({ \r\n      recipientId: userId, \r\n      read: false \r\n    });\r\n    res.json({ count });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u672A\u8BFB\u6570\u91CF\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u672A\u8BFB\u6570\u91CF\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u6807\u8BB0\u5355\u4E2A\u901A\u77E5\u4E3A\u5DF2\u8BFB\r\nrouter.put('/:notificationId/read', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    const { notificationId } = req.params;\r\n\r\n    const notification = await Notification.findOneAndUpdate(\r\n      { _id: notificationId, recipientId: userId },\r\n      { read: true, readAt: new Date() },\r\n      { new: true }\r\n    );\r\n\r\n    if (!notification) {\r\n      return res.status(404).json({ error: '\u901A\u77E5\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    res.json(notification);\r\n  } catch (error) {\r\n    console.error('\u6807\u8BB0\u5DF2\u8BFB\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u6807\u8BB0\u5DF2\u8BFB\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u6807\u8BB0\u6240\u6709\u901A\u77E5\u4E3A\u5DF2\u8BFB\r\nrouter.put('/mark-all-read', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    \r\n    await Notification.updateMany(\r\n      { recipientId: userId, read: false },\r\n      { read: true, readAt: new Date() }\r\n    );\r\n\r\n    res.json({ message: '\u6240\u6709\u901A\u77E5\u5DF2\u6807\u8BB0\u4E3A\u5DF2\u8BFB' });\r\n  } catch (error) {\r\n    console.error('\u6807\u8BB0\u5168\u90E8\u5DF2\u8BFB\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u6807\u8BB0\u5168\u90E8\u5DF2\u8BFB\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u5220\u9664\u901A\u77E5\r\nrouter.delete('/:notificationId', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    const { notificationId } = req.params;\r\n\r\n    const notification = await Notification.findOneAndDelete({\r\n      _id: notificationId,\r\n      recipientId: userId\r\n    });\r\n\r\n    if (!notification) {\r\n      return res.status(404).json({ error: '\u901A\u77E5\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    res.json({ message: '\u901A\u77E5\u5DF2\u5220\u9664' });\r\n  } catch (error) {\r\n    console.error('\u5220\u9664\u901A\u77E5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u5220\u9664\u901A\u77E5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u6279\u91CF\u5220\u9664\u5DF2\u8BFB\u901A\u77E5\r\nrouter.delete('/batch/read', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = req.user!._id;\r\n    \r\n    const result = await Notification.deleteMany({\r\n      recipientId: userId,\r\n      read: true\r\n    });\r\n\r\n    res.json({ \r\n      message: '\u5DF2\u8BFB\u901A\u77E5\u5DF2\u6E05\u7A7A',\r\n      deletedCount: result.deletedCount\r\n    });\r\n  } catch (error) {\r\n    console.error('\u6E05\u7A7A\u5DF2\u8BFB\u901A\u77E5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u6E05\u7A7A\u5DF2\u8BFB\u901A\u77E5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u521B\u5EFA\u901A\u77E5\uFF08\u4EC5\u6559\u5E08\u548C\u7BA1\u7406\u5458\uFF09\r\nrouter.post('/', authMiddleware, async (req, res) => {\r\n  try {\r\n    const user = req.user!;\r\n    \r\n    // \u68C0\u67E5\u6743\u9650\r\n    if (user.role !== 'teacher' && user.role !== 'admin') {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u9650\u521B\u5EFA\u901A\u77E5' });\r\n    }\r\n\r\n    const {\r\n      recipientIds,\r\n      classId,\r\n      type,\r\n      title,\r\n      content,\r\n      priority = 'normal',\r\n      relatedId,\r\n      relatedType,\r\n      actionUrl,\r\n      metadata\r\n    } = req.body;\r\n\r\n    if (!title || !content) {\r\n      return res.status(400).json({ error: '\u6807\u9898\u548C\u5185\u5BB9\u4E0D\u80FD\u4E3A\u7A7A' });\r\n    }\r\n\r\n    let recipients: any[] = [];\r\n\r\n    // \u5982\u679C\u6307\u5B9A\u4E86\u73ED\u7EA7\uFF0C\u83B7\u53D6\u73ED\u7EA7\u6240\u6709\u5B66\u751F\r\n    if (classId) {\r\n      const classDoc = await Class.findById(classId);\r\n      if (!classDoc) {\r\n        return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n      }\r\n      recipients = classDoc.students\r\n        .filter(s => s.status === 'active')\r\n        .map(s => s.userId);\r\n    } else if (recipientIds && Array.isArray(recipientIds)) {\r\n      recipients = recipientIds;\r\n    } else {\r\n      return res.status(400).json({ error: '\u5FC5\u987B\u6307\u5B9A\u63A5\u6536\u8005\u6216\u73ED\u7EA7' });\r\n    }\r\n\r\n    // \u6279\u91CF\u521B\u5EFA\u901A\u77E5\r\n    const notifications = recipients.map(recipientId => ({\r\n      recipientId,\r\n      recipientType: 'student',\r\n      senderId: user._id,\r\n      type,\r\n      title,\r\n      content,\r\n      priority,\r\n      relatedId,\r\n      relatedType,\r\n      actionUrl,\r\n      metadata,\r\n      read: false\r\n    }));\r\n\r\n    const created = await Notification.insertMany(notifications);\r\n\r\n    res.json({\r\n      message: '\u901A\u77E5\u521B\u5EFA\u6210\u529F',\r\n      count: created.length\r\n    });\r\n  } catch (error) {\r\n    console.error('\u521B\u5EFA\u901A\u77E5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u521B\u5EFA\u901A\u77E5\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import express from 'express';\r\nimport Question from '../models/Question';\r\nimport { authMiddleware } from '../middleware/auth';\r\n\r\nconst router = express.Router();\r\n\r\n// \u521B\u5EFA\u9898\u76EE\uFF08\u6559\u5E08\uFF09\r\nrouter.post('/', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u662F\u6559\u5E08\r\n    if (userRole !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u521B\u5EFA\u9898\u76EE' });\r\n    }\r\n\r\n    const questionData = {\r\n      ...req.body,\r\n      teacherId: userId\r\n    };\r\n\r\n    const question = new Question(questionData);\r\n    await question.save();\r\n\r\n    res.status(201).json(question);\r\n  } catch (error: any) {\r\n    console.error('\u521B\u5EFA\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u521B\u5EFA\u9898\u76EE\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u6559\u5E08\u7684\u9898\u76EE\u5217\u8868\uFF08\u5E26\u7B5B\u9009\u548C\u5206\u9875\uFF09\r\nrouter.get('/my', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    if (userRole !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u8BBF\u95EE' });\r\n    }\r\n\r\n    const {\r\n      page = 1,\r\n      limit = 20,\r\n      type,\r\n      difficulty,\r\n      tag,\r\n      search\r\n    } = req.query;\r\n\r\n    // \u6784\u5EFA\u67E5\u8BE2\u6761\u4EF6\r\n    const query: any = { teacherId: userId };\r\n\r\n    if (type) query.type = type;\r\n    if (difficulty) query.difficulty = difficulty;\r\n    if (tag) query.tags = tag;\r\n    if (search) {\r\n      query.$or = [\r\n        { title: { $regex: search, $options: 'i' } },\r\n        { content: { $regex: search, $options: 'i' } }\r\n      ];\r\n    }\r\n\r\n    const skip = (Number(page) - 1) * Number(limit);\r\n\r\n    const [questions, total] = await Promise.all([\r\n      Question.find(query)\r\n        .sort({ createdAt: -1 })\r\n        .skip(skip)\r\n        .limit(Number(limit))\r\n        .lean(),\r\n      Question.countDocuments(query)\r\n    ]);\r\n\r\n    res.json({\r\n      questions,\r\n      total,\r\n      page: Number(page),\r\n      limit: Number(limit),\r\n      totalPages: Math.ceil(total / Number(limit))\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u9898\u76EE\u5217\u8868\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u9898\u76EE\u5217\u8868\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u5355\u4E2A\u9898\u76EE\u8BE6\u60C5\uFF08\u6559\u5E08\u7AEF - \u5305\u542B\u7B54\u6848\uFF09\r\nrouter.get('/:id', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    const question = await Question.findById(id);\r\n\r\n    if (!question) {\r\n      return res.status(404).json({ error: '\u9898\u76EE\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u6559\u5E08\u53EF\u4EE5\u67E5\u770B\u81EA\u5DF1\u7684\u9898\u76EE\u6216\u516C\u5F00\u9898\u76EE\r\n    if (userRole === 'teacher') {\r\n      if (question.teacherId.toString() !== userId && !question.isPublic) {\r\n        return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE\u6B64\u9898\u76EE' });\r\n      }\r\n      return res.json(question);\r\n    }\r\n\r\n    // \u5B66\u751F\u53EA\u80FD\u770B\u5230\u4E0D\u542B\u7B54\u6848\u7684\u7248\u672C\r\n    const safeQuestion = (question as any).toSafeObject();\r\n    res.json(safeQuestion);\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u9898\u76EE\u8BE6\u60C5\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u9898\u76EE\u8BE6\u60C5\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u66F4\u65B0\u9898\u76EE\uFF08\u6559\u5E08\uFF09\r\nrouter.put('/:id', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    if (userRole !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u7F16\u8F91\u9898\u76EE' });\r\n    }\r\n\r\n    const question = await Question.findById(id);\r\n\r\n    if (!question) {\r\n      return res.status(404).json({ error: '\u9898\u76EE\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (question.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u53EA\u80FD\u7F16\u8F91\u81EA\u5DF1\u521B\u5EFA\u7684\u9898\u76EE' });\r\n    }\r\n\r\n    // \u66F4\u65B0\u9898\u76EE\r\n    Object.assign(question, req.body);\r\n    await question.save();\r\n\r\n    res.json(question);\r\n  } catch (error: any) {\r\n    console.error('\u66F4\u65B0\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u66F4\u65B0\u9898\u76EE\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u5220\u9664\u9898\u76EE\uFF08\u6559\u5E08\uFF09\r\nrouter.delete('/:id', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    if (userRole !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u5220\u9664\u9898\u76EE' });\r\n    }\r\n\r\n    const question = await Question.findById(id);\r\n\r\n    if (!question) {\r\n      return res.status(404).json({ error: '\u9898\u76EE\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (question.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u53EA\u80FD\u5220\u9664\u81EA\u5DF1\u521B\u5EFA\u7684\u9898\u76EE' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u9898\u76EE\u662F\u5426\u88AB\u4F7F\u7528\r\n    if (question.usageCount > 0) {\r\n      return res.status(400).json({ \r\n        error: '\u8BE5\u9898\u76EE\u5DF2\u88AB\u4F7F\u7528\uFF0C\u65E0\u6CD5\u5220\u9664',\r\n        usageCount: question.usageCount\r\n      });\r\n    }\r\n\r\n    await Question.findByIdAndDelete(id);\r\n\r\n    res.json({ message: '\u9898\u76EE\u5220\u9664\u6210\u529F' });\r\n  } catch (error: any) {\r\n    console.error('\u5220\u9664\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u5220\u9664\u9898\u76EE\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u6279\u91CF\u83B7\u53D6\u9898\u76EE\uFF08\u7528\u4E8E\u4F5C\u4E1A\u663E\u793A\uFF09\r\nrouter.post('/batch', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { questionIds } = req.body;\r\n    const userRole = (req.user as any).role;\r\n\r\n    if (!Array.isArray(questionIds)) {\r\n      return res.status(400).json({ error: 'questionIds \u5FC5\u987B\u662F\u6570\u7EC4' });\r\n    }\r\n\r\n    const questions = await Question.find({ _id: { $in: questionIds } });\r\n\r\n    // \u5982\u679C\u662F\u5B66\u751F\uFF0C\u8FD4\u56DE\u4E0D\u542B\u7B54\u6848\u7684\u7248\u672C\r\n    if (userRole === 'student') {\r\n      const safeQuestions = questions.map(q => (q as any).toSafeObject());\r\n      return res.json(safeQuestions);\r\n    }\r\n\r\n    res.json(questions);\r\n  } catch (error: any) {\r\n    console.error('\u6279\u91CF\u83B7\u53D6\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u6279\u91CF\u83B7\u53D6\u9898\u76EE\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u516C\u5F00\u9898\u5E93\uFF08\u6559\u5E08\uFF09\r\nrouter.get('/public/list', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userRole = (req.user as any).role;\r\n\r\n    if (userRole !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u8BBF\u95EE\u9898\u5E93' });\r\n    }\r\n\r\n    const {\r\n      page = 1,\r\n      limit = 20,\r\n      type,\r\n      difficulty,\r\n      tag,\r\n      search\r\n    } = req.query;\r\n\r\n    const query: any = { isPublic: true };\r\n\r\n    if (type) query.type = type;\r\n    if (difficulty) query.difficulty = difficulty;\r\n    if (tag) query.tags = tag;\r\n    if (search) {\r\n      query.$or = [\r\n        { title: { $regex: search, $options: 'i' } },\r\n        { content: { $regex: search, $options: 'i' } }\r\n      ];\r\n    }\r\n\r\n    const skip = (Number(page) - 1) * Number(limit);\r\n\r\n    const [questions, total] = await Promise.all([\r\n      Question.find(query)\r\n        .sort({ usageCount: -1, createdAt: -1 })\r\n        .skip(skip)\r\n        .limit(Number(limit))\r\n        .populate('teacherId', 'name')\r\n        .lean(),\r\n      Question.countDocuments(query)\r\n    ]);\r\n\r\n    res.json({\r\n      questions,\r\n      total,\r\n      page: Number(page),\r\n      limit: Number(limit),\r\n      totalPages: Math.ceil(total / Number(limit))\r\n    });\r\n  } catch (error: any) {\r\n    console.error('\u83B7\u53D6\u516C\u5F00\u9898\u5E93\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u516C\u5F00\u9898\u5E93\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\n// \u590D\u5236\u9898\u76EE\u5230\u81EA\u5DF1\u7684\u9898\u5E93\r\nrouter.post('/:id/copy', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const userRole = (req.user as any).role;\r\n\r\n    if (userRole !== 'teacher') {\r\n      return res.status(403).json({ error: '\u53EA\u6709\u6559\u5E08\u53EF\u4EE5\u590D\u5236\u9898\u76EE' });\r\n    }\r\n\r\n    const originalQuestion = await Question.findById(id);\r\n\r\n    if (!originalQuestion) {\r\n      return res.status(404).json({ error: '\u9898\u76EE\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (!originalQuestion.isPublic && originalQuestion.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u590D\u5236\u6B64\u9898\u76EE' });\r\n    }\r\n\r\n    // \u521B\u5EFA\u526F\u672C\r\n    const newQuestion = new Question({\r\n      ...originalQuestion.toObject(),\r\n      _id: undefined,\r\n      teacherId: userId,\r\n      isPublic: false,\r\n      usageCount: 0,\r\n      createdAt: undefined,\r\n      updatedAt: undefined\r\n    });\r\n\r\n    await newQuestion.save();\r\n\r\n    res.status(201).json(newQuestion);\r\n  } catch (error: any) {\r\n    console.error('\u590D\u5236\u9898\u76EE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u590D\u5236\u9898\u76EE\u5931\u8D25', details: error.message });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import mongoose, { Schema, Document } from 'mongoose';\r\n\r\n// \u9009\u62E9\u9898\u9009\u9879\u63A5\u53E3\r\nexport interface IOption {\r\n  id: string;\r\n  content: string;\r\n  isCorrect?: boolean; // \u540E\u7AEF\u5B58\u50A8\uFF0C\u524D\u7AEF\u4E0D\u8FD4\u56DE\r\n}\r\n\r\n// \u9898\u76EE\u63A5\u53E3\r\nexport interface IQuestion extends Document {\r\n  title: string; // \u9898\u76EE\u6807\u9898\r\n  type: 'single' | 'multiple' | 'truefalse' | 'short' | 'essay'; // \u9898\u578B\r\n  content: string; // \u9898\u76EE\u5185\u5BB9\uFF08\u53EF\u4EE5\u662F\u5BCC\u6587\u672C/Markdown\uFF09\r\n  options?: IOption[]; // \u9009\u62E9\u9898\u9009\u9879\uFF08\u5355\u9009\u3001\u591A\u9009\u3001\u5224\u65AD\u9898\u4F7F\u7528\uFF09\r\n  correctAnswer?: string | string[]; // \u6B63\u786E\u7B54\u6848\r\n  analysis?: string; // \u9898\u76EE\u89E3\u6790\r\n  difficulty: 'easy' | 'medium' | 'hard'; // \u96BE\u5EA6\r\n  knowledgePoints?: mongoose.Types.ObjectId[]; // \u5173\u8054\u77E5\u8BC6\u70B9\r\n  tags?: string[]; // \u6807\u7B7E\r\n  teacherId: mongoose.Types.ObjectId; // \u521B\u5EFA\u8005\r\n  isPublic: boolean; // \u662F\u5426\u516C\u5F00\uFF08\u9898\u5E93\u5171\u4EAB\uFF09\r\n  usageCount: number; // \u4F7F\u7528\u6B21\u6570\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst QuestionSchema = new Schema<IQuestion>({\r\n  title: { type: String, required: true },\r\n  type: { \r\n    type: String, \r\n    enum: ['single', 'multiple', 'truefalse', 'short', 'essay'], \r\n    required: true \r\n  },\r\n  content: { type: String, required: true },\r\n  options: [{\r\n    id: { type: String, required: true },\r\n    content: { type: String, required: true },\r\n    isCorrect: { type: Boolean }\r\n  }],\r\n  correctAnswer: { type: Schema.Types.Mixed }, // \u53EF\u4EE5\u662F\u5B57\u7B26\u4E32\u6216\u6570\u7EC4\r\n  analysis: { type: String },\r\n  difficulty: { \r\n    type: String, \r\n    enum: ['easy', 'medium', 'hard'], \r\n    default: 'medium' \r\n  },\r\n  knowledgePoints: [{ type: Schema.Types.ObjectId, ref: 'KnowledgePoint' }],\r\n  tags: [{ type: String }],\r\n  teacherId: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n  isPublic: { type: Boolean, default: false },\r\n  usageCount: { type: Number, default: 0 }\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\n// \u7D22\u5F15\r\nQuestionSchema.index({ teacherId: 1, type: 1 });\r\nQuestionSchema.index({ difficulty: 1 });\r\nQuestionSchema.index({ tags: 1 });\r\nQuestionSchema.index({ isPublic: 1 });\r\nQuestionSchema.index({ knowledgePoints: 1 });\r\n\r\n// \u65B9\u6CD5\uFF1A\u83B7\u53D6\u9898\u76EE\uFF08\u4E0D\u5305\u542B\u7B54\u6848\uFF09\r\nQuestionSchema.methods.toSafeObject = function() {\r\n  const obj = this.toObject();\r\n  \r\n  // \u79FB\u9664\u6B63\u786E\u7B54\u6848\u6807\u8BB0\uFF08\u5B66\u751F\u7AEF\u4F7F\u7528\uFF09\r\n  if (obj.options) {\r\n    obj.options = obj.options.map((opt: IOption) => ({\r\n      id: opt.id,\r\n      content: opt.content\r\n      // \u4E0D\u8FD4\u56DE isCorrect\r\n    }));\r\n  }\r\n  \r\n  // \u79FB\u9664\u6B63\u786E\u7B54\u6848\u548C\u89E3\u6790\r\n  delete obj.correctAnswer;\r\n  delete obj.analysis;\r\n  \r\n  return obj;\r\n};\r\n\r\nexport default mongoose.model<IQuestion>('Question', QuestionSchema);\r\n\r\n", "// backend/src/routes/stats.ts\r\nimport express from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport Assignment from '../models/Assignment';\r\nimport Class from '../models/Class';\r\nimport User from '../models/User';\r\n\r\nconst router = express.Router();\r\n\r\n// \u83B7\u53D6\u672C\u5468\u6D3B\u8DC3\u5B66\u751F\u6570\uFF08\u6559\u5E08\uFF09\r\nrouter.get('/active-students-this-week', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    // \u83B7\u53D6\u672C\u5468\u7684\u5F00\u59CB\u548C\u7ED3\u675F\u65F6\u95F4\r\n    const now = new Date();\r\n    const startOfWeek = new Date(now);\r\n    startOfWeek.setDate(now.getDate() - now.getDay()); // \u5468\u65E5\r\n    startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n    const endOfWeek = new Date(startOfWeek);\r\n    endOfWeek.setDate(startOfWeek.getDate() + 7);\r\n\r\n    // \u83B7\u53D6\u6559\u5E08\u7684\u6240\u6709\u73ED\u7EA7\r\n    const classes = await Class.find({ teacherId: userId, status: 'active' });\r\n    \r\n    if (classes.length === 0) {\r\n      return res.json({ count: 0, students: [] });\r\n    }\r\n\r\n    // \u6536\u96C6\u6240\u6709\u5B66\u751FID\r\n    const allStudentIds = new Set<string>();\r\n    classes.forEach(cls => {\r\n      cls.students.forEach(student => {\r\n        if (student.status === 'active') {\r\n          allStudentIds.add(student.userId.toString());\r\n        }\r\n      });\r\n    });\r\n\r\n    // \u67E5\u627E\u672C\u5468\u6709\u63D0\u4EA4\u4F5C\u4E1A\u7684\u5B66\u751F\r\n    const assignments = await Assignment.find({\r\n      teacherId: userId,\r\n      'submissions.submittedAt': {\r\n        $gte: startOfWeek,\r\n        $lt: endOfWeek\r\n      }\r\n    });\r\n\r\n    // \u7EDF\u8BA1\u6D3B\u8DC3\u5B66\u751F\r\n    const activeStudentIds = new Set<string>();\r\n    assignments.forEach(assignment => {\r\n      assignment.submissions.forEach(submission => {\r\n        const submittedAt = new Date(submission.submittedAt);\r\n        if (submittedAt >= startOfWeek && submittedAt < endOfWeek) {\r\n          activeStudentIds.add(submission.userId.toString());\r\n        }\r\n      });\r\n    });\r\n\r\n    // \u83B7\u53D6\u5B66\u751F\u8BE6\u7EC6\u4FE1\u606F\r\n    const activeStudents = await User.find({\r\n      _id: { $in: Array.from(activeStudentIds) }\r\n    }).select('username email avatar');\r\n\r\n    res.json({\r\n      count: activeStudents.length,\r\n      totalStudents: allStudentIds.size,\r\n      students: activeStudents.map(student => ({\r\n        id: student._id,\r\n        username: student.username,\r\n        email: student.email,\r\n        avatar: student.avatar\r\n      })),\r\n      weekStart: startOfWeek,\r\n      weekEnd: endOfWeek\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u6D3B\u8DC3\u5B66\u751F\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u6D3B\u8DC3\u5B66\u751F\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u6559\u5E08\u7EDF\u8BA1\u6982\u89C8\r\nrouter.get('/teacher-overview', authMiddleware, async (req, res) => {\r\n  try {\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    // \u83B7\u53D6\u73ED\u7EA7\u6570\u91CF\r\n    const classCount = await Class.countDocuments({ teacherId: userId, status: 'active' });\r\n\r\n    // \u83B7\u53D6\u5B66\u751F\u603B\u6570\r\n    const classes = await Class.find({ teacherId: userId, status: 'active' });\r\n    const studentIds = new Set<string>();\r\n    classes.forEach(cls => {\r\n      cls.students.forEach(student => {\r\n        if (student.status === 'active') {\r\n          studentIds.add(student.userId.toString());\r\n        }\r\n      });\r\n    });\r\n\r\n    // \u83B7\u53D6\u4F5C\u4E1A\u6570\u91CF\r\n    const assignmentCount = await Assignment.countDocuments({\r\n      teacherId: userId,\r\n      status: { $in: ['published', 'draft'] }\r\n    });\r\n\r\n    // \u83B7\u53D6\u5F85\u6279\u6539\u4F5C\u4E1A\u6570\u91CF\r\n    const pendingGradingCount = await Assignment.aggregate([\r\n      { $match: { teacherId: userId } },\r\n      { $unwind: '$submissions' },\r\n      { $match: { 'submissions.status': 'submitted' } },\r\n      { $count: 'total' }\r\n    ]);\r\n\r\n    res.json({\r\n      classCount,\r\n      studentCount: studentIds.size,\r\n      assignmentCount,\r\n      pendingGradingCount: pendingGradingCount[0]?.total || 0\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u6559\u5E08\u7EDF\u8BA1\u6982\u89C8\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u6559\u5E08\u7EDF\u8BA1\u6982\u89C8\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "import express from 'express';\r\nimport { authMiddleware } from '../middleware/auth';\r\nimport Class from '../models/Class';\r\nimport User from '../models/User';\r\nimport StudySession from '../models/StudySession';\r\nimport UserProgress from '../models/UserProgress';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport Assignment from '../models/Assignment';\r\n\r\nconst router = express.Router();\r\n\r\n// \u83B7\u53D6\u73ED\u7EA7\u6574\u4F53\u6570\u636E\u5206\u6790\r\nrouter.get('/class/:classId/overview', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    // \u68C0\u67E5\u6743\u9650\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const studentIds = activeStudents.map(s => s.userId);\r\n\r\n    // \u83B7\u53D6\u73ED\u7EA7\u5B66\u4E60\u603B\u65F6\u957F\r\n    const totalDuration = await StudySession.aggregate([\r\n      { $match: { userId: { $in: studentIds } } },\r\n      { $group: { _id: null, total: { $sum: '$duration' } } }\r\n    ]).then(result => result[0]?.total || 0);\r\n\r\n    // \u83B7\u53D6\u73ED\u7EA7\u77E5\u8BC6\u70B9\u638C\u63E1\u60C5\u51B5\r\n    const progressData = await UserProgress.find({ userId: { $in: studentIds } });\r\n    const totalKnowledge = progressData.length;\r\n    const masteredKnowledge = progressData.filter(p => p.bestScore >= 80).length;\r\n\r\n    // \u83B7\u53D6\u4F5C\u4E1A\u7EDF\u8BA1\r\n    const assignments = await Assignment.find({ classId });\r\n    const totalAssignments = assignments.length;\r\n    const completedAssignments = assignments.filter(a => {\r\n      const submittedStudents = new Set(a.submissions.map((s: any) => s.userId.toString()));\r\n      return submittedStudents.size === studentIds.length;\r\n    }).length;\r\n\r\n    // \u83B7\u53D6\u9519\u9898\u7EDF\u8BA1\r\n    const totalWrongQuestions = await WrongQuestion.countDocuments({ \r\n      userId: { $in: studentIds } \r\n    });\r\n\r\n    // \u83B7\u53D6\u6D3B\u8DC3\u5B66\u751F\u6570\uFF08\u6700\u8FD17\u5929\uFF09\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n    const activeSessions = await StudySession.distinct('userId', {\r\n      userId: { $in: studentIds },\r\n      createdAt: { $gte: sevenDaysAgo }\r\n    });\r\n\r\n    res.json({\r\n      classId,\r\n      className: classInfo.name,\r\n      overview: {\r\n        totalStudents: activeStudents.length,\r\n        activeStudents: activeSessions.length,\r\n        totalDuration: Math.round(totalDuration),\r\n        avgDurationPerStudent: Math.round(totalDuration / activeStudents.length) || 0,\r\n        totalKnowledge,\r\n        masteredKnowledge,\r\n        masteryRate: totalKnowledge > 0 ? Math.round((masteredKnowledge / totalKnowledge) * 100) : 0,\r\n        totalAssignments,\r\n        completedAssignments,\r\n        assignmentCompletionRate: totalAssignments > 0 \r\n          ? Math.round((completedAssignments / totalAssignments) * 100) \r\n          : 0,\r\n        totalWrongQuestions\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u73ED\u7EA7\u6982\u89C8\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u73ED\u7EA7\u6982\u89C8\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u5B66\u751F\u6392\u540D\r\nrouter.get('/class/:classId/student-rankings', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const { sortBy = 'score' } = req.query; // score, studyTime, progress\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    \r\n    const studentRankings = await Promise.all(\r\n      activeStudents.map(async (student) => {\r\n        const studentId = student.userId;\r\n\r\n        // \u5B66\u4E60\u65F6\u957F\r\n        const sessions = await StudySession.find({ userId: studentId });\r\n        const totalTime = sessions.reduce((sum, s) => sum + (s.duration || 0), 0);\r\n\r\n        // \u77E5\u8BC6\u70B9\u638C\u63E1\u60C5\u51B5\r\n        const userProgress = await UserProgress.find({ userId: studentId });\r\n        const masteredCount = userProgress.filter(up => up.bestScore >= 80).length;\r\n        const totalKnowledge = userProgress.length;\r\n        const progressRate = totalKnowledge > 0 \r\n          ? Math.round((masteredCount / totalKnowledge) * 100) \r\n          : 0;\r\n\r\n        // \u5E73\u5747\u5206\u6570\r\n        const avgScore = userProgress.length > 0\r\n          ? Math.round(userProgress.reduce((sum, up) => sum + up.bestScore, 0) / userProgress.length)\r\n          : 0;\r\n\r\n        // \u4F5C\u4E1A\u5B8C\u6210\u60C5\u51B5\r\n        const assignments = await Assignment.find({ classId });\r\n        const submittedAssignments = assignments.filter(a => \r\n          a.submissions.some((s: any) => s.userId.toString() === studentId.toString())\r\n        ).length;\r\n        const assignmentCompletionRate = assignments.length > 0\r\n          ? Math.round((submittedAssignments / assignments.length) * 100)\r\n          : 0;\r\n\r\n        // \u9519\u9898\u6570\r\n        const wrongQuestionsCount = await WrongQuestion.countDocuments({ userId: studentId });\r\n\r\n        // \u6700\u540E\u6D3B\u8DC3\u65F6\u95F4\r\n        const lastActive = sessions.length > 0 \r\n          ? sessions[sessions.length - 1].createdAt \r\n          : student.joinedAt;\r\n\r\n        return {\r\n          userId: studentId,\r\n          userName: student.userName,\r\n          totalTime,\r\n          masteredCount,\r\n          totalKnowledge,\r\n          progressRate,\r\n          avgScore,\r\n          assignmentCompletionRate,\r\n          wrongQuestionsCount,\r\n          lastActive\r\n        };\r\n      })\r\n    );\r\n\r\n    // \u6839\u636EsortBy\u6392\u5E8F\r\n    studentRankings.sort((a, b) => {\r\n      switch (sortBy) {\r\n        case 'studyTime':\r\n          return b.totalTime - a.totalTime;\r\n        case 'progress':\r\n          return b.progressRate - a.progressRate;\r\n        case 'score':\r\n        default:\r\n          return b.avgScore - a.avgScore;\r\n      }\r\n    });\r\n\r\n    // \u6DFB\u52A0\u6392\u540D\r\n    const rankedStudents = studentRankings.map((student, index) => ({\r\n      ...student,\r\n      rank: index + 1\r\n    }));\r\n\r\n    res.json({\r\n      classId,\r\n      sortBy,\r\n      students: rankedStudents\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5B66\u751F\u6392\u540D\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5B66\u751F\u6392\u540D\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u8584\u5F31\u77E5\u8BC6\u70B9\u5206\u6790\r\nrouter.get('/class/:classId/weak-points', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const studentIds = activeStudents.map(s => s.userId);\r\n\r\n    // \u83B7\u53D6\u6240\u6709\u5B66\u751F\u7684\u77E5\u8BC6\u70B9\u638C\u63E1\u60C5\u51B5\r\n    const progressData = await UserProgress.find({ \r\n      userId: { $in: studentIds } \r\n    }).populate('pointId', 'title subject difficulty');\r\n\r\n    // \u6309\u77E5\u8BC6\u70B9\u5206\u7EC4\u7EDF\u8BA1\r\n    const knowledgePointStats: { [key: string]: any } = {};\r\n    \r\n    progressData.forEach(progress => {\r\n      const pointId = progress.pointId?._id?.toString();\r\n      if (!pointId) return;\r\n\r\n      const point = progress.pointId as any;\r\n      \r\n      if (!knowledgePointStats[pointId]) {\r\n        knowledgePointStats[pointId] = {\r\n          pointId,\r\n          title: point.title || '\u672A\u77E5\u77E5\u8BC6\u70B9',\r\n          subject: point.subject || '\u672A\u5206\u7C7B',\r\n          difficulty: point.difficulty || 'medium',\r\n          totalStudents: 0,\r\n          masteredStudents: 0,\r\n          avgScore: 0,\r\n          totalScore: 0,\r\n          lowScoreStudents: []\r\n        };\r\n      }\r\n\r\n      knowledgePointStats[pointId].totalStudents++;\r\n      knowledgePointStats[pointId].totalScore += progress.bestScore;\r\n      \r\n      if (progress.bestScore >= 80) {\r\n        knowledgePointStats[pointId].masteredStudents++;\r\n      }\r\n\r\n      if (progress.bestScore < 60) {\r\n        knowledgePointStats[pointId].lowScoreStudents.push({\r\n          userId: progress.userId,\r\n          score: progress.bestScore\r\n        });\r\n      }\r\n    });\r\n\r\n    // \u8BA1\u7B97\u5E73\u5747\u5206\u548C\u638C\u63E1\u7387\r\n    const weakPointsArray = Object.values(knowledgePointStats).map((stats: any) => {\r\n      stats.avgScore = Math.round(stats.totalScore / stats.totalStudents);\r\n      stats.masteryRate = Math.round((stats.masteredStudents / stats.totalStudents) * 100);\r\n      stats.lowScoreCount = stats.lowScoreStudents.length;\r\n      delete stats.totalScore;\r\n      delete stats.lowScoreStudents; // \u5220\u9664\u8BE6\u7EC6\u7684\u5B66\u751F\u5217\u8868\uFF0C\u53EA\u4FDD\u7559\u6570\u91CF\r\n      return stats;\r\n    });\r\n\r\n    // \u6309\u5E73\u5747\u5206\u6392\u5E8F\uFF0C\u627E\u51FA\u8584\u5F31\u77E5\u8BC6\u70B9\uFF08\u5E73\u5747\u5206<70\u6216\u638C\u63E1\u7387<50%\uFF09\r\n    const weakPoints = weakPointsArray\r\n      .filter(point => point.avgScore < 70 || point.masteryRate < 50)\r\n      .sort((a, b) => a.avgScore - b.avgScore)\r\n      .slice(0, 20); // \u8FD4\u56DE\u6700\u8584\u5F31\u768420\u4E2A\u77E5\u8BC6\u70B9\r\n\r\n    // \u6309\u5B66\u79D1\u5206\u7EC4\u7EDF\u8BA1\r\n    const bySubject: { [key: string]: any } = {};\r\n    weakPoints.forEach(point => {\r\n      const subject = point.subject;\r\n      if (!bySubject[subject]) {\r\n        bySubject[subject] = {\r\n          subject,\r\n          weakPointCount: 0,\r\n          avgScore: 0,\r\n          totalScore: 0\r\n        };\r\n      }\r\n      bySubject[subject].weakPointCount++;\r\n      bySubject[subject].totalScore += point.avgScore;\r\n    });\r\n\r\n    Object.values(bySubject).forEach((stats: any) => {\r\n      stats.avgScore = Math.round(stats.totalScore / stats.weakPointCount);\r\n      delete stats.totalScore;\r\n    });\r\n\r\n    res.json({\r\n      classId,\r\n      weakPoints,\r\n      bySubject: Object.values(bySubject),\r\n      summary: {\r\n        totalWeakPoints: weakPoints.length,\r\n        avgWeakPointScore: weakPoints.length > 0\r\n          ? Math.round(weakPoints.reduce((sum, p) => sum + p.avgScore, 0) / weakPoints.length)\r\n          : 0\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u8584\u5F31\u77E5\u8BC6\u70B9\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u8584\u5F31\u77E5\u8BC6\u70B9\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u73ED\u7EA7\u5B66\u4E60\u8D8B\u52BF\r\nrouter.get('/class/:classId/learning-trend', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n    const { period = '30d' } = req.query;\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const studentIds = activeStudents.map(s => s.userId);\r\n\r\n    // \u8BA1\u7B97\u65F6\u95F4\u8303\u56F4\r\n    const now = new Date();\r\n    let startDate = new Date();\r\n    switch (period) {\r\n      case '7d':\r\n        startDate.setDate(now.getDate() - 7);\r\n        break;\r\n      case '30d':\r\n        startDate.setDate(now.getDate() - 30);\r\n        break;\r\n      case '90d':\r\n        startDate.setDate(now.getDate() - 90);\r\n        break;\r\n      default:\r\n        startDate.setDate(now.getDate() - 30);\r\n    }\r\n\r\n    // \u83B7\u53D6\u5B66\u4E60\u4F1A\u8BDD\r\n    const sessions = await StudySession.find({\r\n      userId: { $in: studentIds },\r\n      createdAt: { $gte: startDate }\r\n    }).sort({ createdAt: 1 });\r\n\r\n    // \u6309\u65E5\u671F\u5206\u7EC4\u7EDF\u8BA1\r\n    const dailyStats: { [key: string]: any } = {};\r\n    sessions.forEach(session => {\r\n      const date = session.createdAt.toISOString().split('T')[0];\r\n      if (!dailyStats[date]) {\r\n        dailyStats[date] = {\r\n          date,\r\n          totalDuration: 0,\r\n          sessionCount: 0,\r\n          activeStudents: new Set()\r\n        };\r\n      }\r\n      dailyStats[date].totalDuration += session.duration || 0;\r\n      dailyStats[date].sessionCount++;\r\n      dailyStats[date].activeStudents.add(session.userId.toString());\r\n    });\r\n\r\n    // \u8F6C\u6362\u4E3A\u6570\u7EC4\r\n    const trendData = Object.values(dailyStats).map((stats: any) => ({\r\n      date: stats.date,\r\n      totalDuration: stats.totalDuration,\r\n      avgDuration: Math.round(stats.totalDuration / stats.activeStudents.size) || 0,\r\n      sessionCount: stats.sessionCount,\r\n      activeStudents: stats.activeStudents.size\r\n    }));\r\n\r\n    res.json({\r\n      classId,\r\n      period,\r\n      trend: trendData\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u5B66\u4E60\u8D8B\u52BF\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u5B66\u4E60\u8D8B\u52BF\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u83B7\u53D6\u4F5C\u4E1A\u7EDF\u8BA1\u5206\u6790\r\nrouter.get('/class/:classId/assignment-analytics', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    const assignments = await Assignment.find({ classId });\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const totalStudents = activeStudents.length;\r\n\r\n    const assignmentStats = assignments.map(assignment => {\r\n      const submittedCount = new Set(\r\n        assignment.submissions.map((s: any) => s.userId.toString())\r\n      ).size;\r\n\r\n      const scores = assignment.submissions.map((s: any) => s.score);\r\n      const avgScore = scores.length > 0\r\n        ? Math.round(scores.reduce((sum, s) => sum + s, 0) / scores.length)\r\n        : 0;\r\n\r\n      const passedCount = scores.filter(s => s >= assignment.passingScore).length;\r\n\r\n      return {\r\n        assignmentId: assignment._id,\r\n        title: assignment.title,\r\n        type: assignment.type,\r\n        totalStudents,\r\n        submittedCount,\r\n        submissionRate: totalStudents > 0 \r\n          ? Math.round((submittedCount / totalStudents) * 100) \r\n          : 0,\r\n        avgScore,\r\n        passRate: submittedCount > 0 \r\n          ? Math.round((passedCount / submittedCount) * 100) \r\n          : 0,\r\n        dueDate: assignment.dueDate\r\n      };\r\n    });\r\n\r\n    // \u6309\u7C7B\u578B\u7EDF\u8BA1\r\n    const byType: { [key: string]: any } = {};\r\n    assignmentStats.forEach(stat => {\r\n      const type = stat.type || 'homework';\r\n      if (!byType[type]) {\r\n        byType[type] = {\r\n          type,\r\n          count: 0,\r\n          avgSubmissionRate: 0,\r\n          avgScore: 0,\r\n          totalSubmissionRate: 0,\r\n          totalScore: 0\r\n        };\r\n      }\r\n      byType[type].count++;\r\n      byType[type].totalSubmissionRate += stat.submissionRate;\r\n      byType[type].totalScore += stat.avgScore;\r\n    });\r\n\r\n    Object.values(byType).forEach((stats: any) => {\r\n      stats.avgSubmissionRate = Math.round(stats.totalSubmissionRate / stats.count);\r\n      stats.avgScore = Math.round(stats.totalScore / stats.count);\r\n      delete stats.totalSubmissionRate;\r\n      delete stats.totalScore;\r\n    });\r\n\r\n    res.json({\r\n      classId,\r\n      assignments: assignmentStats,\r\n      byType: Object.values(byType),\r\n      summary: {\r\n        totalAssignments: assignments.length,\r\n        avgSubmissionRate: assignmentStats.length > 0\r\n          ? Math.round(\r\n              assignmentStats.reduce((sum, a) => sum + a.submissionRate, 0) / \r\n              assignmentStats.length\r\n            )\r\n          : 0,\r\n        avgScore: assignmentStats.length > 0\r\n          ? Math.round(\r\n              assignmentStats.reduce((sum, a) => sum + a.avgScore, 0) / \r\n              assignmentStats.length\r\n            )\r\n          : 0\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u4F5C\u4E1A\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u83B7\u53D6\u4F5C\u4E1A\u7EDF\u8BA1\u5931\u8D25' });\r\n  }\r\n});\r\n\r\n// \u751F\u6210\u4E2A\u6027\u5316\u5EFA\u8BAE\r\nrouter.get('/class/:classId/suggestions', authMiddleware, async (req, res) => {\r\n  try {\r\n    const { classId } = req.params;\r\n    const userId = (req.user as any)._id.toString();\r\n\r\n    const classInfo = await Class.findById(classId);\r\n    if (!classInfo) {\r\n      return res.status(404).json({ error: '\u73ED\u7EA7\u4E0D\u5B58\u5728' });\r\n    }\r\n\r\n    if (classInfo.teacherId.toString() !== userId) {\r\n      return res.status(403).json({ error: '\u65E0\u6743\u8BBF\u95EE' });\r\n    }\r\n\r\n    const activeStudents = classInfo.students.filter(s => s.status === 'active');\r\n    const studentIds = activeStudents.map(s => s.userId);\r\n\r\n    // \u83B7\u53D6\u5404\u79CD\u7EDF\u8BA1\u6570\u636E\r\n    const progressData = await UserProgress.find({ userId: { $in: studentIds } });\r\n    const avgMastery = progressData.length > 0\r\n      ? progressData.reduce((sum, p) => sum + p.bestScore, 0) / progressData.length\r\n      : 0;\r\n\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n    const recentSessions = await StudySession.countDocuments({\r\n      userId: { $in: studentIds },\r\n      createdAt: { $gte: sevenDaysAgo }\r\n    });\r\n\r\n    const assignments = await Assignment.find({ classId });\r\n    const avgSubmissionRate = assignments.length > 0\r\n      ? assignments.reduce((sum, a) => {\r\n          const submittedCount = new Set(\r\n            a.submissions.map((s: any) => s.userId.toString())\r\n          ).size;\r\n          return sum + (submittedCount / activeStudents.length);\r\n        }, 0) / assignments.length * 100\r\n      : 0;\r\n\r\n    // \u751F\u6210\u5EFA\u8BAE\r\n    const suggestions = [];\r\n\r\n    if (avgMastery < 60) {\r\n      suggestions.push({\r\n        type: 'warning',\r\n        category: '\u77E5\u8BC6\u638C\u63E1',\r\n        title: '\u73ED\u7EA7\u6574\u4F53\u638C\u63E1\u5EA6\u504F\u4F4E',\r\n        description: `\u73ED\u7EA7\u5E73\u5747\u638C\u63E1\u5EA6\u4E3A ${Math.round(avgMastery)}%\uFF0C\u4F4E\u4E8E\u53CA\u683C\u7EBF\u3002`,\r\n        action: '\u5EFA\u8BAE\u9488\u5BF9\u8584\u5F31\u77E5\u8BC6\u70B9\u7EC4\u7EC7\u4E13\u9898\u590D\u4E60\u8BFE\uFF0C\u52A0\u5F3A\u57FA\u7840\u77E5\u8BC6\u8BB2\u89E3\u3002',\r\n        priority: 'high'\r\n      });\r\n    } else if (avgMastery < 75) {\r\n      suggestions.push({\r\n        type: 'info',\r\n        category: '\u77E5\u8BC6\u638C\u63E1',\r\n        title: '\u90E8\u5206\u77E5\u8BC6\u70B9\u9700\u8981\u5F3A\u5316',\r\n        description: `\u73ED\u7EA7\u5E73\u5747\u638C\u63E1\u5EA6\u4E3A ${Math.round(avgMastery)}%\uFF0C\u6709\u63D0\u5347\u7A7A\u95F4\u3002`,\r\n        action: '\u5EFA\u8BAE\u67E5\u770B\u8584\u5F31\u77E5\u8BC6\u70B9\u5217\u8868\uFF0C\u9488\u5BF9\u6027\u5730\u5E03\u7F6E\u7EC3\u4E60\u4F5C\u4E1A\u3002',\r\n        priority: 'medium'\r\n      });\r\n    }\r\n\r\n    if (recentSessions < activeStudents.length * 3) {\r\n      suggestions.push({\r\n        type: 'warning',\r\n        category: '\u5B66\u4E60\u6D3B\u8DC3\u5EA6',\r\n        title: '\u73ED\u7EA7\u6D3B\u8DC3\u5EA6\u8F83\u4F4E',\r\n        description: '\u6700\u8FD1\u4E00\u5468\u5B66\u4E60\u6D3B\u8DC3\u5EA6\u4E0D\u8DB3\uFF0C\u90E8\u5206\u5B66\u751F\u53EF\u80FD\u7F3A\u4E4F\u5B66\u4E60\u52A8\u529B\u3002',\r\n        action: '\u5EFA\u8BAE\u901A\u8FC7\u4F5C\u4E1A\u3001\u6D4B\u9A8C\u7B49\u65B9\u5F0F\u6FC0\u53D1\u5B66\u751F\u5B66\u4E60\u79EF\u6781\u6027\uFF0C\u6216\u8FDB\u884C\u4E00\u5BF9\u4E00\u6C9F\u901A\u3002',\r\n        priority: 'high'\r\n      });\r\n    }\r\n\r\n    if (avgSubmissionRate < 70) {\r\n      suggestions.push({\r\n        type: 'warning',\r\n        category: '\u4F5C\u4E1A\u5B8C\u6210',\r\n        title: '\u4F5C\u4E1A\u63D0\u4EA4\u7387\u504F\u4F4E',\r\n        description: `\u5E73\u5747\u4F5C\u4E1A\u63D0\u4EA4\u7387\u4E3A ${Math.round(avgSubmissionRate)}%\uFF0C\u9700\u8981\u6539\u5584\u3002`,\r\n        action: '\u5EFA\u8BAE\u8DDF\u8FDB\u672A\u63D0\u4EA4\u4F5C\u4E1A\u7684\u5B66\u751F\uFF0C\u4E86\u89E3\u539F\u56E0\u5E76\u63D0\u4F9B\u5E2E\u52A9\u3002\u540C\u65F6\u53EF\u4EE5\u8003\u8651\u8C03\u6574\u4F5C\u4E1A\u96BE\u5EA6\u6216\u622A\u6B62\u65F6\u95F4\u3002',\r\n        priority: 'high'\r\n      });\r\n    }\r\n\r\n    // \u67E5\u627E\u9700\u8981\u5173\u6CE8\u7684\u5B66\u751F\r\n    const studentStats = await Promise.all(\r\n      activeStudents.slice(0, 10).map(async (student) => {\r\n        const studentProgress = await UserProgress.find({ userId: student.userId });\r\n        const studentAvgScore = studentProgress.length > 0\r\n          ? studentProgress.reduce((sum, p) => sum + p.bestScore, 0) / studentProgress.length\r\n          : 0;\r\n\r\n        const studentSessions = await StudySession.find({\r\n          userId: student.userId,\r\n          createdAt: { $gte: sevenDaysAgo }\r\n        });\r\n\r\n        return {\r\n          userName: student.userName,\r\n          avgScore: studentAvgScore,\r\n          recentSessions: studentSessions.length\r\n        };\r\n      })\r\n    );\r\n\r\n    const needAttention = studentStats.filter(s => s.avgScore < 50 || s.recentSessions === 0);\r\n    if (needAttention.length > 0) {\r\n      suggestions.push({\r\n        type: 'info',\r\n        category: '\u5B66\u751F\u5173\u6CE8',\r\n        title: '\u90E8\u5206\u5B66\u751F\u9700\u8981\u7279\u522B\u5173\u6CE8',\r\n        description: `\u6709 ${needAttention.length} \u540D\u5B66\u751F\u7684\u5B66\u4E60\u60C5\u51B5\u9700\u8981\u91CD\u70B9\u5173\u6CE8\u3002`,\r\n        action: `\u5EFA\u8BAE\u4E0E\u8FD9\u4E9B\u5B66\u751F\u8FDB\u884C\u4E00\u5BF9\u4E00\u4EA4\u6D41\uFF1A${needAttention.slice(0, 3).map(s => s.userName).join('\u3001')}${needAttention.length > 3 ? ' \u7B49' : ''}\u3002`,\r\n        priority: 'medium'\r\n      });\r\n    }\r\n\r\n    if (suggestions.length === 0) {\r\n      suggestions.push({\r\n        type: 'success',\r\n        category: '\u6574\u4F53\u60C5\u51B5',\r\n        title: '\u73ED\u7EA7\u5B66\u4E60\u72B6\u6001\u826F\u597D',\r\n        description: '\u73ED\u7EA7\u6574\u4F53\u5B66\u4E60\u60C5\u51B5\u8868\u73B0\u4F18\u79C0\uFF0C\u8BF7\u7EE7\u7EED\u4FDD\u6301\uFF01',\r\n        action: '\u53EF\u4EE5\u9002\u5F53\u589E\u52A0\u4E00\u4E9B\u6311\u6218\u6027\u5185\u5BB9\uFF0C\u5E2E\u52A9\u5B66\u751F\u8FDB\u4E00\u6B65\u63D0\u5347\u3002',\r\n        priority: 'low'\r\n      });\r\n    }\r\n\r\n    res.json({\r\n      classId,\r\n      suggestions,\r\n      generatedAt: new Date()\r\n    });\r\n  } catch (error) {\r\n    console.error('\u751F\u6210\u5EFA\u8BAE\u5931\u8D25:', error);\r\n    res.status(500).json({ error: '\u751F\u6210\u5EFA\u8BAE\u5931\u8D25' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n", "// backend/src/middleware/errorHandler.ts\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n/**\r\n * \u9519\u8BEF\u7801\u679A\u4E3E\r\n */\r\nexport enum ErrorCode {\r\n  // \u5BA2\u6237\u7AEF\u9519\u8BEF (4xx)\r\n  BAD_REQUEST = 'BAD_REQUEST',\r\n  UNAUTHORIZED = 'UNAUTHORIZED',\r\n  FORBIDDEN = 'FORBIDDEN',\r\n  NOT_FOUND = 'NOT_FOUND',\r\n  CONFLICT = 'CONFLICT',\r\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\r\n  TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',\r\n  \r\n  // \u670D\u52A1\u5668\u9519\u8BEF (5xx)\r\n  INTERNAL_ERROR = 'INTERNAL_ERROR',\r\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\r\n  DATABASE_ERROR = 'DATABASE_ERROR',\r\n  AI_SERVICE_ERROR = 'AI_SERVICE_ERROR',\r\n}\r\n\r\n/**\r\n * \u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\r\n */\r\nexport class AppError extends Error {\r\n  statusCode: number;\r\n  isOperational: boolean;\r\n  code: ErrorCode;\r\n\r\n  constructor(\r\n    message: string, \r\n    statusCode: number = 500, \r\n    code: ErrorCode = ErrorCode.INTERNAL_ERROR\r\n  ) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.code = code;\r\n    this.isOperational = true;\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\n/**\r\n * \u5F02\u6B65\u9519\u8BEF\u5305\u88C5\u5668\r\n */\r\nexport const asyncHandler = (\r\n  fn: (req: Request, res: Response, next: NextFunction) => unknown | Promise<unknown>\r\n) => {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    Promise.resolve(fn(req, res, next)).catch(next);\r\n  };\r\n};\r\n\r\n/**\r\n * \u5168\u5C40\u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\r\n */\r\nexport const errorHandler = (\r\n  err: Error | AppError,\r\n  req: Request,\r\n  res: Response,\r\n  _next: NextFunction\r\n) => {\r\n  // \u9ED8\u8BA4\u9519\u8BEF\u72B6\u6001\u7801\u548C\u9519\u8BEF\u7801\r\n  let statusCode = 500;\r\n  let message = '\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF';\r\n  let code = ErrorCode.INTERNAL_ERROR;\r\n  let isOperational = false;\r\n\r\n  // \u5904\u7406\u81EA\u5B9A\u4E49\u5E94\u7528\u9519\u8BEF\r\n  if (err instanceof AppError) {\r\n    statusCode = err.statusCode;\r\n    message = err.message;\r\n    code = err.code;\r\n    isOperational = err.isOperational;\r\n  }\r\n  // \u5904\u7406 MongoDB \u9519\u8BEF\r\n  else if (err.name === 'ValidationError') {\r\n    statusCode = 400;\r\n    message = '\u6570\u636E\u9A8C\u8BC1\u5931\u8D25';\r\n    code = ErrorCode.VALIDATION_ERROR;\r\n  } else if (err.name === 'CastError') {\r\n    statusCode = 400;\r\n    message = '\u65E0\u6548\u7684\u6570\u636E\u683C\u5F0F';\r\n    code = ErrorCode.BAD_REQUEST;\r\n  } else if ((err as any).code === 11000) {\r\n    statusCode = 409;\r\n    message = '\u6570\u636E\u5DF2\u5B58\u5728\uFF08\u91CD\u590D\u7684\u952E\u503C\uFF09';\r\n    code = ErrorCode.CONFLICT;\r\n    // \u63D0\u53D6\u91CD\u590D\u7684\u5B57\u6BB5\u540D\r\n    const field = Object.keys((err as any).keyPattern || {})[0];\r\n    if (field) {\r\n      message = `${field} \u5DF2\u5B58\u5728`;\r\n    }\r\n  }\r\n  // \u5904\u7406 JWT \u9519\u8BEF\r\n  else if (err.name === 'JsonWebTokenError') {\r\n    statusCode = 401;\r\n    message = '\u65E0\u6548\u7684\u8BA4\u8BC1\u4EE4\u724C';\r\n    code = ErrorCode.UNAUTHORIZED;\r\n  } else if (err.name === 'TokenExpiredError') {\r\n    statusCode = 401;\r\n    message = '\u8BA4\u8BC1\u4EE4\u724C\u5DF2\u8FC7\u671F\uFF0C\u8BF7\u91CD\u65B0\u767B\u5F55';\r\n    code = ErrorCode.UNAUTHORIZED;\r\n  }\r\n  // \u5904\u7406\u6570\u636E\u5E93\u8FDE\u63A5\u9519\u8BEF\r\n  else if (err.name === 'MongoNetworkError' || err.name === 'MongoTimeoutError') {\r\n    statusCode = 503;\r\n    message = '\u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5';\r\n    code = ErrorCode.DATABASE_ERROR;\r\n  }\r\n  // \u5176\u4ED6\u9519\u8BEF\r\n  else if (err.message) {\r\n    message = err.message;\r\n  }\r\n\r\n  // \u8BB0\u5F55\u9519\u8BEF\u65E5\u5FD7\r\n  const timestamp = new Date().toISOString();\r\n  const logData = {\r\n    timestamp,\r\n    statusCode,\r\n    code,\r\n    message: err.message,\r\n    url: req.originalUrl,\r\n    method: req.method,\r\n    ip: req.ip,\r\n    userAgent: req.get('user-agent'),\r\n    userId: (req as any).user?.userId || 'anonymous',\r\n  };\r\n\r\n  if (statusCode >= 500) {\r\n    console.error('[ERROR]', JSON.stringify({\r\n      ...logData,\r\n      stack: err.stack,\r\n    }, null, 2));\r\n  } else if (statusCode >= 400) {\r\n    console.warn('[WARN]', JSON.stringify(logData, null, 2));\r\n  }\r\n\r\n  // \u751F\u4EA7\u73AF\u5883\u4E0D\u8FD4\u56DE\u5806\u6808\u4FE1\u606F\r\n  const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\n  // \u8FD4\u56DE\u9519\u8BEF\u54CD\u5E94\r\n  res.status(statusCode).json({\r\n    success: false,\r\n    message,\r\n    code,\r\n    ...(isDevelopment\r\n      ? {\r\n          error: err.message,\r\n          stack: err.stack,\r\n          details: (err as any).details || undefined,\r\n        }\r\n      : {}),\r\n  });\r\n};\r\n\r\n/**\r\n * 404 Not Found \u5904\u7406\u5668\r\n */\r\nexport const notFoundHandler = (req: Request, res: Response, _next: NextFunction) => {\r\n  console.warn(`[404] ${req.method} ${req.originalUrl} - IP: ${req.ip}`);\r\n  \r\n  res.status(404).json({\r\n    success: false,\r\n    message: `\u8DEF\u7531 ${req.originalUrl} \u4E0D\u5B58\u5728`,\r\n    code: ErrorCode.NOT_FOUND,\r\n  });\r\n};\r\n\r\n/**\r\n * \u521B\u5EFA\u5E38\u7528\u9519\u8BEF\u7684\u4FBF\u6377\u51FD\u6570\r\n */\r\nexport const createError = {\r\n  badRequest: (message: string = '\u8BF7\u6C42\u53C2\u6570\u9519\u8BEF') => \r\n    new AppError(message, 400, ErrorCode.BAD_REQUEST),\r\n    \r\n  unauthorized: (message: string = '\u672A\u6388\u6743\uFF0C\u8BF7\u5148\u767B\u5F55') => \r\n    new AppError(message, 401, ErrorCode.UNAUTHORIZED),\r\n    \r\n  forbidden: (message: string = '\u6CA1\u6709\u6743\u9650\u8BBF\u95EE\u6B64\u8D44\u6E90') => \r\n    new AppError(message, 403, ErrorCode.FORBIDDEN),\r\n    \r\n  notFound: (resource: string = '\u8D44\u6E90') => \r\n    new AppError(`${resource}\u4E0D\u5B58\u5728`, 404, ErrorCode.NOT_FOUND),\r\n    \r\n  conflict: (message: string = '\u8D44\u6E90\u51B2\u7A81') => \r\n    new AppError(message, 409, ErrorCode.CONFLICT),\r\n    \r\n  tooManyRequests: (message: string = '\u8BF7\u6C42\u8FC7\u4E8E\u9891\u7E41\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5') => \r\n    new AppError(message, 429, ErrorCode.TOO_MANY_REQUESTS),\r\n    \r\n  internal: (message: string = '\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF') => \r\n    new AppError(message, 500, ErrorCode.INTERNAL_ERROR),\r\n    \r\n  serviceUnavailable: (message: string = '\u670D\u52A1\u6682\u65F6\u4E0D\u53EF\u7528') => \r\n    new AppError(message, 503, ErrorCode.SERVICE_UNAVAILABLE),\r\n    \r\n  databaseError: (message: string = '\u6570\u636E\u5E93\u64CD\u4F5C\u5931\u8D25') => \r\n    new AppError(message, 500, ErrorCode.DATABASE_ERROR),\r\n    \r\n  aiServiceError: (message: string = 'AI \u670D\u52A1\u6682\u65F6\u4E0D\u53EF\u7528') => \r\n    new AppError(message, 503, ErrorCode.AI_SERVICE_ERROR),\r\n};\r\n\r\n", "// backend/src/middleware/rateLimiter.ts\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\n/**\r\n * \u7B80\u5355\u7684\u5185\u5B58\u9650\u6D41\u5668\r\n */\r\nclass RateLimiter {\r\n  private requests: Map<string, number[]> = new Map();\r\n  private readonly windowMs: number;\r\n  private readonly maxRequests: number;\r\n\r\n  constructor(windowMs: number, maxRequests: number) {\r\n    this.windowMs = windowMs;\r\n    this.maxRequests = maxRequests;\r\n\r\n    // \u5B9A\u671F\u6E05\u7406\u8FC7\u671F\u8BB0\u5F55\r\n    setInterval(() => this.cleanup(), windowMs);\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u8D85\u8FC7\u9650\u6D41\r\n   */\r\n  isRateLimited(key: string): boolean {\r\n    const now = Date.now();\r\n    const requests = this.requests.get(key) || [];\r\n\r\n    // \u8FC7\u6EE4\u6389\u8FC7\u671F\u7684\u8BF7\u6C42\r\n    const validRequests = requests.filter(time => now - time < this.windowMs);\r\n\r\n    if (validRequests.length >= this.maxRequests) {\r\n      return true;\r\n    }\r\n\r\n    // \u8BB0\u5F55\u65B0\u8BF7\u6C42\r\n    validRequests.push(now);\r\n    this.requests.set(key, validRequests);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7406\u8FC7\u671F\u8BB0\u5F55\r\n   */\r\n  private cleanup() {\r\n    const now = Date.now();\r\n    for (const [key, requests] of this.requests.entries()) {\r\n      const validRequests = requests.filter(time => now - time < this.windowMs);\r\n      if (validRequests.length === 0) {\r\n        this.requests.delete(key);\r\n      } else {\r\n        this.requests.set(key, validRequests);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u91CD\u7F6E\u6307\u5B9A\u952E\u7684\u9650\u6D41\r\n   */\r\n  reset(key: string) {\r\n    this.requests.delete(key);\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u4E0D\u540C\u7C7B\u578B\u7684\u9650\u6D41\u5668\r\nexport const globalLimiter = new RateLimiter(60000, 100); // \u5168\u5C40\uFF1A\u6BCF\u5206\u949F100\u6B21\r\nexport const aiLimiter = new RateLimiter(60000, 20); // AI\u63A5\u53E3\uFF1A\u6BCF\u5206\u949F20\u6B21\r\nexport const authLimiter = new RateLimiter(300000, 10); // \u8BA4\u8BC1\u63A5\u53E3\uFF1A\u6BCF5\u5206\u949F10\u6B21\uFF08\u4EC5\u9650\u767B\u5F55/\u6CE8\u518C\uFF0C\u4E0D\u5305\u62EC/me\uFF09\r\n\r\n/**\r\n * \u9650\u6D41\u4E2D\u95F4\u4EF6\u5DE5\u5382\r\n */\r\nexport const createRateLimitMiddleware = (limiter: RateLimiter, keyGenerator?: (req: Request) => string) => {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    // \u751F\u6210\u9650\u6D41\u952E\uFF08\u9ED8\u8BA4\u4F7F\u7528 IP + \u7528\u6237ID\uFF09\r\n    const key = keyGenerator\r\n      ? keyGenerator(req)\r\n      : `${req.ip}:${(req as any).user?._id || 'anonymous'}`;\r\n\r\n    if (limiter.isRateLimited(key)) {\r\n      return res.status(429).json({\r\n        success: false,\r\n        message: '\u8BF7\u6C42\u8FC7\u4E8E\u9891\u7E41\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5',\r\n      });\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n\r\n/**\r\n * AI \u63A5\u53E3\u9650\u6D41\u4E2D\u95F4\u4EF6\r\n */\r\nexport const aiRateLimitMiddleware = createRateLimitMiddleware(\r\n  aiLimiter,\r\n  req => `ai:${req.ip}:${(req as any).user?._id || 'anonymous'}`\r\n);\r\n\r\n/**\r\n * \u8BA4\u8BC1\u63A5\u53E3\u9650\u6D41\u4E2D\u95F4\u4EF6\r\n */\r\nexport const authRateLimitMiddleware = createRateLimitMiddleware(\r\n  authLimiter,\r\n  req => `auth:${req.ip}`\r\n);\r\n\r\n/**\r\n * \u5168\u5C40\u9650\u6D41\u4E2D\u95F4\u4EF6\r\n */\r\nexport const globalRateLimitMiddleware = createRateLimitMiddleware(globalLimiter);\r\n\r\n", "// backend/src/utils/dbIndexes.ts\r\n/**\r\n * \u6570\u636E\u5E93\u7D22\u5F15\u4F18\u5316\u811A\u672C\r\n * \u8FD0\u884C\u6B64\u811A\u672C\u4EE5\u786E\u4FDD\u6240\u6709\u5FC5\u8981\u7684\u6570\u636E\u5E93\u7D22\u5F15\u5DF2\u521B\u5EFA\r\n */\r\n\r\nimport mongoose from 'mongoose';\r\nimport User from '../models/User';\r\nimport KnowledgePoint from '../models/KnowledgePoint';\r\nimport UserProgress from '../models/UserProgress';\r\nimport WrongQuestion from '../models/WrongQuestion';\r\nimport StudySession from '../models/StudySession';\r\nimport Assessment from '../models/Assessment';\r\n\r\n/**\r\n * \u521B\u5EFA\u6240\u6709\u5FC5\u8981\u7684\u6570\u636E\u5E93\u7D22\u5F15\r\n */\r\nexport async function createDatabaseIndexes() {\r\n  console.log('[DB Indexes] \u5F00\u59CB\u540C\u6B65\u6570\u636E\u5E93\u7D22\u5F15...');\r\n\r\n  const models = [\r\n    { name: 'User', model: User },\r\n    { name: 'KnowledgePoint', model: KnowledgePoint },\r\n    { name: 'UserProgress', model: UserProgress },\r\n    { name: 'WrongQuestion', model: WrongQuestion },\r\n    { name: 'StudySession', model: StudySession },\r\n    { name: 'Assessment', model: Assessment },\r\n  ];\r\n\r\n  let successCount = 0;\r\n\r\n  for (const { name, model } of models) {\r\n    try {\r\n      // \u4E3A\u6BCF\u4E2A\u6A21\u578B\u8BBE\u7F6E30\u79D2\u8D85\u65F6\r\n      await Promise.race([\r\n        model.syncIndexes(),\r\n        new Promise((_, reject) => \r\n          setTimeout(() => reject(new Error('\u7D22\u5F15\u540C\u6B65\u8D85\u65F6')), 30000)\r\n        )\r\n      ]);\r\n      console.log(`[DB Indexes] \u2713 ${name} \u7D22\u5F15\u540C\u6B65\u5B8C\u6210`);\r\n      successCount++;\r\n    } catch (error: any) {\r\n      console.warn(`[DB Indexes] \u26A0\uFE0F  ${name} \u7D22\u5F15\u540C\u6B65\u5931\u8D25:`, error.message);\r\n      // \u7EE7\u7EED\u5904\u7406\u5176\u4ED6\u6A21\u578B\uFF0C\u4E0D\u4E2D\u65AD\u6574\u4E2A\u6D41\u7A0B\r\n    }\r\n  }\r\n\r\n  if (successCount === models.length) {\r\n    console.log('[DB Indexes] \u2705 \u6240\u6709\u6570\u636E\u5E93\u7D22\u5F15\u540C\u6B65\u5B8C\u6210\uFF01');\r\n    return true;\r\n  } else if (successCount > 0) {\r\n    console.log(`[DB Indexes] \u26A0\uFE0F  \u90E8\u5206\u7D22\u5F15\u540C\u6B65\u5B8C\u6210 (${successCount}/${models.length})`);\r\n    return true;\r\n  } else {\r\n    console.warn('[DB Indexes] \u26A0\uFE0F  \u7D22\u5F15\u540C\u6B65\u5931\u8D25\uFF0C\u4F46\u4E0D\u5F71\u54CD\u5E94\u7528\u8FD0\u884C');\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u6240\u6709\u96C6\u5408\u7684\u7D22\u5F15\u4FE1\u606F\r\n */\r\nexport async function listDatabaseIndexes() {\r\n  console.log('[DB Indexes] \u83B7\u53D6\u6570\u636E\u5E93\u7D22\u5F15\u4FE1\u606F...\\n');\r\n\r\n  const collections = [\r\n    { name: 'User', model: User },\r\n    { name: 'KnowledgePoint', model: KnowledgePoint },\r\n    { name: 'UserProgress', model: UserProgress },\r\n    { name: 'WrongQuestion', model: WrongQuestion },\r\n    { name: 'StudySession', model: StudySession },\r\n    { name: 'Assessment', model: Assessment },\r\n  ];\r\n\r\n  for (const { name, model } of collections) {\r\n    try {\r\n      const indexes = await model.collection.getIndexes();\r\n      console.log(`\\n${name} \u7D22\u5F15:`);\r\n      Object.entries(indexes).forEach(([indexName, indexSpec]) => {\r\n        console.log(`  - ${indexName}:`, JSON.stringify(indexSpec));\r\n      });\r\n    } catch (error: any) {\r\n      console.error(`  \u274C \u83B7\u53D6 ${name} \u7D22\u5F15\u5931\u8D25:`, error.message);\r\n    }\r\n  }\r\n}\r\n\r\n// \u5982\u679C\u76F4\u63A5\u8FD0\u884C\u6B64\u811A\u672C\r\nif (typeof require !== 'undefined' && require.main === module) {\r\n  // \u52A8\u6001\u5BFC\u5165 dotenv \u4EE5\u907F\u514D ESM \u4E0B\u7684 require \u89C4\u5219\u544A\u8B66\r\n  import('dotenv').then(dotenv => dotenv.config());\r\n  \r\n  const mongoUri = process.env.MONGO_URI;\r\n  if (!mongoUri) {\r\n    console.error('\u9519\u8BEF: MONGO_URI \u672A\u5728 .env \u6587\u4EF6\u4E2D\u5B9A\u4E49');\r\n    process.exit(1);\r\n  }\r\n\r\n  mongoose\r\n    .connect(mongoUri)\r\n    .then(async () => {\r\n      console.log('\u2713 \u5DF2\u8FDE\u63A5\u5230 MongoDB');\r\n      \r\n      await createDatabaseIndexes();\r\n      await listDatabaseIndexes();\r\n      \r\n      await mongoose.connection.close();\r\n      console.log('\\n\u2713 \u6570\u636E\u5E93\u8FDE\u63A5\u5DF2\u5173\u95ED');\r\n      process.exit(0);\r\n    })\r\n    .catch(err => {\r\n      console.error('\u65E0\u6CD5\u8FDE\u63A5\u5230 MongoDB:', err);\r\n      process.exit(1);\r\n    });\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": ["import_mongoose", "mongoose", "import_mongoose", "mongoose", "import_dotenv", "import_express", "import_mongoose", "import_passport", "import_jsonwebtoken", "import_path", "mongoose", "passport", "GitHubStrategy", "QQStrategy", "path", "fs", "dotenv", "bcrypt", "jwt", "import_express", "import_mongoose", "mongoose", "import_jsonwebtoken", "JWT_SECRET", "jwt", "router", "import_express", "import_mongoose", "mongoose", "router", "import_express", "axios", "import_axios", "axios", "import_axios", "axios", "import_axios", "axios", "router", "response", "model", "import_express", "router", "import_express", "import_mongoose", "mongoose", "router", "import_express", "import_mongoose", "mongoose", "router", "import_express", "router", "import_express", "router", "session", "import_express", "import_mongoose", "mongoose", "router", "import_express", "router", "import_express", "path", "router", "import_express", "import_path", "import_fs", "import_bcryptjs", "router", "express", "multer", "path", "fs", "bcrypt", "import_express", "router", "import_express", "import_mongoose", "router", "import_express", "router", "import_express", "router", "import_express", "import_mongoose", "mongoose", "import_mongoose", "router", "import_express", "import_mongoose", "mongoose", "router", "express", "crypto", "StudySession", "KnowledgePoint", "import_express", "import_mongoose", "mongoose", "import_mongoose", "mongoose", "router", "express", "import_express", "router", "express", "import_express", "import_mongoose", "mongoose", "import_mongoose", "mongoose", "router", "express", "import_express", "router", "express", "import_express", "router", "express", "import_express", "import_mongoose", "mongoose", "router", "express", "import_express", "router", "express", "import_express", "router", "express", "import_mongoose", "model", "dotenv", "mongoUri", "mongoose", "dotenv", "express", "mongoose", "cors", "compression", "passport", "path", "jwt"]
}
